{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["(atoi)","3的幂","buzz","fizz","ii","leetbook《初级算法》题解","leetcod","strstr()","两个数组的交集","两数之和","买卖股票的最佳时机","二叉树的层序遍历","二叉树的最大深度","介绍","位1的个数","其他","分析思路","删除排序数组中的重复项","删除链表中的节点","删除链表的倒数第n个节点","加一","动态规划","反转字符串","反转链表","只出现一次的数字","可运行的代码","合并两个有序数组","合并两个有序链表","回文链表","外观数列","字符串","字符串中的第一个唯一字符","字符串转换整数","存在重复元素","实现","对称二叉树","将有序数组转换为二叉搜索树","小书《初级算法》的题解书籍。","打乱数组","打家劫舍","排序和搜索","数学","数组","整数反转","旋转图像","旋转数组","时空复杂度","最大子序和","最小栈","最长公共前缀","有效的字母异位词","有效的括号","有效的数独","杨辉三角","树","每道题的题解都包含以下三个方面：","汉明距离","爬楼梯","环形链表","目录","移动零","第一个错误的版本","缺失数字","罗马数字转整数","计数质数","设计问题","这是一本针对于","链表","颠倒二进制位","验证二叉搜索树","验证回文串"],"array/summary.html":["数组"],"array/remove-duplicates-from-sorted-array.html":["$j","$len","$num","*","*/","/**","0,","1;","=","@param","@return","class","count($nums);","for($i","function","integ","integer[]","j","removeduplicates(&$nums)","solut","{","一前一后，比较对应的值；","代码","删除排序数组中的重复项","到达数组最后。","双指针法。","向后移动一位；","和","复杂度","如此反复，直到","对应的值，j","思路","指针","时间复杂度：o(n)","的位置，j","空间复杂度：o(1)","继续向后移动一位；","若不相等，i","若相等，则删除","需要移动到"],"array/best-time-to-buy-and-sell-stock-ii.html":["$i","$max","$max)","$max;","$newmax;","$price","*","*/","/**","//","0;","1","1;","=","@param","@return","class","for($i","function","ii","integ","integer[]","maxprofit($prices)","return","solut","{","}","为卖出点，在","之后对总收益有没有增益，若有则买；","买卖股票的最佳时机","代码","利用贪心算法，判断一下买入当前点","可多次买入，最低点买，最高点买，再买在卖。","否则不买，且","复杂度","思路","时间复杂度：o(n)","最大收益","点重新买入。","空间复杂度：o(1)","贪心算法。"],"array/rotate-array.html":["$arr","$end","$end)","$i","$k","$k)","$k,","$len","$len;","$num","$nums;","$start","$start,","$thi","%","*","*/","/**","//","0,","0;","1);","=",">reverse($nums,","@param","@return","array_unshift","class","count($nums);","for(;$start","function","integ","integer[]","k","n","null","return","reverse(&$arr,","rotate(&$nums,","solut","while($i","{","}","一、常规法","个元素是为组b，前面的元素为组a。分别反转组a，组b，最后再反转整体即可。","二、多次反转法","代码","复杂度","大于","大于数组长度的问题。","将倒数","尾出头进","当","思路","数组","数组的长度，相当于只需要移动余数位","旋转数组","时间复杂度：o(k*n)","时间复杂度：o(n)","注意处理一下：k","确定那段区间进行反转","移动的时间复杂度为","空间复杂度：o(1)"],"array/contains-duplicate.html":["$hash","$i","$num","*","*/","/**","//","0;","=","@param","@return","[];","boolean","class","containsduplicate($nums)","for($i","function","hash","integer[]","key","num","ps:","solut","sort($nums);","sort()","valu","{","一、哈希表法","中存在，则表示","为元素个数，若","为元素值，","二、排序法","代码","内置函数一般被认为是快速排序，时间和空间复杂度都来自于快速排序。","利用内置函数快排","利用内置函数快排，然后遍历比较前后值是否相同。","利用冒泡等其他时间性能不佳的排序，可以把空间复杂度降到最低。","利用哈希表，以","复杂度","存在重复元素","已在","思路","时间复杂度：o(n)","时间复杂度：o(nlogn)","有重复值。","空间复杂度：o(n)","空间复杂度：o(nlogn)"],"array/single-number.html":["$i","$num","$result","*","*/","/**","//","0","00000","0;","0，0⊕0=0，1⊕0=1，0⊕1=1。","10010","18","1⊕1","=","==二进制==>","@param","@return","class","for($i","function","integ","integer[]","singlenumber($nums)","solut","{","⊕","一个数与","一个数与它本身异或等于0；","代码","例子：","只出现一次的数字","回到题目，题目中提到数组中除一个数出现一次以外，其他数都出现了两次。这道题目就可以利用异或运算特性来做，把数组中的数依次异或运算，出现两次的数异或运算为0，最终结果为出现一次的数。","复杂度","将一个十进制数进行异或运算，会发现如下特性：","异或等于他本身；","异或运算符合交换律和结合律。","异或运算规则是“同为0，异为1”，即","思路","时间复杂度：o(n)","特性1","特性2","空间复杂度：o(1)","题目要求线性复杂度和不适用额外空间来实现。这就不能使用常规方法来实现，利用异或的特性来实现。"],"array/intersection-of-two-arrays-ii.html":["$hash","$hash[$nums2[$i]]","$i","$i++;","$j","$j++;","$nums1","$nums2","$nums2)","$nums2[$i];","$nums2[$j])","$result","$result;","$result[]","*","*/","/**","//","0)","0,","0;",";","=","@param","@return","[];","class","for($i","function","hash","ii","integer[]","intersect($nums1,","key","m))","mlogm))","return","solut","sort","sort($nums1);","sort($nums2);","{","}","两个数组的交集","为数组的元素，valu","为该元素出现的次数。数组一记录到哈希表这个动作类似于一个生产者。","代码","使用","函数（快排），然后利用双指针，比较两个数组中相同的值。","利用哈希表，将数组一记录到哈希表中，哈希表的","复杂度","思路","放入","数组二扮演消费者的角色。遍历数组二，若数组二元素中有和哈希表中","方法一、排序+双指针","方法二、哈希表","时间复杂度：o(max(n,","时间复杂度：o(max(nlogn,","相同且出现次数（value）大于0，则将哈希表对应次数减一，并输出。","空间复杂度：o(min(n,","遍历","，其他语言中数组需要提前声明固定长度。"],"array/plus-one.html":["$digit","$digits;","$digits[$i]","$digits[0]","$flag","$i","$len","$sum","$sum;","*","*/","+","/**","//","0)","0);","0;","1","1,","10000","1;","1，最终会导致这个数的位数增加。如：9999（4位数）","9","9)",";","=","==",">","@param","@return","array_fill(0,","break;","class","count($digits);","false;","function","if($i","if($sum","integer[]","plusone($digits)","return","solut","true;","while($flag)","{","}","不产生进位；","不需要进位","产生进位；特殊情况：各个位全为","代码","加","加一","后每个位都向前进","复杂度","当一直进位到最高位，需要增加一位","思路","操作会产生两种结果。","时间复杂度：o(n)","是否继续","空间复杂度：o(1)","结束","进位","非9","（5位数）","，加"],"array/move-zeroes.html":["$counter","$i","$len","$num","*","*/","/**","//","0","0;","=","@param","@return","class","count($nums);","for($i","function","integer[]","movezeroes(&$nums)","null","solut","{","代码","元素。","则删除，并在数组末尾增加","复杂度","常规思路，遍历数组，若元素为","思路","时间复杂度：o(n)","的个数","移动零","空间复杂度：o(1)"],"array/two-sum.html":["$hash","$i","$num","$target","$target)","*","*/","/**","//","0;","0]","1]","1]，但可以是[0,","6，结果不能是[0,","=","@param","@return","[1,","[3,3],","array_flip($nums);","class","diff","for($i","function","hash","integ","integer[]","key","num","o(1)","o(1)。","o(n)，可以将","solut","target","twosum($nums,","{","不同即可。","两数之和","中。这样查找","代码","即，输入测试用例","双层遍历","复杂度","思路","或","方法一、暴力法","方法二、哈希表法","时间复杂度：o(n)","时间复杂度：o(n^2)","暴力法的瓶颈在于寻找差diff的时间复杂度过高，为","根据","特别注意，题目要求不能使用同一个元素。元素值相同没关系，只要保证元素对应的","的时间复杂度就变为了","空间复杂度：o(1)","空间复杂度：o(n)","结果查找对应的键值的复杂度将为","键值交换","键值交换后存到"],"array/valid-sudoku.html":["$blocki","$blockx","$board","$i","*","*/","/","/**","0;","3)","3;","=","@param","@return","boolean","class","floor($i","floor($j","for($i","function","isvalidsudoku($board)","solut","string[][]","{","代码","判断3*3方块内有无重复","判断同列有无重复","判断同行有无重复","复杂度","如何确定3*3方块最右上角位置？","思路","时间复杂度：o(n^2)","暴力法","有效的数独","空间复杂度：o(1)"],"array/rotate-image.html":["$i","$i)","$len","$matrix","$matrix;","$matrix[$i][$j]","$matrix[$i][$j];","$matrix[$j][$i]","$matrix[$j][$i];","$tmp","$tmp;","*","*/","+","/**","//","0;","=","@param","@return","class","count($matrix);","for($i","function","integer[][]","null","return","rotate(&$matrix)","solut","{","}","上下翻转","主对角线翻转","代码","复杂度","思路","旋转图像","时间复杂度：o(n^2)","空间复杂度：o(1)"],"string/summary.html":["字符串"],"string/reverse-string.html":["$i","$j","$s","*","*/","/**","0,","1;","=","@param","@return","class","count($s)","for($i","function","null","reversestring(&$s)","solut","string[]","{","代码","双指针","反转字符串","复杂度","思路","时间复杂度：o(n)","空间复杂度：o(1)"],"string/reverse-integer.html":["!=","$mod","$mod;","$valu","$x","%","*","*/","+","/","/**","0)","0;","1","10","10);","10;","10，得到个位数；","2**31","=",">","@param","@return","class","function","if($valu","integ","intval($x","mod(取模)","reverse($x)","solut","while($x","{","||","}","一个数","代码","以上过程，最先得出的一定是末位数（个位数），每次给取模的值乘10，加上原先的值，即可得到反转后的结果。","后，继续取模，可得到十位数；","复杂度","如此循环，直到这个数为0时，便可得到各个位数的所有数。","将这个数除10","思路","整数反转","时间复杂度：o(n)","求一个整数各个位上的数：","空间复杂度：o(1)"],"string/first-unique-character-in-a-string.html":["$hash","$i","$s","*","*/","/**","0;","=","@param","@return","[];","class","firstuniqchar($s)","for($i","function","hash","integ","item","key","m","solut","string","valu","{","中，既要存出现次数，也要存储在字符串中的键值。","代码","哈希表法，题目要求的是返回第一个唯一字符串的","唯一的字符串个数,","复杂度","字符串中的第一个唯一字符","当然，仅存次数也可以，再另外遍历一次字符串，判断字符出现的位置即可，复杂度相同。","思路","时间复杂度：o(n)","每个","空间复杂度：o(m)","，所以","，而不是"],"string/valid-anagram.html":["$hash","$i","$s","$t","$t)","*","*/","/**","//","0;","=","@param","@return","[];","boolean","class","for($i","function","isanagram($s,","solut","string","{","两个单词为异位词","代码","利用哈希表+生产消费的概念。","复杂度","字母异位词：使用字母相同和相同字母的个数也相同，构成不同的单词。","思路","时间复杂度：o(n)","有效的字母异位词","生产","空间复杂度：o(m)","若不存在，则两个单词不是异位词；","若存在有不为0的，则没全部消费掉，即两个单词不是异位词。","遍历哈希表，判断每个元素的值是否为0，若为0，则证明全部消费掉，即两个单词是异位词；","遍历第一个单词，将所有的字符存储哈希表中，并记录次数（视为生产者）；","遍历第二个单词，若当前字符在哈希表中存在，此字符在哈希表中的次数减一（视为消费者）；"],"string/valid-palindrome.html":["$i","$j","$len","$s","*","*/","/**","0,","1;","=","@param","@return","boolean","class","ctype_alnum","for($i","function","ispalindrome($s)","solut","strcasecmp","string","strlen($s);","{","代码","双指针法，一个指针（i）从头，一个指针（j）从尾，进行遍历比较，当指针索引i大于指针索引j时，遍历结束。","复杂度","思路","时间复杂度：o(n)","比较字符（忽略字母大小写）","空间复杂度：o(1)","题目中提到仅判断字母和数字且字母忽略大小写，可以借助php的两个内置函数实现。","验证回文串","验证字符是否仅含字母和（或）数字"],"string/string-to-integer-atoi.html":["$i","$i);","$num","$num;","$oper","$s","$slen","$stack","$stack[$i]","'","'';","')","(atoi)","){","*","*/","+=","/**","//","0;","1","1){","1.","1;","3.","31)","4.","=","==",">","@param","@return","[];","class","for($i","function","if($num","if($oper","integ","myatoi($s)","pow(10,","pow(2,","return","solut","string","{","}","代码","复杂度","字符串转换整数","字符类型分为空格、符合、数字、字母四种情况。","思路","数字栈","时间复杂度：o(n)","是否越界","然后再细分，分别处理四种情况。","确定符号","空间复杂度：o(m)","符号位","筛出有效数字入栈，暂存符号","详细解答见代码","遍历时先区别前面「有数字或符号」和「无数字或符号」这两大类；"],"string/implement-strstr.html":["$haystack","$needl","$needle)","''","'')","*","*/","+","/**","0","0;","1","1的位置，j","==","@param","@return","class","function","haystack","if($needl","if(strlen($haystack)","integ","j","needl","return","solut","string","strstr($haystack,","strstr()","{","为","代码","双指针法，利用两个指针分别遍历两个字符串进行比较。","复杂度","实现","当值不相等时，haystack","当值相等时，两指针分别递增；","思路","时间复杂度：o(n)","时，一定搜索不到，直接返回","时，始终返回","注意处理两种特殊情况：","的指针","空间复杂度：o(1)","重置为0，再进行重新比较。","长度小于","需要回溯到"],"string/count-and-say.html":["$counter","$i","$n","$sayvalu","$thi","$valu","'';","'1';","'11';","'a';","*","*/",".=","/**","//","0和前一个元素比较产生的前边界问题。","1","1)","1);","11。","1;","1，返回","1；n","2)","2，返回","2，返回时字符串长度为2。遍历时，从","3","4，需要先知道","=","==",">helper($n",">helper($n);","@param","@return","class","countandsay($n)","for($i","function","helper($n){","if($n","integ","n","return","solut","string","{","}","“读”操作并不复杂，但遍历时边界问题的比较处理起来比较难受。","为最后一个元素时且不等于前一个元素时，需要对前面的连续元素进行“读”，然后结束循环，则无法将最后一个元素“读”出。对于这个问题，在不增加额外判断的情况下，可以在遍历前对字符串尾部增加一个哨兵（拼上一个当前字符串不可能出现的字符，例如：a），这样来解决后边界问题。","代码","复杂度","外观数列","如何进行“读”操作？","开始，可以解决当前元素i","当","思路","时间复杂度：o(n^2)","欲求","的结果，在对其结果进行“读”操作，然后返回，由此递归；","空间复杂度：o(1)","结尾加个哨兵","若不相等，则进行对前面的连续元素进行“读”，并将计数器重置为1。","递归法","递归的尽头是","遍历比较当前元素和前一个元素是否相等，若相等则计数+1；"],"string/longest-common-prefix.html":["$i","$mixlen","$prefix","$str","$strs[0]","'';","*","*/","/**","//","0,","0;",":","=","?","@param","@return","class","for($i","function","if(empty($strs))","longestcommonprefix($strs)","n","php_int_max;","return","solut","string","string[]","{","代码","元素个数，m平均每个元素的字符长度。","元素的最小长度","判断每个元素中的第一个字符是否相同，第二个字符是否相同……当有不相同或者有元素字符遍历完毕，则结束。","复杂度","当前最大前缀","思路","方法一、横向比较","方法二、纵向比较","时间复杂度：o(nm)","最长公共前缀","最长公共前缀一定是数组元素都具有的，默认当前最长公共前缀为第一个元素值，进行遍历，拿第一个、第二个……分别与当前最长公共前缀比较，逐步最小最长公共前缀的范围，最终确定最长公共前缀。","空间复杂度：o(1)"],"linked-list/summary.html":["链表"],"linked-list/delete-node-in-a-linked-list.html":["$next","$node","$thi","$val","$val;","*","*/","/**","0;","=",">next",">next;",">val",">val;","@param","@return","__construct($val)","class","definit","deletenode($node)","function","link","list.","listnod","null;","public","singli","solut","{","}","……","代码","删除链表中的节点","复杂度","思路","时间复杂度：o(1)","空间复杂度：o(1)"],"linked-list/remove-nth-node-from-end-of-list.html":["!=","$head","$head;","$i","$n","$n)","$next","$next;","$p1","$p2","$q","$thi","$val","$val;","*","*/","/**","//","0,","0;","=","==",">next",">next;",">val","@param","@return","__construct($v","class","definit","for($i","function","if($p1","integ","link","list.","listnod","n","next;","null)","null;","p1","public","removenthfromend($head,","return","singli","solut","unset($q);","while($p1","{","}","个结点","为空证明是删除的第一个是节点","代码","先走n步","删除链表的倒数第","删除链表的倒数第n个节点","处理特殊情况：若p1走完n步，p1为空，则证明删除的是第一个节点。","复杂度","快慢指针法，利用指针p1、p2，让p1先走n步；然后p1、p2一起走，直到p1走到最后一个节点，p2这是恰巧走到倒数n+1个节点，然后进行删除操作。","思路","时间复杂度：o(n)","空间复杂度：o(1)"],"linked-list/reverse-linked-list.html":["!=","$head","$head;","$next","$next;","$p","$p;","$thi","$tmp","$tmp;","$val","$val;","*","*/","*listnod","*listnode)","/**","0,","0;",":=","=","==",">helper($head",">helper($head);",">next",">next);",">next;",">val","@param","@return","__construct($v","class","definit","func","function","head","head.next","helper($head){","if($head","int","link","list.","listnod","n","next","nil","null","null)","null;","p","pre","ps：","public","return","reverselist($head)","reverselist(head","singli","solut","struct","temp","temp.next","tmp","type","val","var","while($head","{","||","}","“归”：局部反转指针","“递”：指针后移一步","一直指向反转前的链表尾部，方便直接返回。","代码","关键是利用指针","利用一个辅助指针","反转链表","和","和一个临时指针","复杂度","始终操作的是同一条链表。","思路","指向递归时的当前节点，利用","指针","方法一、遍历法","方法二、递归法","时间复杂度：o(n)","每次都返回始终指向反转前的链表尾部（也即反转后链表的头）的指针p。","的调用栈。","空间复杂度：o(1)","空间复杂度：o(n)","终止条件：节点为空或节点的指向为空","维护一个新链表。一边遍历，一边把指针指向掉头，指向新链表。","进行局部节点指向掉头；","递归法会产生为","，使指针"],"linked-list/merge-two-sorted-lists.html":["!=","$l1","$l1;","$l2","$l2)","$l2;","$list","$list;","$next","$next;","$p","$thi","$val","$val;","&&","&listnode{","*","*/","*listnod","*listnode)","*listnode,","/**","//","0,","0;","1);",":",":=","=","===",">next",">next;",">val","?","@param","@return","__construct($v","class","definit","func","function","if($l1","int","link","list","list.","list1","list1.val","list2","listnod","listnode(","mergetwolists($l1,","mergetwolists(list1","new","next","next:","nil","nil,","null","null)","null){","null;","p","public","return","singli","solut","struct","type","val","val){","val:","while($l1","{","}","三指针遍历，利用两个指针遍历分别遍历两个链表，并比较对应值的大小，新指针指向小的节点，小的一方的指针也要往后移。","代码","去除头节点","只有一个链遍历完，则退出","合并两个有序链表","复杂度","思路","时间复杂度：o(m)","最后，要处理一下[一个长链，一个短链，长链还没走完]的情况。","空间复杂度：o(1)","若一个长链，一个短链，长链还没走完"],"linked-list/palindrome-linked-list.html":["!=","!==","$counter","$head","$head;","$len","$len++;","$next","$p","$p;","$start","$thi","$tmp","$tmp;","$val","$val;","(int)(($len","*","*/","+","/**","//","0;","1)/2)","1;","=",">next",">next;",">reverselist($p);",">val",">val){","@param","@return","__construct($val)","boolean","class","definit","false;","function","if($p","ispalindrome($head)","link","list.","listnod","next;","null)","null;","public","return","reverselist($head)","singli","solut","true;","while($count","while($head","while($p","{","}","代码","反转其中一个链表进行比较","反转第二段链表","反转链表","回文链表","复杂度","将链表一分为二","思路","时间复杂度：o(n)","空间复杂度：o(1)","第二段链表的起始位置","获取链表长度","长度"],"linked-list/linked-list-cycle.html":["!=","$head","$head;","$next","$p1","$p2","$p2)","$thi","$val","$val;","&&","*","*/","/**","0;","=","==",">next",">next;",">val","@param","@return","__construct($val)","boolean","class","definit","false;","function","hascycle($head)","if($p1","link","list.","listnod","null","null)","null;","public","return","singli","solut","true;","while($p1","{","}","为什么快指针每次走2步？","代码","判定有环：当快指针遇上慢指针则为有环","原因：具体走几步可以自己设定，让快指针每次走2步，而慢指针每次走1步，这样的话，误差较小，快指针在一圈就有可能遇上（位置重合）慢指针。","复杂度","如果步长过大，可能要多圈才能完成两指针的遇上（位置重合）。","快慢指针法","快指针在前，每次走2步","思路","慢指针在后，每次走1步","时间复杂度：o(n)","环形链表","空间复杂度：o(1)"],"tree/summary.html":["树"],"tree/maximum-depth-of-binary-tree.html":["$curlen","$height","$height++;","$height;","$left","$left;","$list","$list[]","$right","$right;","$root","$root;","$thi","$top","$val","$val;",")","*","*/","*treenod","*treenode)","+","/**","//","0","0)","0,","0;","0（递归的终止条件）","1","1;",":=",";","=","==","===",">",">left",">left)",">left),",">left;",">maxdepth($root",">right",">right)",">right))",">right;",">val","@param","@return","[];","__construct($v","array_shift($list);","binari","class","count($list);","definit","func","function","if(!$root)","if($root","if($top","int","integ","left","ll","max($thi","max(l,r)","maxdepth($root)","maxdepth(root","maxdepth(root.left)","maxdepth(root.right)","nil","node.","null","null)","null,","null;","public","return","right","right:=","root","rr，那么该二叉树的最大深度即为","solut","struct","tree","treenod","type","val","while(","while(count($list)","{","}","二叉树的最大深度","代码","分治","变形后，让每次消费节点时，遍历（内层）取出队列中当前层全部的节点，并把它的左右节点（若存在）放入队尾，这样用计数器记录外层遍历的次数，即最大高度。","合并结果","和","基于广度优先搜索（非递归法）的变形。","复杂度","左子树和右子树的最大深度","广度优先搜索是每次从队列中取出一个节点进行消费，并把它的左右节点（若存在）放入队尾。","当前节点为","思路","方法一、深度优先搜索","方法二、广度优先搜索","时间复杂度：o(n)","时，","每次取出当前层全部的节点","深度为","深度优先搜索","空间复杂度：o(h)","空间复杂度：o(m)","递归最大深度为h","递归法","递归返回条件","队列大小m，最坏为n"],"tree/validate-binary-search-tree.html":["!=","!==","!left.isvalid","!right.isvalid","$left","$left;","$list","$list[]","$max","$max)","$max)){","$min","$min,","$p","$q","$right","$right;","$root","$root;","$thi","$val","$val;","&&","'","'+inf');","($p","($q","(min,",")","*","*/","*treenod","*treenode)","/**","//","0)","0,","1.节点的左子树只包含小于当前节点的数。","2.节点的右子树只包含大于当前节点的数。","3.所有左子树和右子树自身必须也是二叉搜索树。",":=","=","==","===",">",">=",">helper($root",">helper($root,",">left",">left,",">left;",">right",">right,",">right;",">val",">val))",">val)){",">val,","@param","@return","[];","__construct($v","array_shift($list);","binari","bool","boolean","class","continue;","definit","fals","false;","func","function","helper($root,","helper(nod","helper(node.left)","helper(node.right)","helper(root)","if(","if(!$thi","if($p","if($root","if(($p","inf","inf'","inf',","int","issymmetric($root)","isvalid","isvalidbst($root)","isvalidbst(root","left","left.maxnod","left.minnod","max","max)","maxnod","min","minnod","nil","node","node.","node.v","null","null)","null,","null;","public","restyp","restype{}","result","result.isvalid","result.maxnod","result.minnod","return","right","right.maxnod","right.minnode.v","solut","struct","tree","treenod","true","true;","type","val","while(count($list)","{","||","}","二叉搜索树特征","代码","先把两个根节点放入队列；","判断当前节点是否符合二叉搜索树","判断节点值是否在","复杂度","大","将把节点p的左子节点和节点q的右子节点放入队列，将把节点p的右子节点和节点q的左子节点放入队列。","左右子树无效，则当前树一定不是有效的","归：判断节点值是否在","当前节点和子孙节点最小值的节点","思路","所有左子树和右子树自身必须“先是”二叉搜索树。","方法一、递归法","方法二、迭代法","时间复杂度：o(n)","根节点要大于左路的最大值，小于右路的最小值","空间复杂度：o(n)","终止：当前为空；","若两个节点（p、q）都是null，则局部是对称的，继续下一遍历；","若有一个节点不为空，或者两个节点的值不相等，则不对称，直接返回false；","范围内","范围内。","表示当前节点的最大取值（开区间点），+inf","表示当前节点的最小取值（开区间点），","表示正无穷","表示负无穷","进行下一循环。","迭代法，递归法转迭代必然需要用到队列进行辅助。","递归法","递归返回结果中需要返回的三个值","递：所有左子树和右子树自身必须“先是”二叉搜索树；","遍历弹出两个节点，进行比较：","重新判断当前树上谁是最大值点，最小值点","验证二叉搜索树"],"tree/symmetric-tree.html":["!$q)","!=","$left","$left;","$list","$list[]","$next","$p","$q","$q)","$right","$right;","$root","$root);","$root;","$thi","$val","$val;","&&","($p","($q","*","*/","/**","//","0)","0,","0;","1.","2.","3.","=","==",">",">check($p",">check($root,",">left",">left);",">left,",">left;",">right",">right)",">right,",">right;",">val",">val)",">val))","@param","@return","[];","__construct($v","__construct($val)","array_shift($list);","binari","boolean","check($p,","class","continue;","definit","false;","function","if(!$p","if($p","if(($p","issymmetric($root)","link","list.","listnod","node.","null","null)","null,","null;","public","return","singli","solut","tree","treenod","true;","while(count($list)","{","||","}","代码","值是否相同；","判断左右子树是否对称","复杂度","对称二叉树","左右子树是否对称？","左子树的右子树和右子树的左子树是否对称","左子树的左子树和右子树的右子树是否对称；","思路","方法一、递归法","方法二、非递归法","时间复杂度：o(n)","空间复杂度：o(n)","让左子树的右子树和右子树的左子树紧挨着入队，出队时进行比较。","让左子树的左子树和右子树的右子树紧挨着入队，出队时进行比较；","递归改为非递归法，借助队列来实现。"],"tree/binary-tree-level-order-traversal.html":["!==","$curlen","$left","$left;","$level","$level)","$list","$list[]","$node","$output","$output;","$output[$level][]","$output[]","$right","$right;","$root","$root;","$temp","$temp;","$temp[]","$thi","$top","$val","$val;","$value;","*","*/","*treenod","*treenode)","+","/**","//","0","0)","0,","0;","1],","1];",":=",";","=","==","===",">",">left",">left)",">left,",">left;",">right",">right)",">right,",">right;",">val",">val;",">val]];","@param","@return","[","[$node","[$root,","[[$root","[];","[][]int","];","__construct($v","__construct($value)","append(queue,","array_shift($list);","binari","class","count($list);","definit","func","function","if($nod","if($root","if($top","int","integer[][]","item","l","left","len(queue)","levelorder($root)","levelorder(root","list($node,","make([]*treenode,","make([][]int,","make([]int,","nil","node.","null)","null,","null;","public","queue","result","resultitem","return","right","root","root)","solut","struct","tree","treenod","type","val","while($curlen","while(count($list)","{","}","为了在输出中体现出“层”的概念，每次从队列中取出当前层的所有节点。","二叉树的层序遍历","代码","取出当前层的所有节点","复杂度","思路","方法一","方法二","时间复杂度：o(n)","根节点","由于输出时，需要体现“层”，队列的每个","空间复杂度：o(n)","结果集","输出","队列","需要保存节点和节点的层数。"],"tree/convert-sorted-array-to-binary-search-tree.html":["$hight)","$hight);","$left","$left;","$low,","$mid","$node","$node;","$num","$right","$right;","$thi","$val","$val;","*","*/","+","/","/**","0,","1);","1,","2);","=",">",">helper($nums,",">left",">right",">val","@param","@return","__construct($v","array_slic","binari","class","count($nums)","definit","function","helper($nums,","if($low","integer[]","intval(($low","new","node.","null)","null,","null;","php","public","return","solut","sortedarraytobst($nums)","tree","treenod","treenode($nums[$mid]);","{","}","为n，树构建为logn","二分法（递归）","二叉搜索树中序遍历的结果，则是一个有序数组。但并不能确定根节点的位置，任何一个点都可能是根节点。当增加了高度平衡这个条件时，有序数组中间位置就可以确定是树的根节点了。以这个思路把有序数组重新构建回二叉搜索树。","二叉搜索树是有序的，传入数组也是有序的，有序就要想到二分法。最简单保持树平衡的方式，就是使根节点左右子孙树节点相差不超过1个","代码","内置函数","复杂度","将有序数组转换为二叉搜索树","思路","时间复杂度：o(nlogn)","空间复杂度：o(n)","递归栈为n","（总节点数为奇数时，左右子树节点数相同；为偶数时，左右子树节点数差一）。"],"sort-search/summary.html":["排序和搜索"],"sort-search/merge-sorted-array.html":["$i","$m","$m,","$n","$n)","$nums1","$nums1;","$nums1[$i]","$nums1[$m];","$nums2","$nums2,","$nums2[$n])","$nums2[$n];","&&","*","*/","/**","0)","1","1;",";","=",">=",">=0","@param","@return","class","count($nums1)","function","if($n","if($nums1[$m]","integ","integer[]","m","merge(&$nums1,","n","null","nums1","nums2","return","solut","while($m","while($n","{","}","中即可。","了，但","从","代码","利用双指针从尾部遍历，即","双指针法。","可能会出现一种特殊情况，nums1","合并两个有序数组","处向前。","处向前，nums2","复杂度","已经开辟了足够的空间，遍历两个数组时比较谁大，谁插入","思路","指针已经到","指针还没遍历完，最后直接把他塞入","时间复杂度：o(n)","由于","的","的尾部。","空间复杂度：o(1)"],"sort-search/first-bad-version.html":["$hight","$low","$low;","$mid","$mid;","$n","$n;","*","*/","+","/*","/**","1;","=","@param","@return","api","class","defin","extend","firstbadversion($n)","function","integ","isbadvers","isbadversion($mid))","isbadversion($version){}","parent","public","return","solut","versioncontrol","versioncontrol.","while($low","{","}","二分法","代码","典型的二分查找","复杂度","思路","时间复杂度：o(logn)","空间复杂度：o(1)","第一个错误的版本"],"dynamic-programming/summary.html":["动态规划"],"dynamic-programming/climbing-stairs.html":["$i","$n","$p1","$p2","$p3","$thi","*","*/","+","/**","//","0;","1","1)","1;","1级台阶爬1级或从第n","1级方案和n","2)","2);","2)。","2;","2级台阶爬2级（由于限制只能爬1级或2级）；","2级方案之和，即f(n)","=","==",">helper($n","@param","@return","class","climbstairs($n)","f(n","for($i","function","helper($n){","if($n","integ","return","solut","{","}","代码","动态规划","复杂度","思路","所以第n级台阶的爬楼方案等于n","推出动态方程公式后，很容易想到递归法，但是递归法，重复计算量大，运行时间超时。所以使用三个滑动块来做，方案更优。","时间复杂度：o(n)","爬楼梯","的值","空间复杂度：o(1)","第1级台阶：1种方法（爬1级）；","第2级台阶：2种方法（爬2个1级或1个2级）；","第n级台阶：从第n","第一个点","这次多次重复递归计算","这题也符合斐波那契数列。","递归"],"dynamic-programming/best-time-to-buy-and-sell-stock.html":["$i","$maxprofit","$maxprofit)","$maxprofit;","$minpric","$minprice;","$price","$prices[$i]","*","*/","/**","//","0;","=","@param","@return","class","for($i","function","ii","integ","integer[]","maxprofit($prices)","php_int_max;","return","solut","{","}","与最低价差价最大时，更新最大收益","买卖股票的最佳时机","代码","动态规划","只能买入一次，相当于全局控制最大收益，需要确定买入点。","可以多次买入多次卖出，这样的话，实际上就是求前后两个上升数的和，无需确定买入点。","复杂度","思路","数组","时间复杂度：o(n)","最低价时买入，与最低价差价最大时卖出。","空间复杂度：o()","系列题目"],"dynamic-programming/maximum-subarray.html":["$i","$max","$maxsum","$maxsum)","$num","$sum","$sum;",")","*","*/","+","/**","//","0","0;","1)","1)，直接取","1]为子序列末端的最大序子列连续和]，即","1]时，f(i)","=","@param","@return","[0,","[以a[i]为子序列末端的最大序子列连续和]，将","[以a[i]为子序列末端的最大序子列连续和]，记为","[整个序列最大序列和]","a[i]","a[i],","a[i]是减益效果，则抛弃","a[i]是增益效果，则","class","f(i","f(i)","f(i)。","f(i)。（取a[i]相当于重新开始去探索可能存在的新的连续序列最大值）","f(i)？","for($i","function","if($sum","integ","integer[]","len","max(","maxsubarray($nums)","maxsum","maxsum，说明当前遍元素是正数，对","php_int_min;","solut","sum","sum。","sum；","{","}","、a[i]","与","代码","作为","假设，从第一个元素开始向后遍历累加，得[当前连续子序列和]","则是求","加上当前元素","加上当前元素后变小，但不影响大局；","加上当前元素后，全盘皆输。sum","加上当前元素后，得到新","取","后，","复杂度","大于[最大连续的子序列和]","如何求","对","将求","小于","当","当前连续和小于0，则需重置，重新连续计算","当前连续子序列和","思路","所以可以得到动态转移方程：","拆分成求","方法一、贪心算法","方法二、动态规划法","时间复杂度：o(n)","时，则更新","时，此时按兵不动，说明当前元素是一个相反数小于","时，说明当前元素是一个相反数大于","易理解一文中提到，动态规划的核心是“以子序列的结束点为基准，向前递推子序列关系”这点，个人感觉对理解动态规划有很大的帮助。","是减益效果，sum","是增益效果；","最大和","最大子序和","最大连续的子序列和","有关。[以a[i","没有大于","的值；","的最大值。","的负数，sum","的负数，这个负数对","空间复杂度：o(1)","老哥在详细解读动态规划的实现,","若“和”减少，f(i","若“和”增加，f(i","若新","若求","要放弃当前连续序列，从下一元素重新开始累加。","记录以a[i]为子序列末端的最大序子列连续和","题外话：@老虎"],"dynamic-programming/house-robber.html":["$hash","$i","$max","$num","$nums[0],","$nums[0];","$nums[1])","$nums[1]);","$p1","$p2","$p3","*","*/","+","/**","//","0;","1)","1))","1)，f(i","1)；","1]，那么","1，i","2","2)","2)。可以用利用三个滑动变量将其空间复杂度优化至o(1)。","2;","=","==","?","@param","@return","[","[0,","];","class","f(i","f(i)","f(i)。","for($i","function","if(count($nums)","integ","integer[]","len]","max($nums[0],","max(f(i","n","nums[i","nums[i]","nums[i],","nums[i]。最终，取两种情况的最大值，作为","return","rob($nums)","solut","{","、f(i","、nums[i]。","一种情况是不打劫","上面这段代码利用了长度为","代码","全局最大打劫金额","分析：遍历到","动态规划","取","取决于","另一种情况则是打劫","复杂度","如何求","将求整个打劫的最大金额拆分为求若干个遍历到i时的最大打劫金额，并记为f(i)。","就等于","思路","打劫了nums[i]，则必然不能打劫","打家劫舍","时的最大打劫金额，实际上每次用到的，只是是","时间复杂度：o(n)","时，f(i)","滑动块","点的最大打劫金额","由此可得动态转移方程：","的最大值。","的最大打劫金额，即","的空间复杂度来存储遍历到","空间复杂度：o(1)","若求整个打劫的最大金额则变成了求","，","，那么"],"design-question/summary.html":["设计问题"],"design-question/shuffle-an-array.html":["$i","$len","$num","$nums;","$obj","$ret_2","$thi","*","*/","/**","0;","=",">num",">nums;",">shuffle();","@param","@return","__construct($nums)","array","array.","class","configur","count($nums);","fisher","for($i","function","integer[]","it.","origin","privat","random","reset","reset()","reset();","return","shuffl","shuffle()","solut","yate","{","}","代码","复杂度","思路","打乱数组","时间复杂度：o(n)","洗牌算法","空间复杂度：o(1)","遍历数组，把当前元素与随机位置的元素进行交换。"],"design-question/min-stack.html":["$minstack","$stack","$thi","$val","$val);","$val;","(thi","*","*/","*minstack)","/**","//","0","0)","1]","1])","1],","1];",":=","=","==",">",">minstack)",">minstack);",">minstack[]",">minstack[count($thi",">stack)",">stack))",">stack);",">stack[]",">stack[count($thi","@param","@return","[];","[]int","__construct()","append(this.min,","append(this.stack,","array_pop($thi","call","class","constructor()","constructor();","data","func","function","getmin()","here.","if(count($thi","initi","instanti","int","int)","integ","len(this.min)","min","min($thi","minstack","minstack{}","null","obj","obj.getmin();","obj.pop();","obj.push(val);","obj.top();","object","param_3","param_4","pop()","privat","push($val)","push(val","return","stack","struct","structur","such:","this.min","this.min[:len(this.min)","this.min[len(this.min)","this.stack","this.stack[:len(this.stack)","this.stack[len(this.stack)","top()","type","val","val)","{","}","代码","利用一个数组模拟栈，一个数组存储当前栈的最小值。","复杂度","思路","时间复杂度：o()","最小值辅助栈","最小栈","栈","空间复杂度：o()"],"math/summary.html":["数学"],"math/fizz-buzz.html":["$i","$n","$output","*","*/","/**","1;","=","@param","@return","[];","buzz","class","fizz","fizzbuzz","fizzbuzz($n)","for($i","function","integ","solut","string[]","{","代码","关于","复杂度","思路","时间复杂度：o(n)","没难度，直接按题意来。","空间复杂度：o(1)","问题还有一个不错的小文章我倒要看看一个fizzbuzz能讲多少道理"],"math/count-primes.html":["$n","*","*/","/**","@param","@return","class","countprimes($n)","function","if($n","integ","j（j>1）倍一定是合数，标记出全部的合数，其余为质数","j（j>1）倍一定是合数，标记出全部的合数，其余为质数。详细见代码。","solut","{","代码","埃氏筛","埃氏筛，某个数","复杂度","思路","时间复杂度：o()","某个数","的","空间复杂度：o()","计数质数"],"math/power-of-three.html":["$i","$n","%","&&","*","**","*/","/**","0","0;","0。否则，n则不是3","1)","1162261467","1162261467。计算如下：","1;","1）。","2147483647","3","3**i","32","3的幂","3的幂次方的最大整数值为","=","==",">","@param","@return","boolean","class","for($i","function","if($n","integ","ispowerofthree($n)","n","n，等于则证明","o(1)","return","solut","true;","{","}","一定没有余数，即","为3的幂次方，则","代码","位机中整型占4个字长，最大值为","取模","复杂度","常规循环法，遍历判断","思路","方法一、常规循环","方法二、整数限制","时间复杂度：o(1)","时间复杂度：o(logn)","是","是否等于","的幂次方。","空间复杂度：o(1)","结果一定为","若","进阶法，不用循环递归，时间复杂度降低为","除以","（2^31"],"math/roman-to-integer.html":["\"c\"","\"cd\"","\"cm\"","\"d\"","\"i\"","\"iv\"","\"ix\"","\"l\"","\"m\"","\"v\"","\"x\"","\"xc\"","\"xl\"","$hash","$i","$s","$sum","*","*/","/**","0;","1,","10,","100,","1000,","4,","40,","400,","5,","50,","500,","9,","90,","900","=","=>","@param","@return","[","];","class","for($i","function","integ","romantoint($s)","solut","string","{","两个字符","代码","单个字符，2.","复杂度","将所有表示情况列出来","思路","时间复杂度：o(n)","由于传入的测试用例都是合法的，所以不用判断跨位情况，难度大大降低。","空间复杂度：o(1)","罗马数字转整数","遍历相加，只有两种情况。1."],"other/summary.html":["其他"],"other/number-of-1-bits.html":["$counter","$counter;","$i","$mask","$n","(0000……001)","*","*/","/**","0","0;","0；","1","1;","1；","=",">","@param","@return","class","for($i","function","hammingweight($n)","integ","n","return","solut","{","}","与运算，根据结果判断最低位的值。","代码","位1的个数","利用十进制","右移后，继续与运算，然后判断。循环32次。","和","复杂度","将","思路","时间复杂度：o(1)","空间复杂度：o(1)","若结果为","，则最低位为"],"other/hamming-distance.html":["$counter","$counter++;","$counter;","$mask","$num","$thi","$x","$y","$y)","$y;","$z","&","*","*/","/**","//","0)","0;","1","1)","1;","=","==",">",">>",">hammingweight($z);","@param","@return","^","class","function","hammingdistance($x,","hammingweight($num)","if($num","integ","return","solut","while($num","x，i","{","}","两数进行异或（同为0，异为1）运算，结果值二进制中","代码","在利用","复杂度","异或","思路","时间复杂度：o(n)","来计算二进制数中","汉明距离","的个数。","的个数，就代表两数字对应二进制位不同的位置的个数。","空间复杂度：o(1)","让","题：位1的个数"],"other/reverse-bits.html":["$an","$ans;","$i","$n","*","*/","/**","0;","1","1;","=",">","@param","@return","ans进行左移一位，然后加入最低位；","class","for($i","function","integ","return","reversebits($n)","solut","{","}","代码","传入值与","传入值进行右移一位。","复杂度","思路","时间复杂度：o(1)","每次遍历时，","空间复杂度：o(1)","结果值","进行与运算，得出最低位的值；","逐位颠倒，用1与传入值进行与运算，可计算出最低位的值。","颠倒二进制位"],"other/pascals-triangle.html":["$i","$numrow","$output","*","*/","/**","1;","1；","=","@param","@return","[];","class","for($i","function","generate($numrows)","integ","integer[][]","solut","{","代码","复杂度","思路","把杨辉三角看成一个二维数组，找规律可发现。","时间复杂度：o(n^2)","杨辉三角","每行两边的值都是","每行内部的值是上一行对应位置元素和它前一个的元素的和。","空间复杂度：o(1)"],"other/valid-parentheses.html":["$i","$s","$stack","'(',","')',","'['时入栈；","']'时，栈不为空，出栈并判断栈顶元素是否与当前符合对应；","'{',","'}',","*","*/","/**","0;","=","@param","@return","[];","boolean","class","for($i","function","isvalid($s)","solut","string","{","代码","利用栈来做。","复杂度","当字符为","思路","时间复杂度：o(n)","有效的括号","空间复杂度：o(m)","遍历结束后，栈要为空，才证明字符串中括号正确。"],"other/missing-number.html":["$i","$i;","$n","$n)","$num","$nums['l'.$nums[$i]]","$sum","(1","*","*/","+","/","/**","//","0,1,2,3……n","0;","1,n","2;","=","@param","@return","[0,","array_sum($nums);","class","count($nums);","for($i","function","integ","integer[]","key","missingnumber($nums)","n","n]","num","ps：此法用下列代码维持o(1)的空间复杂度，有些取巧的嫌疑。操作整型数组变成关联数组，这在php可以说得通。对于强类型语言来说，就很难实现了，并不能保证o(1)的空间复杂度。","return","solut","unset($nums[$i]);","{","}","个元素的数组，有一个","交换位置；","代码","利用高斯求和公式。","复杂度","思路","数列的和，然后减去","数组","数组整数和，则得到缺失数字的值。","方法一、键值交换","方法二、数学法","时间复杂度：o(n)","是包含","的","空间复杂度：o(1)","缺失数字","范围数没出现在这个数组中。","计算","这个题很容易想到借助一个单独的hash表来做，但时并不能满足进阶要求中的空间复杂度要为o(1)。所以不能借助新的辅助数组。","遍历交换后的数组，判断哪个key没有，即为缺失的值。","键值交换","，valu"]},"length":59},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.046153846153846156},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.07692307692307693},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"…":{"docs":{},"…":{"docs":{},"n":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}},"docs":{}}},"docs":{}}},"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}}},";":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.05128205128205128},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.03529411764705882},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.03508771929824561},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.022988505747126436},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0364963503649635},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.025974025974025976},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.046511627906976744},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}},"，":{"0":{"docs":{},"⊕":{"0":{"docs":{},"=":{"0":{"docs":{},"，":{"1":{"docs":{},"⊕":{"0":{"docs":{},"=":{"1":{"docs":{},"，":{"0":{"docs":{},"⊕":{"1":{"docs":{},"=":{"1":{"docs":{},"。":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},")":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.01791044776119403},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.024193548387096774},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}},"]":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"比":{"docs":{},"较":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"前":{"docs":{},"边":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"）":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}},"。":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"n":{"docs":{},"则":{"docs":{},"不":{"docs":{},"是":{"3":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},"docs":{}}}}}}}}},"；":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}}},"1":{"0":{"0":{"0":{"0":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"1":{"0":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.06153846153846154}}},"docs":{}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}},")":{"docs":{},";":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}},";":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"；":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}}},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"1":{"6":{"2":{"2":{"6":{"1":{"4":{"6":{"7":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.03125}},"。":{"docs":{},"计":{"docs":{},"算":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"。":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"8":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.06153846153846154}}},"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.04504504504504504},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.024193548387096774},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}},";":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.02702702702702703},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.024193548387096774},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.037037037037037035},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}},")":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.037037037037037035},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.034482758620689655},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},";":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}}},"{":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}},"/":{"2":{"docs":{},")":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}},"docs":{}},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"取":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}},")":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},"；":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"⊕":{"1":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}},"docs":{}},",":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}},"n":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{},"增":{"docs":{},"加":{"docs":{},"。":{"docs":{},"如":{"docs":{},"：":{"9":{"9":{"9":{"9":{"docs":{},"（":{"4":{"docs":{},"位":{"docs":{},"数":{"docs":{},"）":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"i":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"]":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02109704641350211}},"，":{"docs":{},"但":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}},"docs":{}}}}}},"那":{"docs":{},"么":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}},"为":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"末":{"docs":{},"端":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"序":{"docs":{},"子":{"docs":{},"列":{"docs":{},"连":{"docs":{},"续":{"docs":{},"和":{"docs":{},"]":{"docs":{},"，":{"docs":{},"即":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}},".":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"小":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"j":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}},"；":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}},"n":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"爬":{"1":{"docs":{},"级":{"docs":{},"或":{"docs":{},"从":{"docs":{},"第":{"docs":{},"n":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}},"docs":{}}}},"方":{"docs":{},"案":{"docs":{},"和":{"docs":{},"n":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}},"）":{"docs":{},"。":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}},"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},"*":{"docs":{},"*":{"3":{"1":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}},"docs":{}},"docs":{}}},")":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.029197080291970802}},";":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}},"。":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"利":{"docs":{},"用":{"docs":{},"三":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"变":{"docs":{},"量":{"docs":{},"将":{"docs":{},"其":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"优":{"docs":{},"化":{"docs":{},"至":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}},"时":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"2":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"，":{"docs":{},"从":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}},"docs":{}}}}}}}}}}},".":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"大":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"爬":{"2":{"docs":{},"级":{"docs":{},"（":{"docs":{},"由":{"docs":{},"于":{"docs":{},"限":{"docs":{},"制":{"docs":{},"只":{"docs":{},"能":{"docs":{},"爬":{"1":{"docs":{},"级":{"docs":{},"或":{"2":{"docs":{},"级":{"docs":{},"）":{"docs":{},"；":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"docs":{}}}},"方":{"docs":{},"案":{"docs":{},"之":{"docs":{},"和":{"docs":{},"，":{"docs":{},"即":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}}}}},"3":{"1":{"docs":{},")":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.023529411764705882}}}},"2":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332}},"的":{"docs":{},"幂":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":10.010416666666666}},"次":{"docs":{},"方":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"整":{"docs":{},"数":{"docs":{},"值":{"docs":{},"为":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}}}}}},")":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.045454545454545456}}},";":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.045454545454545456}}},".":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"所":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"自":{"docs":{},"身":{"docs":{},"必":{"docs":{},"须":{"docs":{},"也":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},"*":{"docs":{},"i":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}},"4":{"0":{"0":{"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{},".":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"知":{"docs":{},"道":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"5":{"0":{"0":{"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"6":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}},"docs":{}}}}}}}}},"9":{"0":{"0":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}},"docs":{},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018}},")":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},",":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{},"(":{"0":{"0":{"0":{"0":{"docs":{},"…":{"docs":{},"…":{"0":{"0":{"1":{"docs":{},")":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}},"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":5.011764705882353}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"(":{"docs":{},"$":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}}}}},"$":{"docs":{},"p":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}},"q":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686}}}}}},"b":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":5.03030303030303}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}},"f":{"docs":{},"i":{"docs":{},"z":{"docs":{},"z":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":5.03030303030303}},"b":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}},";":{"docs":{},"$":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02109704641350211}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.018050541516245487},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.011061946902654867},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01953125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.011940298507462687},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.03529411764705882},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02109704641350211},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}},"e":{"docs":{},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}},"j":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}}},"(":{"docs":{},"n":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357}}},"i":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.028735632183908046},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0364963503649635}},")":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.017241379310344827},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0364963503649635}},"。":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},"（":{"docs":{},"取":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"去":{"docs":{},"探":{"docs":{},"索":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"新":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"序":{"docs":{},"列":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"）":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"？":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}},"i":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.027777777777777776},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":5.02},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":5.008264462809917},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.03508771929824561}}},"n":{"docs":{},"t":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}},"e":{"docs":{},"g":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.03333333333333333},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.06451612903225806},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.036585365853658534},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.046511627906976744},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.049586776859504134},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.041237113402061855},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.03529411764705882},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"[":{"docs":{},"]":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471}}}},"docs":{}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"$":{"docs":{},"x":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}},"(":{"docs":{},"$":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}},"f":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"'":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}},"f":{"docs":{},"(":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"$":{"docs":{},"i":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}},"n":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}},"u":{"docs":{},"m":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.023529411764705882},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},"s":{"1":{"docs":{},"[":{"docs":{},"$":{"docs":{},"m":{"docs":{},"]":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}}},"docs":{}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}},"o":{"docs":{},"d":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}},"p":{"1":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}},"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}},"l":{"1":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},"docs":{},"o":{"docs":{},"w":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"h":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}}}}}}}}}}},"!":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}},"p":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}},"(":{"docs":{},"$":{"docs":{},"p":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686}}}}}}}}}}}}}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{},"(":{"docs":{},"$":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},",":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}},".":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}},"l":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"《":{"docs":{},"初":{"docs":{},"级":{"docs":{},"算":{"docs":{},"法":{"docs":{},"》":{"docs":{},"题":{"docs":{},"解":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}},"f":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}}}}}}},"n":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}},"]":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}},"s":{"docs":{},"t":{"1":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}},"2":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099}}},"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099}},".":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.023622047244094488},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.02527075812274368},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.027472527472527472},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.022598870056497175},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"e":{"docs":{},"(":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}},"l":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":5.018867924528302}}},"$":{"docs":{},"h":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.047619047619047616},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.03773584905660377},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}},"[":{"docs":{},"]":{"docs":{"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}},"[":{"docs":{},"]":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},"u":{"docs":{},"r":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}},"r":{"docs":{},"t":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}},"docs":{},")":{"docs":{},";":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}}},")":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}}}}}}}}}},"i":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}},"u":{"docs":{},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.04597701149425287}},"。":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}},"；":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}},"c":{"docs":{},"h":{"docs":{},":":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"交":{"docs":{},"集":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":5.008264462809917}}}}}}},"单":{"docs":{},"词":{"docs":{},"为":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}},"字":{"docs":{},"符":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/two-sum.html":{"ref":"array/two-sum.html","tf":10.010309278350515}}}},"进":{"docs":{},"行":{"docs":{},"异":{"docs":{},"或":{"docs":{},"（":{"docs":{},"同":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"异":{"docs":{},"为":{"1":{"docs":{},"）":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"值":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"机":{"docs":{"./":{"ref":"./","tf":0.027777777777777776},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":5.02},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":10.087719298245615}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":10.002985074626865}}}}}},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":10.003300330033003}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"特":{"docs":{},"征":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"则":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"但":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"确":{"docs":{},"定":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"都":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"当":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"高":{"docs":{},"度":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"这":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"时":{"docs":{},"，":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"了":{"docs":{},"。":{"docs":{},"以":{"docs":{},"这":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"把":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"重":{"docs":{},"新":{"docs":{},"构":{"docs":{},"建":{"docs":{},"回":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"传":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"也":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"有":{"docs":{},"序":{"docs":{},"就":{"docs":{},"要":{"docs":{},"想":{"docs":{},"到":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"。":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"保":{"docs":{},"持":{"docs":{},"树":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"孙":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"相":{"docs":{},"差":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"个":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"多":{"docs":{},"次":{"docs":{},"反":{"docs":{},"转":{"docs":{},"法":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}},"排":{"docs":{},"序":{"docs":{},"法":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}},"分":{"docs":{},"法":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},"（":{"docs":{},"递":{"docs":{},"归":{"docs":{},"）":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":10}}}},"位":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":10.018181818181818}}}}}},"docs":{},"机":{"docs":{},"中":{"docs":{},"整":{"docs":{},"型":{"docs":{},"占":{"4":{"docs":{},"个":{"docs":{},"字":{"docs":{},"长":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"为":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}}}},"docs":{}}}}}}},"其":{"docs":{},"他":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/summary.html":{"ref":"other/summary.html","tf":11}}}},"分":{"docs":{},"析":{"docs":{},"思":{"docs":{},"路":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}},"：":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}},"治":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},"删":{"docs":{},"除":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"项":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":10.020833333333334}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":10.014925373134329}}}}}},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":10}}}}}}}}}}}}}},"加":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}},"一":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/plus-one.html":{"ref":"array/plus-one.html","tf":10.00900900900901}}},"上":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"后":{"docs":{},"变":{"docs":{},"小":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"大":{"docs":{},"局":{"docs":{},"；":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}},"，":{"docs":{},"全":{"docs":{},"盘":{"docs":{},"皆":{"docs":{},"输":{"docs":{},"。":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"dynamic-programming/summary.html":{"ref":"dynamic-programming/summary.html","tf":11},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":10.033333333333333}}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":10.00361010830325},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}}}}},"第":{"docs":{},"二":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/single-number.html":{"ref":"array/single-number.html","tf":10.015384615384615}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"，":{"docs":{},"则":{"docs":{},"退":{"docs":{},"出":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}}}},"能":{"docs":{},"买":{"docs":{},"入":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"全":{"docs":{},"局":{"docs":{},"控":{"docs":{},"制":{"docs":{},"最":{"docs":{},"大":{"docs":{},"收":{"docs":{},"益":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"定":{"docs":{},"买":{"docs":{},"入":{"docs":{},"点":{"docs":{},"。":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}},"多":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"最":{"docs":{},"低":{"docs":{},"点":{"docs":{},"买":{"docs":{},"，":{"docs":{},"最":{"docs":{},"高":{"docs":{},"点":{"docs":{},"买":{"docs":{},"，":{"docs":{},"再":{"docs":{},"买":{"docs":{},"在":{"docs":{},"卖":{"docs":{},"。":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"docs":{}}}}}}}}}}}}}}}},"以":{"docs":{},"多":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"多":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"就":{"docs":{},"是":{"docs":{},"求":{"docs":{},"前":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"上":{"docs":{},"升":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"确":{"docs":{},"定":{"docs":{},"买":{"docs":{},"入":{"docs":{},"点":{"docs":{},"。":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":10.008064516129032}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":10.005494505494505}}}}}}}},"结":{"docs":{},"果":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}},"回":{"docs":{},"文":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":10.005649717514125}}}}},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"提":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"数":{"docs":{},"都":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"目":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"特":{"docs":{},"性":{"docs":{},"来":{"docs":{},"做":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"依":{"docs":{},"次":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"观":{"docs":{},"数":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":10.011111111111111}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/summary.html":{"ref":"string/summary.html","tf":11}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"字":{"docs":{},"符":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":10.024390243902438}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{},"整":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":5.011764705882353}}}}}}},"类":{"docs":{},"型":{"docs":{},"分":{"docs":{},"为":{"docs":{},"空":{"docs":{},"格":{"docs":{},"、":{"docs":{},"符":{"docs":{},"合":{"docs":{},"、":{"docs":{},"数":{"docs":{},"字":{"docs":{},"、":{"docs":{},"字":{"docs":{},"母":{"docs":{},"四":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"字":{"docs":{},"母":{"docs":{},"相":{"docs":{},"同":{"docs":{},"和":{"docs":{},"相":{"docs":{},"同":{"docs":{},"字":{"docs":{},"母":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"也":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"构":{"docs":{},"成":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":10.013698630136986}}}}}}}},"实":{"docs":{},"现":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":5.018867924528302}}}},"对":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}},"称":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":10.00390625}}}}}},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"j":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}},"将":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":10.007352941176471}}}}}}}}}}}}}},"倒":{"docs":{},"数":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}},"一":{"docs":{},"个":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"异":{"docs":{},"或":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"现":{"docs":{},"如":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"除":{"1":{"0":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}},"docs":{}},"docs":{}}}}},"链":{"docs":{},"表":{"docs":{},"一":{"docs":{},"分":{"docs":{},"为":{"docs":{},"二":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"p":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"q":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"将":{"docs":{},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"p":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"q":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"整":{"docs":{},"个":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"金":{"docs":{},"额":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"为":{"docs":{},"求":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"i":{"docs":{},"时":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"金":{"docs":{},"额":{"docs":{},"，":{"docs":{},"并":{"docs":{},"记":{"docs":{},"为":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"。":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"表":{"docs":{},"示":{"docs":{},"情":{"docs":{},"况":{"docs":{},"列":{"docs":{},"出":{"docs":{},"来":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}}}}}}}}},"小":{"docs":{},"书":{"docs":{},"《":{"docs":{},"初":{"docs":{},"级":{"docs":{},"算":{"docs":{},"法":{"docs":{},"》":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"书":{"docs":{},"籍":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}}}}}}}}}},"于":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}},"打":{"docs":{},"乱":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":10.011764705882353}}}}},"家":{"docs":{},"劫":{"docs":{},"舍":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":10.007299270072993}}}}},"劫":{"docs":{},"了":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"然":{"docs":{},"不":{"docs":{},"能":{"docs":{},"打":{"docs":{},"劫":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"和":{"docs":{},"搜":{"docs":{},"索":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"sort-search/summary.html":{"ref":"sort-search/summary.html","tf":11}}}}}}},"数":{"docs":{},"学":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/summary.html":{"ref":"math/summary.html","tf":11}}},"组":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/summary.html":{"ref":"array/summary.html","tf":11},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"余":{"docs":{},"数":{"docs":{},"位":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}},"二":{"docs":{},"扮":{"docs":{},"演":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"的":{"docs":{},"角":{"docs":{},"色":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"二":{"docs":{},"，":{"docs":{},"若":{"docs":{},"数":{"docs":{},"组":{"docs":{},"二":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"有":{"docs":{},"和":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"和":{"docs":{},"，":{"docs":{},"则":{"docs":{},"得":{"docs":{},"到":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}},"字":{"docs":{},"栈":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"减":{"docs":{},"去":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"反":{"docs":{},"转":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":10.016666666666667}}}}}},"旋":{"docs":{},"转":{"docs":{},"图":{"docs":{},"像":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":10.037735849056604}}}},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":10.008547008547009}}}}}},"时":{"docs":{},"空":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}},"docs":{},"n":{"docs":{},")":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}},"^":{"2":{"docs":{},")":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}},"docs":{}},"m":{"docs":{},")":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421}}}}},"k":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}},")":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}}}}}}},"，":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}},"一":{"docs":{},"定":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"不":{"docs":{},"到":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}},"始":{"docs":{},"终":{"docs":{},"返":{"docs":{},"回":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}},"则":{"docs":{},"更":{"docs":{},"新":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"此":{"docs":{},"时":{"docs":{},"按":{"docs":{},"兵":{"docs":{},"不":{"docs":{},"动":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"反":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"反":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"金":{"docs":{},"额":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"每":{"docs":{},"次":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"是":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"序":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":10.005747126436782}}}}},"收":{"docs":{},"益":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}},"和":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"小":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":10.004219409282701}}},"值":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":10.013157894736842}},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"具":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"、":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"…":{"docs":{},"…":{"docs":{},"分":{"docs":{},"别":{"docs":{},"与":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"最":{"docs":{},"小":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"确":{"docs":{},"定":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"。":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"，":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"[":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"链":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"短":{"docs":{},"链":{"docs":{},"，":{"docs":{},"长":{"docs":{},"链":{"docs":{},"还":{"docs":{},"没":{"docs":{},"走":{"docs":{},"完":{"docs":{},"]":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"低":{"docs":{},"价":{"docs":{},"时":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"与":{"docs":{},"最":{"docs":{},"低":{"docs":{},"价":{"docs":{},"差":{"docs":{},"价":{"docs":{},"最":{"docs":{},"大":{"docs":{},"时":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"。":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":10}}}}}}},"括":{"docs":{},"号":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":10.026315789473685}}}},"数":{"docs":{},"独":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":10.022727272727273}}}}}},"重":{"docs":{},"复":{"docs":{},"值":{"docs":{},"。":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}},"关":{"docs":{},"。":{"docs":{},"[":{"docs":{},"以":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"杨":{"docs":{},"辉":{"docs":{},"三":{"docs":{},"角":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":10.03125}}}}}},"树":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/summary.html":{"ref":"tree/summary.html","tf":11}}},"每":{"docs":{},"道":{"docs":{},"题":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"：":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}}}}}}}}}}}},"个":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}},"次":{"docs":{},"都":{"docs":{},"返":{"docs":{},"回":{"docs":{},"始":{"docs":{},"终":{"docs":{},"指":{"docs":{},"向":{"docs":{},"反":{"docs":{},"转":{"docs":{},"前":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"（":{"docs":{},"也":{"docs":{},"即":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"）":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"p":{"docs":{},"。":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"，":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}},"行":{"docs":{},"两":{"docs":{},"边":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}}},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"上":{"docs":{},"一":{"docs":{},"行":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"它":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"。":{"docs":{"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"汉":{"docs":{},"明":{"docs":{},"距":{"docs":{},"离":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":10.012195121951219}}}}}},"爬":{"docs":{},"楼":{"docs":{},"梯":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":10.012345679012345}}}}},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":10.010309278350515}}}}}},"目":{"docs":{},"录":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}},"移":{"docs":{},"动":{"docs":{},"零":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":10.025641025641026}}},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096}}}}}}}}}}},"第":{"1":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"：":{"1":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"爬":{"1":{"docs":{},"级":{"docs":{},"）":{"docs":{},"；":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}},"docs":{}}}}}}},"docs":{}}}}}},"2":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"：":{"2":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"爬":{"2":{"docs":{},"个":{"1":{"docs":{},"级":{"docs":{},"或":{"1":{"docs":{},"个":{"2":{"docs":{},"级":{"docs":{},"）":{"docs":{},"；":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":10.016129032258064}}}}}}},"点":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}},"二":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}}}},"n":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"：":{"docs":{},"从":{"docs":{},"第":{"docs":{},"n":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}},"缺":{"docs":{},"失":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/missing-number.html":{"ref":"other/missing-number.html","tf":10.010526315789473}}}}}},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"整":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":10.012987012987013}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"质":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"math/count-primes.html":{"ref":"math/count-primes.html","tf":10.03225806451613}}}}},"算":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}},"设":{"docs":{},"计":{"docs":{},"问":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"design-question/summary.html":{"ref":"design-question/summary.html","tf":11}}}}}},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"本":{"docs":{},"针":{"docs":{},"对":{"docs":{},"于":{"docs":{"./":{"ref":"./","tf":0.013888888888888888}}}}}}}},"次":{"docs":{},"多":{"docs":{},"次":{"docs":{},"重":{"docs":{},"复":{"docs":{},"递":{"docs":{},"归":{"docs":{},"计":{"docs":{},"算":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}},"题":{"docs":{},"也":{"docs":{},"符":{"docs":{},"合":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"。":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}}}},"个":{"docs":{},"题":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"借":{"docs":{},"助":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"来":{"docs":{},"做":{"docs":{},"，":{"docs":{},"但":{"docs":{},"时":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"满":{"docs":{},"足":{"docs":{},"进":{"docs":{},"阶":{"docs":{},"要":{"docs":{},"求":{"docs":{},"中":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"要":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"能":{"docs":{},"借":{"docs":{},"助":{"docs":{},"新":{"docs":{},"的":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"linked-list/summary.html":{"ref":"linked-list/summary.html","tf":11}}}},"颠":{"docs":{},"倒":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":10.023255813953488}}}}}}}},"验":{"docs":{},"证":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":10.002212389380531}}}}}}},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.013888888888888888},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":10.026315789473685}}}}},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"仅":{"docs":{},"含":{"docs":{},"字":{"docs":{},"母":{"docs":{},"和":{"docs":{},"（":{"docs":{},"或":{"docs":{},"）":{"docs":{},"数":{"docs":{},"字":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}},"$":{"docs":{},"j":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.041666666666666664},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}},"l":{"1":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.02197802197802198}},";":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099}}}},"2":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.027472527472527472}},")":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},";":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},"docs":{},"e":{"docs":{},"n":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.042735042735042736},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.02702702702702703},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.05263157894736842},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},";":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}},"f":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},")":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},";":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},"[":{"docs":{},"]":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0234375},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358}}}}}}},"o":{"docs":{},"w":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903}},",":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}}},";":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}},"n":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.04838709677419355},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.041666666666666664},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"u":{"docs":{},"m":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.03529411764705882},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"s":{"1":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.024793388429752067},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}},";":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.024193548387096774}}}},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}}}},"2":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}},")":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471}}},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},";":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516}}}}}}},",":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}},"docs":{},";":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},";":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},";":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}},"docs":{},"'":{"docs":{},"l":{"docs":{},"'":{"docs":{},".":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}},";":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}},"e":{"docs":{},")":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}},"x":{"docs":{},"t":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},";":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.07462686567164178},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766}},";":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}},")":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}},";":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}},"i":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.023529411764705882},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.024193548387096774},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}},")":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}},";":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},";":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}},"m":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.03225806451612903}},"a":{"docs":{},"x":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.04},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},")":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},")":{"docs":{},"{":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},";":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.03508771929824561}},")":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}},";":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}},")":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}},";":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"$":{"docs":{},"j":{"docs":{},"]":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}},";":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}}}}}}}},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}},";":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025}}}}},"o":{"docs":{},"d":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}},";":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}},"i":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}},"n":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}},"e":{"docs":{},";":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}},"d":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},";":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}},",":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}},"p":{"1":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.023622047244094488},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.030927835051546393},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},"2":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.047244094488188976},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.041237113402061855},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},")":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}},"3":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.03296703296703297},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.07344632768361582},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01171875}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}},"s":{"docs":{},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421}}}}}}},";":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}},"n":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}},"s":{"docs":{},";":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}},")":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}},"k":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.042735042735042736}},")":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096}}},",":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}},"s":{"docs":{"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}},",":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}},"c":{"docs":{},"k":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}},"r":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421}},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}},"docs":{}}}}},"u":{"docs":{},"m":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}},"a":{"docs":{},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}},"t":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}},"h":{"docs":{},"i":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.021660649819494584},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0231023102310231},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.015486725663716814},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.02734375},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.011940298507462687},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.04411764705882353},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.03529411764705882},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02109704641350211},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927}},")":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927}}}}}}}},"m":{"docs":{},"p":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588}},";":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588}}}}},")":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}},"o":{"docs":{},"p":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.011940298507462687}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}},"[":{"docs":{},"]":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}},"[":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}},"docs":{}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.036101083032490974},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.03954802259887006},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}},";":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.023622047244094488},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903}},")":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766}},";":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471}},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471}}},"[":{"docs":{},"]":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}},"t":{"docs":{},"_":{"2":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}},"docs":{}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.011061946902654867},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}},")":{"docs":{},";":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018}},"s":{"docs":{},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"[":{"0":{"docs":{},"]":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}},"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.02702702702702703}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.02702702702702703}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},";":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}},"x":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},"u":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.06666666666666667},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223}},"e":{"docs":{},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}},";":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}},")":{"docs":{},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"x":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.05},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}},"[":{"docs":{},"$":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}}}}},"]":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}},"b":{"docs":{},"j":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}},"q":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.011061946902654867},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.03125}},")":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}},"y":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},")":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}},";":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}},"z":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}},"*":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.041666666666666664},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.04},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.06837606837606838},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0547945205479452},"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.049586776859504134},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.05128205128205128},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.061855670103092786},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.09090909090909091},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.03773584905660377},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.06666666666666667},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.05},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.04878048780487805},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.07142857142857142},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.05263157894736842},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.03529411764705882},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.05660377358490566},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.05263157894736842},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.11940298507462686},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.09448818897637795},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.09747292418772563},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.09340659340659341},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.062146892655367235},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.08247422680412371},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.10561056105610561},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.07743362831858407},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0859375},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.08358208955223881},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.09558823529411764},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.04032258064516129},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.04838709677419355},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.03508771929824561},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.022988505747126436},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.029197080291970802},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.08235294117647059},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.05063291139240506},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.06060606060606061},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.12903225806451613},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.041666666666666664},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.03896103896103896},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.04878048780487805},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.046511627906976744},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.0625},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.05263157894736842},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.05263157894736842}},"/":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.018050541516245487},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.016483516483516484},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0165016501650165},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01953125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.058823529411764705},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02531645569620253},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099}},"e":{"docs":{},")":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},",":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},"e":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686}}}}}}}}}}},"*":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}},"/":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.045454545454545456},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"*":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},"*":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.018050541516245487},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.016483516483516484},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0165016501650165},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01953125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.047058823529411764},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02531645569620253},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"/":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.04504504504504504},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.058823529411764705},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.016483516483516484},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.017699115044247787},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.01791044776119403},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.037037037037037035},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.028735632183908046},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}},"=":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.0625},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.06},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0410958904109589},"array/single-number.html":{"ref":"array/single-number.html","tf":0.046153846153846156},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.05785123966942149},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.0990990990990991},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.07692307692307693},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.05154639175257732},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.06818181818181818},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.11320754716981132},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.06666666666666667},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.06666666666666667},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.04878048780487805},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.047619047619047616},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.07894736842105263},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.07058823529411765},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.12222222222222222},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.06578947368421052},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.07462686567164178},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.10236220472440945},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.09025270758122744},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.07692307692307693},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.11299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.07216494845360824},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.08250825082508251},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.08185840707964602},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.08203125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.09253731343283582},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.09558823529411764},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.04838709677419355},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.06451612903225806},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.07407407407407407},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.07017543859649122},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.04597701149425287},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.058394160583941604},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.058823529411764705},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.046413502109704644},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.06060606060606061},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.03896103896103896},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.05454545454545454},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.04878048780487805},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.046511627906976744},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.0625},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.05263157894736842},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.042105263157894736}},"=":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.015486725663716814},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01953125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"=":{"docs":{},"=":{"docs":{},">":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.09230769230769231}}}}}}}},"=":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}},">":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.16883116883116883}}}},"@":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.03418803418803419},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.03305785123966942},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.041237113402061855},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.047619047619047616},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.03773584905660377},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.03225806451612903},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.011940298507462687},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.03225806451612903},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}},"docs":{},")":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},";":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}}}}}}}}},"s":{"docs":{},")":{"docs":{"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"$":{"docs":{},"p":{"docs":{},",":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}},"j":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.08333333333333333},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}},"（":{"docs":{},"j":{"docs":{},">":{"1":{"docs":{},"）":{"docs":{},"倍":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"合":{"docs":{},"数":{"docs":{},"，":{"docs":{},"标":{"docs":{},"记":{"docs":{},"出":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"合":{"docs":{},"数":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"为":{"docs":{},"质":{"docs":{},"数":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}},"。":{"docs":{},"详":{"docs":{},"细":{"docs":{},"见":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.03333333333333333},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.018050541516245487},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0231023102310231},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.028761061946902654},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0234375},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.037037037037037035},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.03529411764705882},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.02109704641350211},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}},"$":{"docs":{},"x":{"docs":{},")":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}},"e":{"docs":{},"{":{"docs":{},"}":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}},"e":{"docs":{},"t":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},"(":{"docs":{},")":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},";":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},")":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}},"b":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},":":{"docs":{},"=":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}},"r":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}},"{":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.041666666666666664},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.06},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.042735042735042736},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0547945205479452},"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.05785123966942149},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.05405405405405406},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.05128205128205128},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.041237113402061855},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.045454545454545456},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.05660377358490566},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.06666666666666667},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.05},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.04878048780487805},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.047619047619047616},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.05263157894736842},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.03529411764705882},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.03773584905660377},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.05263157894736842},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.05970149253731343},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.03937007874015748},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.04332129963898917},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.04395604395604396},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.05084745762711865},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.061855670103092786},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0462046204620462},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.04424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.050746268656716415},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.03676470588235294},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.056451612903225805},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.06451612903225806},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.05263157894736842},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.028735632183908046},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.029197080291970802},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.047058823529411764},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.08860759493670886},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.06060606060606061},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.06451612903225806},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.041666666666666664},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.025974025974025976},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.06097560975609756},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.046511627906976744},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.0625},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.05263157894736842},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.042105263157894736}}},"一":{"docs":{},"前":{"docs":{},"一":{"docs":{},"后":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}}}}}}},"、":{"docs":{},"常":{"docs":{},"规":{"docs":{},"法":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"法":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}},"个":{"docs":{},"数":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}},"与":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}},"它":{"docs":{},"本":{"docs":{},"身":{"docs":{},"异":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"；":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}},"docs":{}}}}}}}}}}},"直":{"docs":{},"指":{"docs":{},"向":{"docs":{},"反":{"docs":{},"转":{"docs":{},"前":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"不":{"docs":{},"打":{"docs":{},"劫":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}},"定":{"docs":{},"没":{"docs":{},"有":{"docs":{},"余":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}}},"代":{"docs":{},"码":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"到":{"docs":{},"达":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"。":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333}},"法":{"docs":{},"。":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"（":{"docs":{},"i":{"docs":{},"）":{"docs":{},"从":{"docs":{},"头":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"（":{"docs":{},"j":{"docs":{},"）":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"当":{"docs":{},"指":{"docs":{},"针":{"docs":{},"索":{"docs":{},"引":{"docs":{},"i":{"docs":{},"大":{"docs":{},"于":{"docs":{},"指":{"docs":{},"针":{"docs":{},"索":{"docs":{},"引":{"docs":{},"j":{"docs":{},"时":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"遍":{"docs":{},"历":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"位":{"docs":{},"；":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}}},"和":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"指":{"docs":{},"针":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}},"如":{"docs":{},"此":{"docs":{},"反":{"docs":{},"复":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"便":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"各":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"。":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"何":{"docs":{},"确":{"docs":{},"定":{"3":{"docs":{},"*":{"3":{"docs":{},"方":{"docs":{},"块":{"docs":{},"最":{"docs":{},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"位":{"docs":{},"置":{"docs":{},"？":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}}}}}},"docs":{}}},"docs":{}}},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}},"求":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"果":{"docs":{},"步":{"docs":{},"长":{"docs":{},"过":{"docs":{},"大":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"要":{"docs":{},"多":{"docs":{},"圈":{"docs":{},"才":{"docs":{},"能":{"docs":{},"完":{"docs":{},"成":{"docs":{},"两":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"遇":{"docs":{},"上":{"docs":{},"（":{"docs":{},"位":{"docs":{},"置":{"docs":{},"重":{"docs":{},"合":{"docs":{},"）":{"docs":{},"。":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"指":{"docs":{},"针":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}},"已":{"docs":{},"经":{"docs":{},"到":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}},"还":{"docs":{},"没":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"他":{"docs":{},"塞":{"docs":{},"入":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}},"向":{"docs":{},"递":{"docs":{},"归":{"docs":{},"时":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}}},"的":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.06451612903225806},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"j":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}},"个":{"docs":{},"数":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564}},"。":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}},"，":{"docs":{},"就":{"docs":{},"代":{"docs":{},"表":{"docs":{},"两":{"docs":{},"数":{"docs":{},"字":{"docs":{},"对":{"docs":{},"应":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"就":{"docs":{},"变":{"docs":{},"为":{"docs":{},"了":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"在":{"docs":{},"对":{"docs":{},"其":{"docs":{},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"由":{"docs":{},"此":{"docs":{},"递":{"docs":{},"归":{"docs":{},"；":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"。":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}},"尾":{"docs":{},"部":{"docs":{},"。":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}},"值":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}},"；":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"打":{"docs":{},"劫":{"docs":{},"金":{"docs":{},"额":{"docs":{},"，":{"docs":{},"即":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"这":{"docs":{},"个":{"docs":{},"负":{"docs":{},"数":{"docs":{},"对":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}},"幂":{"docs":{},"次":{"docs":{},"方":{"docs":{},"。":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332},"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"docs":{},"n":{"docs":{},")":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471}}}}}}},")":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}},"h":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},")":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"位":{"docs":{},"；":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}}}}},"若":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"i":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"对":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"重":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"不":{"docs":{},"是":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"；":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"删":{"docs":{},"除":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}}}}},"存":{"docs":{},"在":{"docs":{},"有":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"没":{"docs":{},"全":{"docs":{},"部":{"docs":{},"消":{"docs":{},"费":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"不":{"docs":{},"是":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"。":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"链":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"短":{"docs":{},"链":{"docs":{},"，":{"docs":{},"长":{"docs":{},"链":{"docs":{},"还":{"docs":{},"没":{"docs":{},"走":{"docs":{},"完":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"p":{"docs":{},"、":{"docs":{},"q":{"docs":{},"）":{"docs":{},"都":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"则":{"docs":{},"局":{"docs":{},"部":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"下":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"；":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"对":{"docs":{},"称":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"；":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"“":{"docs":{},"和":{"docs":{},"”":{"docs":{},"减":{"docs":{},"少":{"docs":{},"，":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}},"增":{"docs":{},"加":{"docs":{},"，":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}},"新":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.017241379310344827}}},"求":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"整":{"docs":{},"个":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"金":{"docs":{},"额":{"docs":{},"则":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"求":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636}}}}}},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{"array/remove-duplicates-from-sorted-array.html":{"ref":"array/remove-duplicates-from-sorted-array.html","tf":0.020833333333333332}}}}},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}},"保":{"docs":{},"存":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"层":{"docs":{},"数":{"docs":{},"。":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}}}}},"m":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.04878048780487805},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516}},"a":{"docs":{},"x":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}},"(":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"$":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401}}}}},"docs":{}}}}}}},"l":{"docs":{},",":{"docs":{},"r":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}}}},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"正":{"docs":{},"数":{"docs":{},"，":{"docs":{},"对":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{},"*":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.024793388429752067}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},"取":{"docs":{},"模":{"docs":{},")":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"$":{"docs":{},"s":{"docs":{},")":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},"docs":{}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},"docs":{}}}}}}}}}}}}}},"(":{"docs":{},"&":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},"(":{"docs":{},"$":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686}},"{":{"docs":{},"}":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.08},"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.0743801652892562},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.05405405405405406},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.09433962264150944},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.03529411764705882},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.05970149253731343},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.047244094488188976},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.04693140794223827},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.04945054945054945},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.06779661016949153},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.061855670103092786},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0462046204620462},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.048672566371681415},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.04477611940298507},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.03676470588235294},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.056451612903225805},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.08064516129032258},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.07017543859649122},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.08860759493670886},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.020833333333333332},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.05454545454545454},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.06097560975609756},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.06976744186046512},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}},"为":{"3":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"次":{"docs":{},"方":{"docs":{},"，":{"docs":{},"则":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}},"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}},"卖":{"docs":{},"出":{"docs":{},"点":{"docs":{},"，":{"docs":{},"在":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"若":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}},"值":{"docs":{},"，":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"一":{"docs":{},"记":{"docs":{},"录":{"docs":{},"到":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"这":{"docs":{},"个":{"docs":{},"动":{"docs":{},"作":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"。":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"且":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"结":{"docs":{},"束":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"则":{"docs":{},"无":{"docs":{},"法":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"出":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"在":{"docs":{},"不":{"docs":{},"增":{"docs":{},"加":{"docs":{},"额":{"docs":{},"外":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"前":{"docs":{},"对":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"（":{"docs":{},"拼":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"a":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"后":{"docs":{},"边":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"证":{"docs":{},"明":{"docs":{},"是":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"节":{"docs":{},"点":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"2":{"docs":{},"步":{"docs":{},"？":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}}},"docs":{}}}}}}}}},"了":{"docs":{},"在":{"docs":{},"输":{"docs":{},"出":{"docs":{},"中":{"docs":{},"体":{"docs":{},"现":{"docs":{},"出":{"docs":{},"“":{"docs":{},"层":{"docs":{},"”":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"，":{"docs":{},"树":{"docs":{},"构":{"docs":{},"建":{"docs":{},"为":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}}}},"之":{"docs":{},"后":{"docs":{},"对":{"docs":{},"总":{"docs":{},"收":{"docs":{},"益":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"增":{"docs":{},"益":{"docs":{},"，":{"docs":{},"若":{"docs":{},"有":{"docs":{},"则":{"docs":{},"买":{"docs":{},"；":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"下":{"docs":{},"买":{"docs":{},"入":{"docs":{},"当":{"docs":{},"前":{"docs":{},"点":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}}}}}}}}}}},"内":{"docs":{},"置":{"docs":{},"函":{"docs":{},"数":{"docs":{},"快":{"docs":{},"排":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"比":{"docs":{},"较":{"docs":{},"前":{"docs":{},"后":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}},"冒":{"docs":{},"泡":{"docs":{},"等":{"docs":{},"其":{"docs":{},"他":{"docs":{},"时":{"docs":{},"间":{"docs":{},"性":{"docs":{},"能":{"docs":{},"不":{"docs":{},"佳":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"降":{"docs":{},"到":{"docs":{},"最":{"docs":{},"低":{"docs":{},"。":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"以":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"一":{"docs":{},"记":{"docs":{},"录":{"docs":{},"到":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"的":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"生":{"docs":{},"产":{"docs":{},"消":{"docs":{},"费":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"。":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"指":{"docs":{},"针":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}},"数":{"docs":{},"组":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"。":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"即":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}}}}}}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}}}},"栈":{"docs":{},"来":{"docs":{},"做":{"docs":{},"。":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}},"高":{"docs":{},"斯":{"docs":{},"求":{"docs":{},"和":{"docs":{},"公":{"docs":{},"式":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"买":{"docs":{},"，":{"docs":{},"且":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}}},"点":{"docs":{},"重":{"docs":{},"新":{"docs":{},"买":{"docs":{},"入":{"docs":{},"。":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"金":{"docs":{},"额":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"array/best-time-to-buy-and-sell-stock-ii.html":{"ref":"array/best-time-to-buy-and-sell-stock-ii.html","tf":0.02}}}}}}},"%":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},">":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.011940298507462687},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818},"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513},"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.02564102564102564}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357}},")":{"docs":{},";":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}},")":{"docs":{},";":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"z":{"docs":{},")":{"docs":{},";":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.04477611940298507},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.031496062992125984},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.036101083032490974},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.02197802197802198},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.030927835051546393}},";":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.03937007874015748},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.02197802197802198},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.02824858757062147},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927}}},")":{"docs":{},";":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}},"u":{"docs":{},"m":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},"s":{"docs":{},";":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},";":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015}}},")":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"{":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"{":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},",":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}},";":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}},"[":{"docs":{},"]":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}}}}}}}}}}}}}}}}},"=":{"0":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.03225806451612903}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"$":{"docs":{},"p":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}}},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}},"[":{"docs":{},"]":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}}}},">":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}},"docs":{}}}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"$":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}}}}}}},".":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}}}},"i":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.022988505747126436}},",":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}},"是":{"docs":{},"减":{"docs":{},"益":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"则":{"docs":{},"抛":{"docs":{},"弃":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"增":{"docs":{},"益":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"则":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"进":{"docs":{},"行":{"docs":{},"左":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"加":{"docs":{},"入":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"；":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096}},"e":{"docs":{},"y":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0273972602739726},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.01652892561983471},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}},"n":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.05555555555555555},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.041666666666666664},"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.017094017094017096},"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-string.html":{"ref":"string/reverse-string.html","tf":0.03333333333333333},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}},";":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.019801980198019802},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.01791044776119403},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.029411764705882353}}},")":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.023622047244094488},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.01694915254237288},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"{":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},",":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}},"m":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.030927835051546393},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"s":{"1":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.03225806451612903}}},"2":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"docs":{},"[":{"docs":{},"i":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},"]":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401}},",":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},"。":{"docs":{},"最":{"docs":{},"终":{"docs":{},"，":{"docs":{},"取":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.03773584905660377}}}}},"x":{"docs":{},"t":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}},";":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}},":":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}},"w":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}},"i":{"docs":{},"l":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},",":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292}},".":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"v":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}},"，":{"docs":{},"等":{"docs":{},"于":{"docs":{},"则":{"docs":{},"证":{"docs":{},"明":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}},"]":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}},"$":{"docs":{},"i":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}},"x":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}},"p":{"1":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}},"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}},"l":{"1":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}},"docs":{},"o":{"docs":{},"w":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"m":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"n":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}},"u":{"docs":{},"m":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"为":{"docs":{},"组":{"docs":{},"b":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"组":{"docs":{},"a":{"docs":{},"。":{"docs":{},"分":{"docs":{},"别":{"docs":{},"反":{"docs":{},"转":{"docs":{},"组":{"docs":{},"a":{"docs":{},"，":{"docs":{},"组":{"docs":{},"b":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"反":{"docs":{},"转":{"docs":{},"整":{"docs":{},"体":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}},"结":{"docs":{},"点":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}},"大":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"于":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}}}},"[":{"docs":{},"最":{"docs":{},"大":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"]":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"尾":{"docs":{},"出":{"docs":{},"头":{"docs":{},"进":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}},"当":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.022222222222222223},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"一":{"docs":{},"直":{"docs":{},"进":{"docs":{},"位":{"docs":{},"到":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"位":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}},"然":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"存":{"docs":{},"次":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"再":{"docs":{},"另":{"docs":{},"外":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"次":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"两":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"递":{"docs":{},"增":{"docs":{},"；":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"前":{"docs":{},"最":{"docs":{},"大":{"docs":{},"前":{"docs":{},"缀":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}},"和":{"docs":{},"子":{"docs":{},"孙":{"docs":{},"节":{"docs":{},"点":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}},"连":{"docs":{},"续":{"docs":{},"和":{"docs":{},"小":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"重":{"docs":{},"置":{"docs":{},"，":{"docs":{},"重":{"docs":{},"新":{"docs":{},"连":{"docs":{},"续":{"docs":{},"计":{"docs":{},"算":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"docs":{}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"为":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.05263157894736842}}}}}},"注":{"docs":{},"意":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{},"k":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}},"两":{"docs":{},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"那":{"docs":{},"段":{"docs":{},"区":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"转":{"docs":{"array/rotate-array.html":{"ref":"array/rotate-array.html","tf":0.008547008547008548}}}}}}}}}},"符":{"docs":{},"号":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}},"[":{"0":{"docs":{},",":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}}}},"1":{"docs":{},",":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}},"3":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}},"docs":{}}},"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}},"]":{"docs":{},";":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.024793388429752067},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025},"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808},"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843},"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304},"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125},"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}},"[":{"docs":{},"]":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}},"$":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"[":{"docs":{},"$":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"以":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"为":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"末":{"docs":{},"端":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"序":{"docs":{},"子":{"docs":{},"列":{"docs":{},"连":{"docs":{},"续":{"docs":{},"和":{"docs":{},"]":{"docs":{},"，":{"docs":{},"将":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}},"记":{"docs":{},"为":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"最":{"docs":{},"大":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"]":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"x":{"docs":{},",":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},")":{"docs":{},"{":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},"{":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.021660649819494584}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"p":{"1":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992}}},"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}},"s":{"docs":{},":":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}},"：":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}},"此":{"docs":{},"法":{"docs":{},"用":{"docs":{},"下":{"docs":{},"列":{"docs":{},"代":{"docs":{},"码":{"docs":{},"维":{"docs":{},"持":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"取":{"docs":{},"巧":{"docs":{},"的":{"docs":{},"嫌":{"docs":{},"疑":{"docs":{},"。":{"docs":{},"操":{"docs":{},"作":{"docs":{},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"变":{"docs":{},"成":{"docs":{},"关":{"docs":{},"联":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"这":{"docs":{},"在":{"docs":{},"p":{"docs":{},"h":{"docs":{},"p":{"docs":{},"可":{"docs":{},"以":{"docs":{},"说":{"docs":{},"得":{"docs":{},"通":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"强":{"docs":{},"类":{"docs":{},"型":{"docs":{},"语":{"docs":{},"言":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"很":{"docs":{},"难":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"(":{"1":{"0":{"docs":{},",":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},"docs":{}},"2":{"docs":{},",":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.023529411764705882}}}},"docs":{}}},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}},"h":{"docs":{},"p":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.029850746268656716},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.015748031496062992},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.019801980198019802},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.01327433628318584},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01953125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.01791044776119403},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.022058823529411766},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"$":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}},"r":{"docs":{},"e":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.01444043321299639}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}},"a":{"docs":{},"m":{"docs":{},"_":{"3":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}},"4":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}},"docs":{}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},"u":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863},"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}},"{":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},":":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}},"r":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},".":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"查":{"docs":{},"找":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}},"，":{"docs":{},"既":{"docs":{},"要":{"docs":{},"存":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"要":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"。":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}},"内":{"docs":{},"置":{"docs":{},"函":{"docs":{},"数":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"一":{"docs":{},"般":{"docs":{},"被":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"来":{"docs":{},"自":{"docs":{},"于":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"在":{"docs":{"array/contains-duplicate.html":{"ref":"array/contains-duplicate.html","tf":0.0136986301369863}}},"经":{"docs":{},"开":{"docs":{},"辟":{"docs":{},"了":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"比":{"docs":{},"较":{"docs":{},"谁":{"docs":{},"大":{"docs":{},"，":{"docs":{},"谁":{"docs":{},"插":{"docs":{},"入":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}}}}}}}}}}}}}}}}}}}}}}}}},"⊕":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.03076923076923077}}},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}},"异":{"docs":{},"或":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},"等":{"docs":{},"于":{"docs":{},"他":{"docs":{},"本":{"docs":{},"身":{"docs":{},"；":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"合":{"docs":{},"交":{"docs":{},"换":{"docs":{},"律":{"docs":{},"和":{"docs":{},"结":{"docs":{},"合":{"docs":{},"律":{"docs":{},"。":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"“":{"docs":{},"同":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"异":{"docs":{},"为":{"1":{"docs":{},"”":{"docs":{},"，":{"docs":{},"即":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}},"特":{"docs":{},"性":{"1":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}},"2":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}},"docs":{}},"别":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"没":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"元":{"docs":{},"素":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"线":{"docs":{},"性":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"和":{"docs":{},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"规":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"异":{"docs":{},"或":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"array/single-number.html":{"ref":"array/single-number.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"提":{"docs":{},"到":{"docs":{},"仅":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"母":{"docs":{},"和":{"docs":{},"数":{"docs":{},"字":{"docs":{},"且":{"docs":{},"字":{"docs":{},"母":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"大":{"docs":{},"小":{"docs":{},"写":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"p":{"docs":{},"h":{"docs":{},"p":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"内":{"docs":{},"置":{"docs":{},"函":{"docs":{},"数":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"话":{"docs":{},"：":{"docs":{},"@":{"docs":{},"老":{"docs":{},"虎":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}},"：":{"docs":{},"位":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.024390243902439025}}}}}},"docs":{}}}},";":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356},"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.04032258064516129}}},"使":{"docs":{},"用":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"快":{"docs":{},"排":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"利":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"放":{"docs":{},"入":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},"、":{"docs":{},"排":{"docs":{},"序":{"docs":{},"+":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}},"横":{"docs":{},"向":{"docs":{},"比":{"docs":{},"较":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}},"遍":{"docs":{},"历":{"docs":{},"法":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}},"常":{"docs":{},"规":{"docs":{},"循":{"docs":{},"环":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}},"键":{"docs":{},"值":{"docs":{},"交":{"docs":{},"换":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}},"二":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},"、":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}},"法":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}},"纵":{"docs":{},"向":{"docs":{},"比":{"docs":{},"较":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"法":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"法":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}},"整":{"docs":{},"数":{"docs":{},"限":{"docs":{},"制":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}},"数":{"docs":{},"学":{"docs":{},"法":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"且":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"（":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"对":{"docs":{},"应":{"docs":{},"次":{"docs":{},"数":{"docs":{},"减":{"docs":{},"一":{"docs":{},"，":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"。":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"若":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"证":{"docs":{},"明":{"docs":{},"全":{"docs":{},"部":{"docs":{},"消":{"docs":{},"费":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"即":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"是":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"；":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"存":{"docs":{},"储":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"并":{"docs":{},"记":{"docs":{},"录":{"docs":{},"次":{"docs":{},"数":{"docs":{},"（":{"docs":{},"视":{"docs":{},"为":{"docs":{},"生":{"docs":{},"产":{"docs":{},"者":{"docs":{},"）":{"docs":{},"；":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"若":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"此":{"docs":{},"字":{"docs":{},"符":{"docs":{},"在":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"减":{"docs":{},"一":{"docs":{},"（":{"docs":{},"视":{"docs":{},"为":{"docs":{},"消":{"docs":{},"费":{"docs":{},"者":{"docs":{},"）":{"docs":{},"；":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"先":{"docs":{},"区":{"docs":{},"别":{"docs":{},"前":{"docs":{},"面":{"docs":{},"「":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"或":{"docs":{},"符":{"docs":{},"号":{"docs":{},"」":{"docs":{},"和":{"docs":{},"「":{"docs":{},"无":{"docs":{},"数":{"docs":{},"字":{"docs":{},"或":{"docs":{},"符":{"docs":{},"号":{"docs":{},"」":{"docs":{},"这":{"docs":{},"两":{"docs":{},"大":{"docs":{},"类":{"docs":{},"；":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"若":{"docs":{},"相":{"docs":{},"等":{"docs":{},"则":{"docs":{},"计":{"docs":{},"数":{"docs":{},"+":{"1":{"docs":{},"；":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"：":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"随":{"docs":{},"机":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"加":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"1":{"docs":{},".":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"要":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"才":{"docs":{},"证":{"docs":{},"明":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"括":{"docs":{},"号":{"docs":{},"正":{"docs":{},"确":{"docs":{},"。":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}},"交":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"即":{"docs":{},"为":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},"其":{"docs":{},"他":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"数":{"docs":{},"组":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"前":{"docs":{},"声":{"docs":{},"明":{"docs":{},"固":{"docs":{},"定":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"array/intersection-of-two-arrays-ii.html":{"ref":"array/intersection-of-two-arrays-ii.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}},"加":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"所":{"docs":{},"以":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}},"使":{"docs":{},"指":{"docs":{},"针":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}},"那":{"docs":{},"么":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"则":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"为":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.03636363636363636}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}},"+":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.04504504504504504},"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886},"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.013201320132013201},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176},"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516},"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.024691358024691357},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}},"=":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292}},";":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.018018018018018018},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}},"e":{"docs":{},"e":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0165016501650165},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.011061946902654867},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01171875},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.014705882352941176}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"$":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927}}}}}}},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.020618556701030927}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.016877637130801686}},"[":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}},"[":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}}},"不":{"docs":{},"产":{"docs":{},"生":{"docs":{},"进":{"docs":{},"位":{"docs":{},"；":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"位":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}},"同":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}},"产":{"docs":{},"生":{"docs":{},"进":{"docs":{},"位":{"docs":{},"；":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{},"各":{"docs":{},"个":{"docs":{},"位":{"docs":{},"全":{"docs":{},"为":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}},"后":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"都":{"docs":{},"向":{"docs":{},"前":{"docs":{},"进":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}},"，":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"继":{"docs":{},"续":{"docs":{},"取":{"docs":{},"模":{"docs":{},"，":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"十":{"docs":{},"位":{"docs":{},"数":{"docs":{},"；":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"两":{"docs":{},"种":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}}}}}}}},"是":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}},"否":{"docs":{},"继":{"docs":{},"续":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}},"越":{"docs":{},"界":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},"等":{"docs":{},"于":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}},"减":{"docs":{},"益":{"docs":{},"效":{"docs":{},"果":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}},"增":{"docs":{},"益":{"docs":{},"效":{"docs":{},"果":{"docs":{},"；":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}},"包":{"docs":{},"含":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}},"结":{"docs":{},"束":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"果":{"docs":{},"查":{"docs":{},"找":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"将":{"docs":{},"为":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"集":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}},"一":{"docs":{},"定":{"docs":{},"为":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}},"值":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}},"尾":{"docs":{},"加":{"docs":{},"个":{"docs":{},"哨":{"docs":{},"兵":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}},"进":{"docs":{},"位":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"行":{"docs":{},"局":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"掉":{"docs":{},"头":{"docs":{},"；":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}},"下":{"docs":{},"一":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"得":{"docs":{},"出":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"；":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"阶":{"docs":{},"法":{"docs":{},"，":{"docs":{},"不":{"docs":{},"用":{"docs":{},"循":{"docs":{},"环":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"降":{"docs":{},"低":{"docs":{},"为":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}},"非":{"9":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}},"docs":{}},"（":{"2":{"docs":{},"^":{"3":{"1":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},"docs":{}},"docs":{}}},"5":{"docs":{},"位":{"docs":{},"数":{"docs":{},"）":{"docs":{"array/plus-one.html":{"ref":"array/plus-one.html","tf":0.009009009009009009}}}}}},"docs":{},"总":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"为":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"相":{"docs":{},"同":{"docs":{},"；":{"docs":{},"为":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"差":{"docs":{},"一":{"docs":{},"）":{"docs":{},"。":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564}}},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"m":{"docs":{},"平":{"docs":{},"均":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"长":{"docs":{},"度":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}}}}},"则":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"增":{"docs":{},"加":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564}}}}}}}}}}}}},"是":{"docs":{},"求":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"常":{"docs":{},"规":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"若":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{"array/move-zeroes.html":{"ref":"array/move-zeroes.html","tf":0.02564102564102564}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"法":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"判":{"docs":{},"断":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}},"i":{"docs":{},"t":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.010830324909747292},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.009900990099009901},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.008955223880597015},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}},"。":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}},"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}},"b":{"docs":{},"j":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}},"即":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}},"或":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}},"暴":{"docs":{},"力":{"docs":{},"法":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}},"的":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"在":{"docs":{},"于":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"差":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"过":{"docs":{},"高":{"docs":{},"，":{"docs":{},"为":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}},"节":{"docs":{},"点":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}},"要":{"docs":{},"大":{"docs":{},"于":{"docs":{},"左":{"docs":{},"路":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"小":{"docs":{},"于":{"docs":{},"右":{"docs":{},"路":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"值":{"docs":{},"交":{"docs":{},"换":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464},"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.021052631578947368}},"后":{"docs":{},"存":{"docs":{},"到":{"docs":{"array/two-sum.html":{"ref":"array/two-sum.html","tf":0.010309278350515464}}}}}}}}},"判":{"docs":{},"断":{"3":{"docs":{},"*":{"3":{"docs":{},"方":{"docs":{},"块":{"docs":{},"内":{"docs":{},"有":{"docs":{},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}}}},"docs":{}}},"docs":{},"同":{"docs":{},"列":{"docs":{},"有":{"docs":{},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}},"行":{"docs":{},"有":{"docs":{},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{"array/valid-sudoku.html":{"ref":"array/valid-sudoku.html","tf":0.022727272727272728}}}}}}}},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"…":{"docs":{},"…":{"docs":{},"当":{"docs":{},"有":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"或":{"docs":{},"者":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"字":{"docs":{},"符":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"，":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"符":{"docs":{},"合":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"称":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}}},"定":{"docs":{},"有":{"docs":{},"环":{"docs":{},"：":{"docs":{},"当":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遇":{"docs":{},"上":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"则":{"docs":{},"为":{"docs":{},"有":{"docs":{},"环":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"下":{"docs":{},"翻":{"docs":{},"转":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.03773584905660377}}}}},"面":{"docs":{},"这":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"主":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"翻":{"docs":{},"转":{"docs":{"array/rotate-image.html":{"ref":"array/rotate-image.html","tf":0.018867924528301886}}}}}}}},"!":{"docs":{},"=":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.02197802197802198},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.020618556701030927},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}},"=":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.011299435028248588},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}},"$":{"docs":{},"q":{"docs":{},")":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}},"|":{"docs":{},"|":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.01171875}}}},"以":{"docs":{},"上":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"最":{"docs":{},"先":{"docs":{},"得":{"docs":{},"出":{"docs":{},"的":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"末":{"docs":{},"位":{"docs":{},"数":{"docs":{},"（":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"给":{"docs":{},"取":{"docs":{},"模":{"docs":{},"的":{"docs":{},"值":{"docs":{},"乘":{"1":{"0":{"docs":{},"，":{"docs":{},"加":{"docs":{},"上":{"docs":{},"原":{"docs":{},"先":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"各":{"docs":{},"个":{"docs":{},"位":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"：":{"docs":{"string/reverse-integer.html":{"ref":"string/reverse-integer.html","tf":0.016666666666666666}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"法":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"个":{"docs":{},"数":{"docs":{},",":{"docs":{"string/first-unique-character-in-a-string.html":{"ref":"string/first-unique-character-in-a-string.html","tf":0.024390243902439025}}}}}}}}}}},"生":{"docs":{},"产":{"docs":{"string/valid-anagram.html":{"ref":"string/valid-anagram.html","tf":0.023809523809523808}}}},"比":{"docs":{},"较":{"docs":{},"字":{"docs":{},"符":{"docs":{},"（":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"字":{"docs":{},"母":{"docs":{},"大":{"docs":{},"小":{"docs":{},"写":{"docs":{},"）":{"docs":{"string/valid-palindrome.html":{"ref":"string/valid-palindrome.html","tf":0.02631578947368421}}}}}}}}}}}}}}},"'":{"1":{"1":{"docs":{},"'":{"docs":{},";":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}},"docs":{},"'":{"docs":{},";":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}},"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947}},"'":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}},";":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941},"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.039473684210526314}}},")":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}},")":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}},"'":{"docs":{},",":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}},"a":{"docs":{},"'":{"docs":{},";":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}},"+":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}},"(":{"docs":{},"'":{"docs":{},",":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}},"[":{"docs":{},"'":{"docs":{},"时":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"；":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}}}},"]":{"docs":{},"'":{"docs":{},"时":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"并":{"docs":{},"判":{"docs":{},"断":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"与":{"docs":{},"当":{"docs":{},"前":{"docs":{},"符":{"docs":{},"合":{"docs":{},"对":{"docs":{},"应":{"docs":{},"；":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"'":{"docs":{},",":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}},"}":{"docs":{},"'":{"docs":{},",":{"docs":{"other/valid-parentheses.html":{"ref":"other/valid-parentheses.html","tf":0.02631578947368421}}}}}},")":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734},"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"{":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"细":{"docs":{},"分":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"处":{"docs":{},"理":{"docs":{},"四":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"符":{"docs":{},"号":{"docs":{},"位":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}},"筛":{"docs":{},"出":{"docs":{},"有":{"docs":{},"效":{"docs":{},"数":{"docs":{},"字":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"符":{"docs":{},"号":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}}}}}}}},"详":{"docs":{},"细":{"docs":{},"解":{"docs":{},"答":{"docs":{},"见":{"docs":{},"代":{"docs":{},"码":{"docs":{"string/string-to-integer-atoi.html":{"ref":"string/string-to-integer-atoi.html","tf":0.011764705882352941}}}}}}}}},"重":{"docs":{},"置":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"新":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}}}}}}}},"docs":{}}},"新":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"树":{"docs":{},"上":{"docs":{},"谁":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"点":{"docs":{},"，":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"点":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}},"小":{"docs":{},"于":{"docs":{"string/implement-strstr.html":{"ref":"string/implement-strstr.html","tf":0.018867924528301886}}}}}},".":{"docs":{},"=":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"“":{"docs":{},"读":{"docs":{},"”":{"docs":{},"操":{"docs":{},"作":{"docs":{},"并":{"docs":{},"不":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"但":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"边":{"docs":{},"界":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"处":{"docs":{},"理":{"docs":{},"起":{"docs":{},"来":{"docs":{},"比":{"docs":{},"较":{"docs":{},"难":{"docs":{},"受":{"docs":{},"。":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"”":{"docs":{},"：":{"docs":{},"局":{"docs":{},"部":{"docs":{},"反":{"docs":{},"转":{"docs":{},"指":{"docs":{},"针":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}},"递":{"docs":{},"”":{"docs":{},"：":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{},"一":{"docs":{},"步":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"i":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}}}}}}}}}},"欲":{"docs":{},"求":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}},"递":{"docs":{},"归":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}},"法":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"为":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}},"的":{"docs":{},"尽":{"docs":{},"头":{"docs":{},"是":{"docs":{"string/count-and-say.html":{"ref":"string/count-and-say.html","tf":0.011111111111111112}}}}}},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"h":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}},"返":{"docs":{},"回":{"docs":{},"条":{"docs":{},"件":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"值":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}},"改":{"docs":{},"为":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{},"，":{"docs":{},"借":{"docs":{},"助":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}}}}}}}}},"栈":{"docs":{},"为":{"docs":{},"n":{"docs":{"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}}}}}},"：":{"docs":{},"所":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"自":{"docs":{},"身":{"docs":{},"必":{"docs":{},"须":{"docs":{},"“":{"docs":{},"先":{"docs":{},"是":{"docs":{},"”":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"；":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}},"=":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.008849557522123894},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.014925373134328358},"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.012658227848101266}}}},"?":{"docs":{"string/longest-common-prefix.html":{"ref":"string/longest-common-prefix.html","tf":0.013157894736842105},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}},"_":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"v":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496},"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.007220216606498195},"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495},"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.006600660066006601},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.004424778761061947},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625},"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"tree/convert-sorted-array-to-binary-search-tree.html":{"ref":"tree/convert-sorted-array-to-binary-search-tree.html","tf":0.007352941176470588}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358},"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.011764705882352941}}}}}}}},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}}}}}}}}}}}}}},"…":{"docs":{},"…":{"docs":{"linked-list/delete-node-in-a-linked-list.html":{"ref":"linked-list/delete-node-in-a-linked-list.html","tf":0.014925373134328358}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"$":{"docs":{},"q":{"docs":{},")":{"docs":{},";":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"$":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"走":{"docs":{},"n":{"docs":{},"步":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}},"把":{"docs":{},"两":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"；":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{},"若":{"docs":{},"p":{"1":{"docs":{},"走":{"docs":{},"完":{"docs":{},"n":{"docs":{},"步":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"则":{"docs":{},"证":{"docs":{},"明":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"向":{"docs":{},"前":{"docs":{},"。":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}},"docs":{}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"指":{"docs":{},"针":{"docs":{},"p":{"1":{"docs":{},"、":{"docs":{},"p":{"2":{"docs":{},"，":{"docs":{},"让":{"docs":{},"p":{"1":{"docs":{},"先":{"docs":{},"走":{"docs":{},"n":{"docs":{},"步":{"docs":{},"；":{"docs":{},"然":{"docs":{},"后":{"docs":{},"p":{"1":{"docs":{},"、":{"docs":{},"p":{"2":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"p":{"1":{"docs":{},"走":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"这":{"docs":{},"是":{"docs":{},"恰":{"docs":{},"巧":{"docs":{},"走":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"进":{"docs":{},"行":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"linked-list/remove-nth-node-from-end-of-list.html":{"ref":"linked-list/remove-nth-node-from-end-of-list.html","tf":0.007874015748031496}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"在":{"docs":{},"前":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"2":{"docs":{},"步":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}},"docs":{}}}}}}}}}},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"指":{"docs":{},"针":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}},"于":{"docs":{"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}}}},"始":{"docs":{},"终":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"或":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"为":{"docs":{},"空":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}},"：":{"docs":{},"当":{"docs":{},"前":{"docs":{},"为":{"docs":{},"空":{"docs":{},"；":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"一":{"docs":{},"边":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"一":{"docs":{},"边":{"docs":{},"把":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"掉":{"docs":{},"头":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"linked-list/reverse-linked-list.html":{"ref":"linked-list/reverse-linked-list.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},"&":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.01098901098901099},"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464},"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.00663716814159292},"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.015625},"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258},"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"{":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}}},"三":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"分":{"docs":{},"别":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"并":{"docs":{},"比":{"docs":{},"较":{"docs":{},"对":{"docs":{},"应":{"docs":{},"值":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"新":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"小":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"小":{"docs":{},"的":{"docs":{},"一":{"docs":{},"方":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"也":{"docs":{},"要":{"docs":{},"往":{"docs":{},"后":{"docs":{},"移":{"docs":{},"。":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"除":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"linked-list/merge-two-sorted-lists.html":{"ref":"linked-list/merge-two-sorted-lists.html","tf":0.005494505494505495}}}}}}},"获":{"docs":{},"取":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{"linked-list/palindrome-linked-list.html":{"ref":"linked-list/palindrome-linked-list.html","tf":0.005649717514124294}}}}}}}},"原":{"docs":{},"因":{"docs":{},"：":{"docs":{},"具":{"docs":{},"体":{"docs":{},"走":{"docs":{},"几":{"docs":{},"步":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"己":{"docs":{},"设":{"docs":{},"定":{"docs":{},"，":{"docs":{},"让":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"2":{"docs":{},"步":{"docs":{},"，":{"docs":{},"而":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"误":{"docs":{},"差":{"docs":{},"较":{"docs":{},"小":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"在":{"docs":{},"一":{"docs":{},"圈":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"遇":{"docs":{},"上":{"docs":{},"（":{"docs":{},"位":{"docs":{},"置":{"docs":{},"重":{"docs":{},"合":{"docs":{},"）":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"在":{"docs":{},"后":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"走":{"1":{"docs":{},"步":{"docs":{"linked-list/linked-list-cycle.html":{"ref":"linked-list/linked-list-cycle.html","tf":0.010309278350515464}}}},"docs":{}}}}}}}}}},"变":{"docs":{},"形":{"docs":{},"后":{"docs":{},"，":{"docs":{},"让":{"docs":{},"每":{"docs":{},"次":{"docs":{},"消":{"docs":{},"费":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"内":{"docs":{},"层":{"docs":{},"）":{"docs":{},"取":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"若":{"docs":{},"存":{"docs":{},"在":{"docs":{},"）":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"记":{"docs":{},"录":{"docs":{},"外":{"docs":{},"层":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"最":{"docs":{},"大":{"docs":{},"高":{"docs":{},"度":{"docs":{},"。":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"（":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{},"）":{"docs":{},"的":{"docs":{},"变":{"docs":{},"形":{"docs":{},"。":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"称":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"称":{"docs":{},"；":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"无":{"docs":{},"效":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"前":{"docs":{},"树":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"对":{"docs":{},"称":{"docs":{},"？":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"进":{"docs":{},"行":{"docs":{},"消":{"docs":{},"费":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"若":{"docs":{},"存":{"docs":{},"在":{"docs":{},"）":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"。":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}},"队":{"docs":{},"列":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}},"大":{"docs":{},"小":{"docs":{},"m":{"docs":{},"，":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"为":{"docs":{},"n":{"docs":{"tree/maximum-depth-of-binary-tree.html":{"ref":"tree/maximum-depth-of-binary-tree.html","tf":0.0033003300330033004}}}}}}}}}}}},"归":{"docs":{},"：":{"docs":{},"判":{"docs":{},"断":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"自":{"docs":{},"身":{"docs":{},"必":{"docs":{},"须":{"docs":{},"“":{"docs":{},"先":{"docs":{},"是":{"docs":{},"”":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"第":{"docs":{},"n":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"爬":{"docs":{},"楼":{"docs":{},"方":{"docs":{},"案":{"docs":{},"等":{"docs":{},"于":{"docs":{},"n":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"动":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"：":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}},"数":{"docs":{},"没":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"。":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"取":{"docs":{},"值":{"docs":{},"（":{"docs":{},"开":{"docs":{},"区":{"docs":{},"间":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"+":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}},"小":{"docs":{},"取":{"docs":{},"值":{"docs":{},"（":{"docs":{},"开":{"docs":{},"区":{"docs":{},"间":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}},"正":{"docs":{},"无":{"docs":{},"穷":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}},"负":{"docs":{},"无":{"docs":{},"穷":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}},"迭":{"docs":{},"代":{"docs":{},"法":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{},"转":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"必":{"docs":{},"然":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"。":{"docs":{"tree/validate-binary-search-tree.html":{"ref":"tree/validate-binary-search-tree.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"；":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.0078125}}}}}}}},"让":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"紧":{"docs":{},"挨":{"docs":{},"着":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"出":{"docs":{},"队":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"紧":{"docs":{},"挨":{"docs":{},"着":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"出":{"docs":{},"队":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"；":{"docs":{"tree/symmetric-tree.html":{"ref":"tree/symmetric-tree.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},";":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005},"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.005970149253731343}}}}}}},"取":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609},"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}},"决":{"docs":{},"于":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}},"模":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}},"由":{"docs":{},"于":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}},"输":{"docs":{},"出":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"体":{"docs":{},"现":{"docs":{},"“":{"docs":{},"层":{"docs":{},"”":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"都":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"判":{"docs":{},"断":{"docs":{},"跨":{"docs":{},"位":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"难":{"docs":{},"度":{"docs":{},"大":{"docs":{},"大":{"docs":{},"降":{"docs":{},"低":{"docs":{},"。":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"可":{"docs":{},"得":{"docs":{},"动":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"：":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{"tree/binary-tree-level-order-traversal.html":{"ref":"tree/binary-tree-level-order-traversal.html","tf":0.0029850746268656717}}}},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.008064516129032258}}}}},"从":{"docs":{"sort-search/merge-sorted-array.html":{"ref":"sort-search/merge-sorted-array.html","tf":0.016129032258064516}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"sort-search/first-bad-version.html":{"ref":"sort-search/first-bad-version.html","tf":0.016129032258064516}}}}}}}}},"推":{"docs":{},"出":{"docs":{},"动":{"docs":{},"态":{"docs":{},"方":{"docs":{},"程":{"docs":{},"公":{"docs":{},"式":{"docs":{},"后":{"docs":{},"，":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"法":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"大":{"docs":{},"，":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"间":{"docs":{},"超":{"docs":{},"时":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"三":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"块":{"docs":{},"来":{"docs":{},"做":{"docs":{},"，":{"docs":{},"方":{"docs":{},"案":{"docs":{},"更":{"docs":{},"优":{"docs":{},"。":{"docs":{"dynamic-programming/climbing-stairs.html":{"ref":"dynamic-programming/climbing-stairs.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}},"最":{"docs":{},"低":{"docs":{},"价":{"docs":{},"差":{"docs":{},"价":{"docs":{},"最":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"最":{"docs":{},"大":{"docs":{},"收":{"docs":{},"益":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"结":{"docs":{},"果":{"docs":{},"判":{"docs":{},"断":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}},"系":{"docs":{},"列":{"docs":{},"题":{"docs":{},"目":{"docs":{"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"ref":"dynamic-programming/best-time-to-buy-and-sell-stock.html","tf":0.017543859649122806}}}}}},"、":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"。":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.011494252873563218}}}},"假":{"docs":{},"设":{"docs":{},"，":{"docs":{},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"累":{"docs":{},"加":{"docs":{},"，":{"docs":{},"得":{"docs":{},"[":{"docs":{},"当":{"docs":{},"前":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"和":{"docs":{},"]":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"求":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}},"易":{"docs":{},"理":{"docs":{},"解":{"docs":{},"一":{"docs":{},"文":{"docs":{},"中":{"docs":{},"提":{"docs":{},"到":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"是":{"docs":{},"“":{"docs":{},"以":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"结":{"docs":{},"束":{"docs":{},"点":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"，":{"docs":{},"向":{"docs":{},"前":{"docs":{},"递":{"docs":{},"推":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"关":{"docs":{},"系":{"docs":{},"”":{"docs":{},"这":{"docs":{},"点":{"docs":{},"，":{"docs":{},"个":{"docs":{},"人":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"对":{"docs":{},"理":{"docs":{},"解":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"。":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}},"难":{"docs":{},"度":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"按":{"docs":{},"题":{"docs":{},"意":{"docs":{},"来":{"docs":{},"。":{"docs":{"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}}}}}}}}}}}}},"老":{"docs":{},"哥":{"docs":{},"在":{"docs":{},"详":{"docs":{},"细":{"docs":{},"解":{"docs":{},"读":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},",":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}},"要":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"当":{"docs":{},"前":{"docs":{},"连":{"docs":{},"续":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"从":{"docs":{},"下":{"docs":{},"一":{"docs":{},"元":{"docs":{},"素":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{},"累":{"docs":{},"加":{"docs":{},"。":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"以":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"为":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"末":{"docs":{},"端":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"序":{"docs":{},"子":{"docs":{},"列":{"docs":{},"连":{"docs":{},"续":{"docs":{},"和":{"docs":{"dynamic-programming/maximum-subarray.html":{"ref":"dynamic-programming/maximum-subarray.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"局":{"docs":{},"最":{"docs":{},"大":{"docs":{},"打":{"docs":{},"劫":{"docs":{},"金":{"docs":{},"额":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"则":{"docs":{},"是":{"docs":{},"打":{"docs":{},"劫":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}}}}}}}},"就":{"docs":{},"等":{"docs":{},"于":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.014598540145985401}}}}},"滑":{"docs":{},"动":{"docs":{},"块":{"docs":{"dynamic-programming/house-robber.html":{"ref":"dynamic-programming/house-robber.html","tf":0.0072992700729927005}}}}},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882}}}}}},"洗":{"docs":{},"牌":{"docs":{},"算":{"docs":{},"法":{"docs":{"design-question/shuffle-an-array.html":{"ref":"design-question/shuffle-an-array.html","tf":0.023529411764705882}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.008438818565400843}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},")":{"docs":{"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{"design-question/min-stack.html":{"ref":"design-question/min-stack.html","tf":0.004219409282700422}}},"问":{"docs":{},"题":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{},"小":{"docs":{},"文":{"docs":{},"章":{"docs":{},"我":{"docs":{},"倒":{"docs":{},"要":{"docs":{},"看":{"docs":{},"看":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"z":{"docs":{},"z":{"docs":{},"b":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"能":{"docs":{},"讲":{"docs":{},"多":{"docs":{},"少":{"docs":{},"道":{"docs":{},"理":{"docs":{"math/fizz-buzz.html":{"ref":"math/fizz-buzz.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"埃":{"docs":{},"氏":{"docs":{},"筛":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}},"，":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{"math/count-primes.html":{"ref":"math/count-primes.html","tf":0.03225806451612903}}}}},"除":{"docs":{},"以":{"docs":{"math/power-of-three.html":{"ref":"math/power-of-three.html","tf":0.010416666666666666}}}},"\"":{"docs":{},"c":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}},"d":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"m":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}},"d":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"i":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}},"v":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"x":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}},"l":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"m":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"v":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"x":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}},"c":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"l":{"docs":{},"\"":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}}}},"单":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"2":{"docs":{},".":{"docs":{"math/roman-to-integer.html":{"ref":"math/roman-to-integer.html","tf":0.012987012987012988}}}},"docs":{}}}}}},"右":{"docs":{},"移":{"docs":{},"后":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{},"循":{"docs":{},"环":{"3":{"2":{"docs":{},"次":{"docs":{},"。":{"docs":{"other/number-of-1-bits.html":{"ref":"other/number-of-1-bits.html","tf":0.01818181818181818}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"^":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}},"x":{"docs":{},"，":{"docs":{},"i":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}},"在":{"docs":{},"利":{"docs":{},"用":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"中":{"docs":{"other/hamming-distance.html":{"ref":"other/hamming-distance.html","tf":0.012195121951219513}}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"值":{"docs":{},"与":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}},"进":{"docs":{},"行":{"docs":{},"右":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"。":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}}}}}}},"逐":{"docs":{},"位":{"docs":{},"颠":{"docs":{},"倒":{"docs":{},"，":{"docs":{},"用":{"1":{"docs":{},"与":{"docs":{},"传":{"docs":{},"入":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"可":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"other/reverse-bits.html":{"ref":"other/reverse-bits.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"把":{"docs":{},"杨":{"docs":{},"辉":{"docs":{},"三":{"docs":{},"角":{"docs":{},"看":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"规":{"docs":{},"律":{"docs":{},"可":{"docs":{},"发":{"docs":{},"现":{"docs":{},"。":{"docs":{"other/pascals-triangle.html":{"ref":"other/pascals-triangle.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{"other/missing-number.html":{"ref":"other/missing-number.html","tf":0.010526315789473684}}}}}}}},"length":2972},"corpusTokens":["!$q)","!=","!==","!left.isvalid","!right.isvalid","\"c\"","\"cd\"","\"cm\"","\"d\"","\"i\"","\"iv\"","\"ix\"","\"l\"","\"m\"","\"v\"","\"x\"","\"xc\"","\"xl\"","$an","$ans;","$arr","$blocki","$blockx","$board","$counter","$counter++;","$counter;","$curlen","$digit","$digits;","$digits[$i]","$digits[0]","$end","$end)","$flag","$hash","$hash[$nums2[$i]]","$haystack","$head","$head;","$height","$height++;","$height;","$hight","$hight)","$hight);","$i","$i)","$i);","$i++;","$i;","$j","$j++;","$k","$k)","$k,","$l1","$l1;","$l2","$l2)","$l2;","$left","$left;","$len","$len++;","$len;","$level","$level)","$list","$list;","$list[]","$low","$low,","$low;","$m","$m,","$mask","$matrix","$matrix;","$matrix[$i][$j]","$matrix[$i][$j];","$matrix[$j][$i]","$matrix[$j][$i];","$max","$max)","$max)){","$max;","$maxprofit","$maxprofit)","$maxprofit;","$maxsum","$maxsum)","$mid","$mid;","$min","$min,","$minpric","$minprice;","$minstack","$mixlen","$mod","$mod;","$n","$n)","$n;","$needl","$needle)","$newmax;","$next","$next;","$node","$node;","$num","$num;","$numrow","$nums1","$nums1;","$nums1[$i]","$nums1[$m];","$nums2","$nums2)","$nums2,","$nums2[$i];","$nums2[$j])","$nums2[$n])","$nums2[$n];","$nums;","$nums['l'.$nums[$i]]","$nums[0],","$nums[0];","$nums[1])","$nums[1]);","$obj","$oper","$output","$output;","$output[$level][]","$output[]","$p","$p1","$p2","$p2)","$p3","$p;","$prefix","$price","$prices[$i]","$q","$q)","$result","$result;","$result[]","$ret_2","$right","$right;","$root","$root);","$root;","$s","$sayvalu","$slen","$stack","$stack[$i]","$start","$start,","$str","$strs[0]","$sum","$sum;","$t","$t)","$target","$target)","$temp","$temp;","$temp[]","$thi","$tmp","$tmp;","$top","$val","$val);","$val;","$valu","$value;","$x","$y","$y)","$y;","$z","%","&","&&","&listnode{","'","''","'')","'';","'(',","')","')',","'+inf');","'1';","'11';","'['时入栈；","']'时，栈不为空，出栈并判断栈顶元素是否与当前符合对应；","'a';","'{',","'}',","($p","($q","(0000……001)","(1","(atoi)","(int)(($len","(min,","(thi",")","){","*","**","*/","*listnod","*listnode)","*listnode,","*minstack)","*treenod","*treenode)","+","+=",".=","/","/*","/**","//","0","0)","0);","0,","0,1,2,3……n","00000","0;","0]","0。否则，n则不是3","0和前一个元素比较产生的前边界问题。","0（递归的终止条件）","0，0⊕0=0，1⊕0=1，0⊕1=1。","0；","1","1)","1))","1)/2)","1);","1){","1)，f(i","1)，直接取","1)；","1,","1,n","1.","1.节点的左子树只包含小于当前节点的数。","10","10);","10,","100,","1000,","10000","10010","10;","10，得到个位数；","1162261467","1162261467。计算如下：","11。","18","1;","1]","1])","1],","1];","1]为子序列末端的最大序子列连续和]，即","1]时，f(i)","1]，但可以是[0,","1]，那么","1⊕1","1的位置，j","1级台阶爬1级或从第n","1级方案和n","1）。","1，i","1，最终会导致这个数的位数增加。如：9999（4位数）","1，返回","1；","1；n","2","2)","2);","2)。","2)。可以用利用三个滑动变量将其空间复杂度优化至o(1)。","2**31","2.","2.节点的右子树只包含大于当前节点的数。","2147483647","2;","2级台阶爬2级（由于限制只能爬1级或2级）；","2级方案之和，即f(n)","2，返回","2，返回时字符串长度为2。遍历时，从","3","3)","3**i","3.","3.所有左子树和右子树自身必须也是二叉搜索树。","31)","32","3;","3的幂","3的幂次方的最大整数值为","4,","4.","40,","400,","4，需要先知道","5,","50,","500,","6，结果不能是[0,","9","9)","9,","90,","900",":",":=",";","=","==","===","==二进制==>","=>",">",">=",">=0",">>",">check($p",">check($root,",">hammingweight($z);",">helper($head",">helper($head);",">helper($n",">helper($n);",">helper($nums,",">helper($root",">helper($root,",">left",">left)",">left),",">left);",">left,",">left;",">maxdepth($root",">minstack)",">minstack);",">minstack[]",">minstack[count($thi",">next",">next);",">next;",">num",">nums;",">reverse($nums,",">reverselist($p);",">right",">right)",">right))",">right,",">right;",">shuffle();",">stack)",">stack))",">stack);",">stack[]",">stack[count($thi",">val",">val)",">val))",">val)){",">val){",">val,",">val;",">val]];","?","@param","@return","[","[$node","[$root,","[0,","[1,","[3,3],","[[$root","[];","[][]int","[]int","[以a[i]为子序列末端的最大序子列连续和]，将","[以a[i]为子序列末端的最大序子列连续和]，记为","[整个序列最大序列和]","];","^","__construct($nums)","__construct($v","__construct($val)","__construct($value)","__construct()","a[i]","a[i],","a[i]是减益效果，则抛弃","a[i]是增益效果，则","ans进行左移一位，然后加入最低位；","api","append(queue,","append(this.min,","append(this.stack,","array","array.","array_fill(0,","array_flip($nums);","array_pop($thi","array_shift($list);","array_slic","array_sum($nums);","array_unshift","binari","bool","boolean","break;","buzz","call","check($p,","class","climbstairs($n)","configur","constructor()","constructor();","containsduplicate($nums)","continue;","count($digits);","count($list);","count($matrix);","count($nums)","count($nums);","count($nums1)","count($s)","countandsay($n)","countprimes($n)","ctype_alnum","data","defin","definit","deletenode($node)","diff","extend","f(i","f(i)","f(i)。","f(i)。（取a[i]相当于重新开始去探索可能存在的新的连续序列最大值）","f(i)？","f(n","fals","false;","firstbadversion($n)","firstuniqchar($s)","fisher","fizz","fizzbuzz","fizzbuzz($n)","floor($i","floor($j","for($i","for(;$start","func","function","generate($numrows)","getmin()","hammingdistance($x,","hammingweight($n)","hammingweight($num)","hascycle($head)","hash","haystack","head","head.next","helper($head){","helper($n){","helper($nums,","helper($root,","helper(nod","helper(node.left)","helper(node.right)","helper(root)","here.","if(","if(!$p","if(!$root)","if(!$thi","if($head","if($i","if($l1","if($low","if($n","if($needl","if($nod","if($num","if($nums1[$m]","if($oper","if($p","if($p1","if($root","if($sum","if($top","if($valu","if(($p","if(count($nums)","if(count($thi","if(empty($strs))","if(strlen($haystack)","ii","inf","inf'","inf',","initi","instanti","int","int)","integ","integer[]","integer[][]","intersect($nums1,","intval($x","intval(($low","isanagram($s,","isbadvers","isbadversion($mid))","isbadversion($version){}","ispalindrome($head)","ispalindrome($s)","ispowerofthree($n)","issymmetric($root)","isvalid","isvalid($s)","isvalidbst($root)","isvalidbst(root","isvalidsudoku($board)","it.","item","j","j（j>1）倍一定是合数，标记出全部的合数，其余为质数","j（j>1）倍一定是合数，标记出全部的合数，其余为质数。详细见代码。","k","key","l","leetbook《初级算法》题解","leetcod","left","left.maxnod","left.minnod","len","len(queue)","len(this.min)","len]","levelorder($root)","levelorder(root","link","list","list($node,","list.","list1","list1.val","list2","listnod","listnode(","ll","longestcommonprefix($strs)","m","m))","make([]*treenode,","make([][]int,","make([]int,","max","max(","max($nums[0],","max($thi","max(f(i","max(l,r)","max)","maxdepth($root)","maxdepth(root","maxdepth(root.left)","maxdepth(root.right)","maxnod","maxprofit($prices)","maxsubarray($nums)","maxsum","maxsum，说明当前遍元素是正数，对","merge(&$nums1,","mergetwolists($l1,","mergetwolists(list1","min","min($thi","minnod","minstack","minstack{}","missingnumber($nums)","mlogm))","mod(取模)","movezeroes(&$nums)","myatoi($s)","n","n]","needl","new","next","next:","next;","nil","nil,","node","node.","node.v","null","null)","null){","null,","null;","num","nums1","nums2","nums[i","nums[i]","nums[i],","nums[i]。最终，取两种情况的最大值，作为","n，等于则证明","o(1)","o(1)。","o(n)，可以将","obj","obj.getmin();","obj.pop();","obj.push(val);","obj.top();","object","origin","p","p1","param_3","param_4","parent","php","php_int_max;","php_int_min;","plusone($digits)","pop()","pow(10,","pow(2,","pre","privat","ps:","ps：","ps：此法用下列代码维持o(1)的空间复杂度，有些取巧的嫌疑。操作整型数组变成关联数组，这在php可以说得通。对于强类型语言来说，就很难实现了，并不能保证o(1)的空间复杂度。","public","push($val)","push(val","queue","random","removeduplicates(&$nums)","removenthfromend($head,","reset","reset()","reset();","restyp","restype{}","result","result.isvalid","result.maxnod","result.minnod","resultitem","return","reverse($x)","reverse(&$arr,","reversebits($n)","reverselist($head)","reverselist(head","reversestring(&$s)","right","right.maxnod","right.minnode.v","right:=","rob($nums)","romantoint($s)","root","root)","rotate(&$matrix)","rotate(&$nums,","rr，那么该二叉树的最大深度即为","shuffl","shuffle()","singlenumber($nums)","singli","solut","sort","sort($nums);","sort($nums1);","sort($nums2);","sort()","sortedarraytobst($nums)","stack","strcasecmp","string","string[]","string[][]","strlen($s);","strstr($haystack,","strstr()","struct","structur","such:","sum","sum。","sum；","target","temp","temp.next","this.min","this.min[:len(this.min)","this.min[len(this.min)","this.stack","this.stack[:len(this.stack)","this.stack[len(this.stack)","tmp","top()","tree","treenod","treenode($nums[$mid]);","true","true;","twosum($nums,","type","unset($nums[$i]);","unset($q);","val","val)","val){","val:","valu","var","versioncontrol","versioncontrol.","while(","while($count","while($curlen","while($flag)","while($head","while($i","while($l1","while($low","while($m","while($n","while($num","while($p","while($p1","while($x","while(count($list)","x，i","yate","{","||","}","“归”：局部反转指针","“读”操作并不复杂，但遍历时边界问题的比较处理起来比较难受。","“递”：指针后移一步","……","⊕","、a[i]","、f(i","、nums[i]。","一、哈希表法","一、常规法","一个数","一个数与","一个数与它本身异或等于0；","一前一后，比较对应的值；","一定没有余数，即","一直指向反转前的链表尾部，方便直接返回。","一种情况是不打劫","三指针遍历，利用两个指针遍历分别遍历两个链表，并比较对应值的大小，新指针指向小的节点，小的一方的指针也要往后移。","上下翻转","上面这段代码利用了长度为","不产生进位；","不同即可。","不需要进位","与","与最低价差价最大时，更新最大收益","与运算，根据结果判断最低位的值。","两个单词为异位词","两个字符","两个数组的交集","两数之和","两数进行异或（同为0，异为1）运算，结果值二进制中","个元素是为组b，前面的元素为组a。分别反转组a，组b，最后再反转整体即可。","个元素的数组，有一个","个结点","中。这样查找","中即可。","中存在，则表示","中，既要存出现次数，也要存储在字符串中的键值。","为","为3的幂次方，则","为n，树构建为logn","为了在输出中体现出“层”的概念，每次从队列中取出当前层的所有节点。","为什么快指针每次走2步？","为元素个数，若","为元素值，","为卖出点，在","为数组的元素，valu","为最后一个元素时且不等于前一个元素时，需要对前面的连续元素进行“读”，然后结束循环，则无法将最后一个元素“读”出。对于这个问题，在不增加额外判断的情况下，可以在遍历前对字符串尾部增加一个哨兵（拼上一个当前字符串不可能出现的字符，例如：a），这样来解决后边界问题。","为空证明是删除的第一个是节点","为该元素出现的次数。数组一记录到哈希表这个动作类似于一个生产者。","主对角线翻转","之后对总收益有没有增益，若有则买；","买卖股票的最佳时机","了，但","二、多次反转法","二、排序法","二分法","二分法（递归）","二叉搜索树中序遍历的结果，则是一个有序数组。但并不能确定根节点的位置，任何一个点都可能是根节点。当增加了高度平衡这个条件时，有序数组中间位置就可以确定是树的根节点了。以这个思路把有序数组重新构建回二叉搜索树。","二叉搜索树是有序的，传入数组也是有序的，有序就要想到二分法。最简单保持树平衡的方式，就是使根节点左右子孙树节点相差不超过1个","二叉搜索树特征","二叉树的层序遍历","二叉树的最大深度","交换位置；","产生进位；特殊情况：各个位全为","介绍","从","代码","以上过程，最先得出的一定是末位数（个位数），每次给取模的值乘10，加上原先的值，即可得到反转后的结果。","传入值与","传入值进行右移一位。","位1的个数","位机中整型占4个字长，最大值为","作为","使用","例子：","值是否相同；","假设，从第一个元素开始向后遍历累加，得[当前连续子序列和]","元素。","元素个数，m平均每个元素的字符长度。","元素的最小长度","先把两个根节点放入队列；","先走n步","全局最大打劫金额","关于","关键是利用指针","其他","典型的二分查找","内置函数","内置函数一般被认为是快速排序，时间和空间复杂度都来自于快速排序。","函数（快排），然后利用双指针，比较两个数组中相同的值。","分析思路","分析：遍历到","分治","则删除，并在数组末尾增加","则是求","删除排序数组中的重复项","删除链表中的节点","删除链表的倒数第","删除链表的倒数第n个节点","判定有环：当快指针遇上慢指针则为有环","判断3*3方块内有无重复","判断同列有无重复","判断同行有无重复","判断左右子树是否对称","判断当前节点是否符合二叉搜索树","判断每个元素中的第一个字符是否相同，第二个字符是否相同……当有不相同或者有元素字符遍历完毕，则结束。","判断节点值是否在","利用一个数组模拟栈，一个数组存储当前栈的最小值。","利用一个辅助指针","利用内置函数快排","利用内置函数快排，然后遍历比较前后值是否相同。","利用冒泡等其他时间性能不佳的排序，可以把空间复杂度降到最低。","利用十进制","利用双指针从尾部遍历，即","利用哈希表+生产消费的概念。","利用哈希表，以","利用哈希表，将数组一记录到哈希表中，哈希表的","利用栈来做。","利用贪心算法，判断一下买入当前点","利用高斯求和公式。","到达数组最后。","加","加一","加上当前元素","加上当前元素后变小，但不影响大局；","加上当前元素后，全盘皆输。sum","加上当前元素后，得到新","动态规划","单个字符，2.","即，输入测试用例","原因：具体走几步可以自己设定，让快指针每次走2步，而慢指针每次走1步，这样的话，误差较小，快指针在一圈就有可能遇上（位置重合）慢指针。","去除头节点","双层遍历","双指针","双指针法。","双指针法，一个指针（i）从头，一个指针（j）从尾，进行遍历比较，当指针索引i大于指针索引j时，遍历结束。","双指针法，利用两个指针分别遍历两个字符串进行比较。","反转其中一个链表进行比较","反转字符串","反转第二段链表","反转链表","取","取决于","取出当前层的所有节点","取模","变形后，让每次消费节点时，遍历（内层）取出队列中当前层全部的节点，并把它的左右节点（若存在）放入队尾，这样用计数器记录外层遍历的次数，即最大高度。","另一种情况则是打劫","只出现一次的数字","只有一个链遍历完，则退出","只能买入一次，相当于全局控制最大收益，需要确定买入点。","可以多次买入多次卖出，这样的话，实际上就是求前后两个上升数的和，无需确定买入点。","可多次买入，最低点买，最高点买，再买在卖。","可能会出现一种特殊情况，nums1","可运行的代码","右移后，继续与运算，然后判断。循环32次。","合并两个有序数组","合并两个有序链表","合并结果","后每个位都向前进","后，","后，继续取模，可得到十位数；","向后移动一位；","否则不买，且","和","和一个临时指针","哈希表法，题目要求的是返回第一个唯一字符串的","唯一的字符串个数,","回到题目，题目中提到数组中除一个数出现一次以外，其他数都出现了两次。这道题目就可以利用异或运算特性来做，把数组中的数依次异或运算，出现两次的数异或运算为0，最终结果为出现一次的数。","回文链表","在利用","埃氏筛","埃氏筛，某个数","基于广度优先搜索（非递归法）的变形。","处向前。","处向前，nums2","处理特殊情况：若p1走完n步，p1为空，则证明删除的是第一个节点。","复杂度","外观数列","大","大于","大于[最大连续的子序列和]","大于数组长度的问题。","如何求","如何确定3*3方块最右上角位置？","如何进行“读”操作？","如果步长过大，可能要多圈才能完成两指针的遇上（位置重合）。","如此反复，直到","如此循环，直到这个数为0时，便可得到各个位数的所有数。","始终操作的是同一条链表。","字母异位词：使用字母相同和相同字母的个数也相同，构成不同的单词。","字符串","字符串中的第一个唯一字符","字符串转换整数","字符类型分为空格、符合、数字、字母四种情况。","存在重复元素","实现","对","对应的值，j","对称二叉树","将","将一个十进制数进行异或运算，会发现如下特性：","将倒数","将所有表示情况列出来","将把节点p的左子节点和节点q的右子节点放入队列，将把节点p的右子节点和节点q的左子节点放入队列。","将有序数组转换为二叉搜索树","将求","将求整个打劫的最大金额拆分为求若干个遍历到i时的最大打劫金额，并记为f(i)。","将这个数除10","将链表一分为二","小书《初级算法》的题解书籍。","小于","就等于","尾出头进","左右子树无效，则当前树一定不是有效的","左右子树是否对称？","左子树和右子树的最大深度","左子树的右子树和右子树的左子树是否对称","左子树的左子树和右子树的右子树是否对称；","已在","已经开辟了足够的空间，遍历两个数组时比较谁大，谁插入","常规循环法，遍历判断","常规思路，遍历数组，若元素为","广度优先搜索是每次从队列中取出一个节点进行消费，并把它的左右节点（若存在）放入队尾。","开始，可以解决当前元素i","异或","异或等于他本身；","异或运算符合交换律和结合律。","异或运算规则是“同为0，异为1”，即","归：判断节点值是否在","当","当一直进位到最高位，需要增加一位","当值不相等时，haystack","当值相等时，两指针分别递增；","当前最大前缀","当前节点为","当前节点和子孙节点最小值的节点","当前连续和小于0，则需重置，重新连续计算","当前连续子序列和","当字符为","当然，仅存次数也可以，再另外遍历一次字符串，判断字符出现的位置即可，复杂度相同。","快慢指针法","快慢指针法，利用指针p1、p2，让p1先走n步；然后p1、p2一起走，直到p1走到最后一个节点，p2这是恰巧走到倒数n+1个节点，然后进行删除操作。","快指针在前，每次走2步","思路","慢指针在后，每次走1步","或","所以可以得到动态转移方程：","所以第n级台阶的爬楼方案等于n","所有左子树和右子树自身必须“先是”二叉搜索树。","打乱数组","打劫了nums[i]，则必然不能打劫","打家劫舍","把杨辉三角看成一个二维数组，找规律可发现。","拆分成求","指向递归时的当前节点，利用","指针","指针已经到","指针还没遍历完，最后直接把他塞入","排序和搜索","推出动态方程公式后，很容易想到递归法，但是递归法，重复计算量大，运行时间超时。所以使用三个滑动块来做，方案更优。","操作会产生两种结果。","放入","数列的和，然后减去","数字栈","数学","数组","数组二扮演消费者的角色。遍历数组二，若数组二元素中有和哈希表中","数组整数和，则得到缺失数字的值。","数组的长度，相当于只需要移动余数位","整数反转","方法一","方法一、常规循环","方法一、排序+双指针","方法一、暴力法","方法一、横向比较","方法一、深度优先搜索","方法一、贪心算法","方法一、递归法","方法一、遍历法","方法一、键值交换","方法二","方法二、动态规划法","方法二、哈希表","方法二、哈希表法","方法二、广度优先搜索","方法二、数学法","方法二、整数限制","方法二、纵向比较","方法二、迭代法","方法二、递归法","方法二、非递归法","旋转图像","旋转数组","时的最大打劫金额，实际上每次用到的，只是是","时空复杂度","时间复杂度：o()","时间复杂度：o(1)","时间复杂度：o(k*n)","时间复杂度：o(logn)","时间复杂度：o(m)","时间复杂度：o(max(n,","时间复杂度：o(max(nlogn,","时间复杂度：o(n)","时间复杂度：o(n^2)","时间复杂度：o(nlogn)","时间复杂度：o(nm)","时，","时，f(i)","时，一定搜索不到，直接返回","时，则更新","时，始终返回","时，此时按兵不动，说明当前元素是一个相反数小于","时，说明当前元素是一个相反数大于","易理解一文中提到，动态规划的核心是“以子序列的结束点为基准，向前递推子序列关系”这点，个人感觉对理解动态规划有很大的帮助。","是","是减益效果，sum","是包含","是否等于","是否继续","是否越界","是增益效果；","暴力法","暴力法的瓶颈在于寻找差diff的时间复杂度过高，为","最低价时买入，与最低价差价最大时卖出。","最后，要处理一下[一个长链，一个短链，长链还没走完]的情况。","最大和","最大子序和","最大收益","最大连续的子序列和","最小值辅助栈","最小栈","最长公共前缀","最长公共前缀一定是数组元素都具有的，默认当前最长公共前缀为第一个元素值，进行遍历，拿第一个、第二个……分别与当前最长公共前缀比较，逐步最小最长公共前缀的范围，最终确定最长公共前缀。","有关。[以a[i","有效的字母异位词","有效的括号","有效的数独","有重复值。","来计算二进制数中","杨辉三角","某个数","栈","树","根据","根节点","根节点要大于左路的最大值，小于右路的最小值","欲求","每个","每次取出当前层全部的节点","每次遍历时，","每次都返回始终指向反转前的链表尾部（也即反转后链表的头）的指针p。","每行两边的值都是","每行内部的值是上一行对应位置元素和它前一个的元素的和。","每道题的题解都包含以下三个方面：","比较字符（忽略字母大小写）","求一个整数各个位上的数：","汉明距离","没有大于","没难度，直接按题意来。","注意处理一下：k","注意处理两种特殊情况：","洗牌算法","深度为","深度优先搜索","滑动块","点的最大打劫金额","点重新买入。","然后再细分，分别处理四种情况。","爬楼梯","特别注意，题目要求不能使用同一个元素。元素值相同没关系，只要保证元素对应的","特性1","特性2","环形链表","生产","由于","由于传入的测试用例都是合法的，所以不用判断跨位情况，难度大大降低。","由于输出时，需要体现“层”，队列的每个","由此可得动态转移方程：","的","的个数","的个数。","的个数，就代表两数字对应二进制位不同的位置的个数。","的位置，j","的值","的值；","的尾部。","的幂次方。","的指针","的时间复杂度就变为了","的最大值。","的最大打劫金额，即","的空间复杂度来存储遍历到","的结果，在对其结果进行“读”操作，然后返回，由此递归；","的调用栈。","的负数，sum","的负数，这个负数对","目录","相同且出现次数（value）大于0，则将哈希表对应次数减一，并输出。","确定符号","确定那段区间进行反转","移动的时间复杂度为","移动零","空间复杂度：o()","空间复杂度：o(1)","空间复杂度：o(h)","空间复杂度：o(m)","空间复杂度：o(min(n,","空间复杂度：o(n)","空间复杂度：o(nlogn)","符号位","第1级台阶：1种方法（爬1级）；","第2级台阶：2种方法（爬2个1级或1个2级）；","第n级台阶：从第n","第一个点","第一个错误的版本","第二段链表的起始位置","筛出有效数字入栈，暂存符号","系列题目","终止条件：节点为空或节点的指向为空","终止：当前为空；","结尾加个哨兵","结束","结果一定为","结果值","结果查找对应的键值的复杂度将为","结果集","继续向后移动一位；","维护一个新链表。一边遍历，一边把指针指向掉头，指向新链表。","缺失数字","罗马数字转整数","老哥在详细解读动态规划的实现,","若","若“和”减少，f(i","若“和”增加，f(i","若一个长链，一个短链，长链还没走完","若不存在，则两个单词不是异位词；","若不相等，i","若不相等，则进行对前面的连续元素进行“读”，并将计数器重置为1。","若两个节点（p、q）都是null，则局部是对称的，继续下一遍历；","若存在有不为0的，则没全部消费掉，即两个单词不是异位词。","若新","若有一个节点不为空，或者两个节点的值不相等，则不对称，直接返回false；","若求","若求整个打劫的最大金额则变成了求","若相等，则删除","若结果为","范围内","范围内。","范围数没出现在这个数组中。","获取链表长度","表示当前节点的最大取值（开区间点），+inf","表示当前节点的最小取值（开区间点），","表示正无穷","表示负无穷","要放弃当前连续序列，从下一元素重新开始累加。","计数质数","计算","让","让左子树的右子树和右子树的左子树紧挨着入队，出队时进行比较。","让左子树的左子树和右子树的右子树紧挨着入队，出队时进行比较；","记录以a[i]为子序列末端的最大序子列连续和","设计问题","详细解答见代码","贪心算法。","输出","这个题很容易想到借助一个单独的hash表来做，但时并不能满足进阶要求中的空间复杂度要为o(1)。所以不能借助新的辅助数组。","这是一本针对于","这次多次重复递归计算","这题也符合斐波那契数列。","进位","进行下一循环。","进行与运算，得出最低位的值；","进行局部节点指向掉头；","进阶法，不用循环递归，时间复杂度降低为","迭代法，递归法转迭代必然需要用到队列进行辅助。","逐位颠倒，用1与传入值进行与运算，可计算出最低位的值。","递归","递归改为非递归法，借助队列来实现。","递归最大深度为h","递归栈为n","递归法","递归法会产生为","递归的尽头是","递归返回条件","递归返回结果中需要返回的三个值","递：所有左子树和右子树自身必须“先是”二叉搜索树；","遍历","遍历交换后的数组，判断哪个key没有，即为缺失的值。","遍历哈希表，判断每个元素的值是否为0，若为0，则证明全部消费掉，即两个单词是异位词；","遍历弹出两个节点，进行比较：","遍历数组，把当前元素与随机位置的元素进行交换。","遍历时先区别前面「有数字或符号」和「无数字或符号」这两大类；","遍历比较当前元素和前一个元素是否相等，若相等则计数+1；","遍历相加，只有两种情况。1.","遍历第一个单词，将所有的字符存储哈希表中，并记录次数（视为生产者）；","遍历第二个单词，若当前字符在哈希表中存在，此字符在哈希表中的次数减一（视为消费者）；","遍历结束后，栈要为空，才证明字符串中括号正确。","重新判断当前树上谁是最大值点，最小值点","重置为0，再进行重新比较。","链表","键值交换","键值交换后存到","长度","长度小于","问题还有一个不错的小文章我倒要看看一个fizzbuzz能讲多少道理","队列","队列大小m，最坏为n","除以","需要保存节点和节点的层数。","需要回溯到","需要移动到","非9","题外话：@老虎","题目中提到仅判断字母和数字且字母忽略大小写，可以借助php的两个内置函数实现。","题目要求线性复杂度和不适用额外空间来实现。这就不能使用常规方法来实现，利用异或的特性来实现。","题：位1的个数","颠倒二进制位","验证二叉搜索树","验证回文串","验证字符是否仅含字母和（或）数字","（2^31","（5位数）","（总节点数为奇数时，左右子树节点数相同；为偶数时，左右子树节点数差一）。","，","，valu","，使指针","，其他语言中数组需要提前声明固定长度。","，则最低位为","，加","，所以","，而不是","，那么"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"介绍","keywords":"","body":"LeetBook《初级算法》题解\n这是一本针对于 Leetcode 小书《初级算法》的题解书籍。\n每道题的题解都包含以下三个方面：\n\n分析思路\n时空复杂度\n可运行的代码\n\n\n目录\n\n数组\n删除排序数组中的重复项\n买卖股票的最佳时机 II\n旋转数组\n存在重复元素\n只出现一次的数字\n两个数组的交集 II\n加一\n移动零\n两数之和\n有效的数独\n旋转图像\n\n\n字符串\n反转字符串\n整数反转\n字符串中的第一个唯一字符\n有效的字母异位词\n验证回文串\n字符串转换整数 (atoi)\n实现 strStr()\n外观数列\n最长公共前缀\n\n\n链表\n删除链表中的节点\n删除链表的倒数第N个节点\n反转链表\n合并两个有序链表\n回文链表\n环形链表\n\n\n树\n二叉树的最大深度\n验证二叉搜索树\n对称二叉树\n二叉树的层序遍历\n将有序数组转换为二叉搜索树\n\n\n排序和搜索\n合并两个有序数组\n第一个错误的版本\n\n\n动态规划\n爬楼梯\n买卖股票的最佳时机\n最大子序和\n打家劫舍\n\n\n设计问题\n打乱数组\n最小栈\n\n\n数学\nFizz Buzz\n计数质数\n3的幂\n罗马数字转整数\n\n\n其他\n位1的个数\n汉明距离\n颠倒二进制位\n杨辉三角\n有效的括号\n缺失数字\n\n\n\n"},"array/summary.html":{"url":"array/summary.html","title":"数组","keywords":"","body":"数组\n"},"array/remove-duplicates-from-sorted-array.html":{"url":"array/remove-duplicates-from-sorted-array.html","title":"删除排序数组中的重复项","keywords":"","body":"删除排序数组中的重复项\n思路\n双指针法。\n指针 i 和 j 一前一后，比较对应的值；\n若相等，则删除 j 对应的值，j 继续向后移动一位；\n若不相等，i 需要移动到 j 的位置，j 向后移动一位；\n如此反复，直到 j 到达数组最后。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function removeDuplicates(&$nums) {\n        $len = count($nums);\n        for($i = 0, $j = 1; $j "},"array/best-time-to-buy-and-sell-stock-ii.html":{"url":"array/best-time-to-buy-and-sell-stock-ii.html","title":"买卖股票的最佳时机 II","keywords":"","body":"买卖股票的最佳时机 II\n思路\n贪心算法。\n可多次买入，最低点买，最高点买，再买在卖。\n利用贪心算法，判断一下买入当前点 i 之后对总收益有没有增益，若有则买；\n否则不买，且 i - 1 为卖出点，在 i 点重新买入。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $prices\n     * @return Integer\n     */\n    function maxProfit($prices) {\n        // 最大收益\n        $max = 0;\n        for($i = 1; $i  $max) {\n                $max = $newMax;\n            }\n        }\n\n        return $max;\n    }\n}\n"},"array/rotate-array.html":{"url":"array/rotate-array.html","title":"旋转数组","keywords":"","body":"旋转数组\n一、常规法\n思路\n尾出头进\n复杂度\narray_unshift 移动的时间复杂度为 n\n时间复杂度：O(k*n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return NULL\n     */\n    function rotate(&$nums, $k) {\n        $i = 0;\n        while($i 二、多次反转法\n思路\n将倒数 k 个元素是为组B，前面的元素为组A。分别反转组A，组B，最后再反转整体即可。\n注意处理一下：k 大于数组长度的问题。\n复杂度\narray_unshift 移动的时间复杂度为 n\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return NULL\n     */\n    function rotate(&$nums, $k) {\n\n        $len = count($nums);\n        // 当 k 大于 数组的长度，相当于只需要移动余数位\n        $k = $k % $len;\n\n        $this->reverse($nums, 0, $len - $k -1);\n        $this->reverse($nums, $len - $k, $len - 1);\n        $this->reverse($nums, 0, $len -1);\n\n        return $nums;\n    }\n\n    /**\n     * $arr 数组\n     * $start $end 确定那段区间进行反转\n     */\n    function reverse(&$arr, $start, $end)\n    {\n        for(;$start "},"array/contains-duplicate.html":{"url":"array/contains-duplicate.html","title":"存在重复元素","keywords":"","body":"存在重复元素\n一、哈希表法\n思路\n利用哈希表，以 key 为元素值， value 为元素个数，若 key 已在 hash 中存在，则表示 nums 有重复值。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function containsDuplicate($nums) {\n        $hash = [];\n        for($i = 0; $i 二、排序法\n思路\n利用内置函数快排，然后遍历比较前后值是否相同。\n复杂度\nsort() 内置函数一般被认为是快速排序，时间和空间复杂度都来自于快速排序。\n时间复杂度：O(nlogN)\n空间复杂度：O(nlogN)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function containsDuplicate($nums) {\n        // 利用内置函数快排\n        sort($nums);\n        for($i = 0; $i PS: 利用冒泡等其他时间性能不佳的排序，可以把空间复杂度降到最低。\n"},"array/single-number.html":{"url":"array/single-number.html","title":"只出现一次的数字","keywords":"","body":"只出现一次的数字\n思路\n题目要求线性复杂度和不适用额外空间来实现。这就不能使用常规方法来实现，利用异或的特性来实现。\n异或运算规则是“同为0，异为1”，即 1⊕1 = 0，0⊕0=0，1⊕0=1，0⊕1=1。\n将一个十进制数进行异或运算，会发现如下特性：\n\n一个数与 0 异或等于他本身；\n一个数与它本身异或等于0；\n异或运算符合交换律和结合律。\n\n例子：\n// 特性1\n18 ==二进制==> 10010\n⊕\n0  ==二进制==> 00000\n--------------------\n18 ==二进制==> 10010\n// 特性2\n18 ==二进制==> 10010\n⊕\n18 ==二进制==> 10010\n--------------------\n0  ==二进制==> 00000\n回到题目，题目中提到数组中除一个数出现一次以外，其他数都出现了两次。这道题目就可以利用异或运算特性来做，把数组中的数依次异或运算，出现两次的数异或运算为0，最终结果为出现一次的数。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function singleNumber($nums) {\n        $result = 0;\n        for($i = 0; $i "},"array/intersection-of-two-arrays-ii.html":{"url":"array/intersection-of-two-arrays-ii.html","title":"两个数组的交集 II","keywords":"","body":"两个数组的交集 II\n方法一、排序+双指针\n思路\n使用 sort 函数（快排），然后利用双指针，比较两个数组中相同的值。\n复杂度\n时间复杂度：O(max(nlogn, mlogm))\n空间复杂度：O(min(n, m)) ，其他语言中数组需要提前声明固定长度。\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer[]\n     */\n    function intersect($nums1, $nums2) {\n        sort($nums1);\n        sort($nums2);\n        $result = []; \n        for($i = 0, $j = 0; $i  $nums2[$j]) {\n                $j++;\n            } else {\n                $i++;\n            }\n        }\n\n        return $result;\n    }\n}\n方法二、哈希表\n思路\n利用哈希表，将数组一记录到哈希表中，哈希表的 key 为数组的元素，value 为该元素出现的次数。数组一记录到哈希表这个动作类似于一个生产者。\n数组二扮演消费者的角色。遍历数组二，若数组二元素中有和哈希表中 key 相同且出现次数（value）大于0，则将哈希表对应次数减一，并输出。\n复杂度\n时间复杂度：O(max(n, m))\n空间复杂度：O(min(n, m))\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer[] $nums2\n     * @return Integer[]\n     */\n    function intersect($nums1, $nums2) {\n        $hash = [];\n        $result = [];\n\n        // 遍历 $nums1 放入 hash\n        for($i = 0; $i  0) {\n                $hash[$nums2[$i]]--;\n                $result[] = $nums2[$i];\n            }\n        }\n\n        return $result;\n    }\n}\n"},"array/plus-one.html":{"url":"array/plus-one.html","title":"加一","keywords":"","body":"加一\n思路\n加 1 操作会产生两种结果。\n\n非9 + 1 不产生进位；\n9 + 1 产生进位；特殊情况：各个位全为 9 ，加 1 后每个位都向前进 1，最终会导致这个数的位数增加。如：9999（4位数） + 1 = 10000 （5位数）\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $digits\n     * @return Integer[]\n     */\n    function plusOne($digits) {\n        $len = count($digits);\n        $i = $len -1;\n        // 是否继续\n        $flag = true;\n        while($flag) {\n            $sum = $digits[$i] + 1;\n            if($sum > 9) {\n                // 进位\n                $flag = true;\n                $digits[$i] = 0;\n\n                // 当一直进位到最高位，需要增加一位\n                if($i == 0) {\n                    $digits = array_fill(0, $len + 1, 0);\n                    $digits[0] = 1;\n                    // 结束\n                    break;\n                }\n\n                $i--;\n            } else {\n                // 不需要进位\n                $digits[$i] = $sum;\n                $flag = false;\n            }\n        }\n\n        return $digits;\n    }\n}\n"},"array/move-zeroes.html":{"url":"array/move-zeroes.html","title":"移动零","keywords":"","body":"移动零\n思路\n常规思路，遍历数组，若元素为 0 则删除，并在数组末尾增加 0 元素。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return NULL\n     */\n    function moveZeroes(&$nums) {\n        // 0 的个数\n        $counter = 0;\n        $len = count($nums);\n        for($i = 0; $i "},"array/two-sum.html":{"url":"array/two-sum.html","title":"两数之和","keywords":"","body":"两数之和\n方法一、暴力法\n思路\n双层遍历\n复杂度\n时间复杂度：O(n^2)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        for($i = 0; $i 方法二、哈希表法\n思路\n暴力法的瓶颈在于寻找差diff的时间复杂度过高，为 O(n)，可以将 nums 键值交换后存到 hash 中。这样查找 diff 的时间复杂度就变为了 O(1)。\n特别注意，题目要求不能使用同一个元素。元素值相同没关系，只要保证元素对应的 key 不同即可。\n即，输入测试用例 nums = [3,3], target = 6，结果不能是[0, 0] 或 [1, 1]，但可以是[0, 1]\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Integer[]\n     */\n    function twoSum($nums, $target) {\n        // 键值交换\n        $hash = array_flip($nums);\n\n        // 根据 target - num 结果查找对应的键值的复杂度将为 O(1)\n        for($i = 0; $i "},"array/valid-sudoku.html":{"url":"array/valid-sudoku.html","title":"有效的数独","keywords":"","body":"有效的数独\n思路\n暴力法\n\n判断同行有无重复\n判断同列有无重复\n判断3*3方块内有无重复\n\n如何确定3*3方块最右上角位置？\n$blockX = floor($i / 3) * 3;\n$blockY = floor($j / 3) * 3;\n复杂度\n时间复杂度：O(n^2)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String[][] $board\n     * @return Boolean\n     */\n    function isValidSudoku($board) {\n        for($i = 0; $i "},"array/rotate-image.html":{"url":"array/rotate-image.html","title":"旋转图像","keywords":"","body":"旋转图像\n思路\n上下翻转 + 主对角线翻转 = 旋转图像\n复杂度\n时间复杂度：O(n^2)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[][] $matrix\n     * @return NULL\n     */\n    function rotate(&$matrix) {\n        $len = count($matrix);\n\n        // 上下翻转\n        for($i = 0; $i  $i) {\n                    $tmp = $matrix[$i][$j];\n                    $matrix[$i][$j] = $matrix[$j][$i];\n                    $matrix[$j][$i] = $tmp;\n                }\n            }\n        }\n\n        return $matrix;\n    }\n}\n"},"string/summary.html":{"url":"string/summary.html","title":"字符串","keywords":"","body":"字符串\n"},"string/reverse-string.html":{"url":"string/reverse-string.html","title":"反转字符串","keywords":"","body":"反转字符串\n思路\n双指针\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String[] $s\n     * @return NULL\n     */\n    function reverseString(&$s) {\n        for($i = 0, $j = count($s) -1; $i "},"string/reverse-integer.html":{"url":"string/reverse-integer.html","title":"整数反转","keywords":"","body":"整数反转\n思路\n求一个整数各个位上的数：\n一个数 mod(取模) 10，得到个位数；\n将这个数除10 后，继续取模，可得到十位数；\n如此循环，直到这个数为0时，便可得到各个位数的所有数。\n以上过程，最先得出的一定是末位数（个位数），每次给取模的值乘10，加上原先的值，即可得到反转后的结果。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $x\n     * @return Integer\n     */\n    function reverse($x) {\n        $value = 0;\n        while($x != 0) {\n            $mod = $x % 10;\n            $x = intval($x / 10);\n            $value = $value * 10 + $mod;\n        }\n\n        if($value > 2**31 -1 || $value "},"string/first-unique-character-in-a-string.html":{"url":"string/first-unique-character-in-a-string.html","title":"字符串中的第一个唯一字符","keywords":"","body":"字符串中的第一个唯一字符\n思路\n哈希表法，题目要求的是返回第一个唯一字符串的 key ，而不是 value ，所以 hash 每个 item 中，既要存出现次数，也要存储在字符串中的键值。\n当然，仅存次数也可以，再另外遍历一次字符串，判断字符出现的位置即可，复杂度相同。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(m)\nm 唯一的字符串个数, m \n代码\nclass Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function firstUniqChar($s) {\n        $hash = [];\n        for($i = 0; $i "},"string/valid-anagram.html":{"url":"string/valid-anagram.html","title":"有效的字母异位词","keywords":"","body":"两个单词为异位词\n思路\n字母异位词：使用字母相同和相同字母的个数也相同，构成不同的单词。\n利用哈希表+生产消费的概念。\n\n遍历第一个单词，将所有的字符存储哈希表中，并记录次数（视为生产者）；\n遍历第二个单词，若当前字符在哈希表中存在，此字符在哈希表中的次数减一（视为消费者）；\n若不存在，则两个单词不是异位词；\n遍历哈希表，判断每个元素的值是否为0，若为0，则证明全部消费掉，即两个单词是异位词；\n若存在有不为0的，则没全部消费掉，即两个单词不是异位词。\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(m)\n代码\nclass Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return Boolean\n     */\n    function isAnagram($s, $t) {\n        $hash = [];\n        // 生产\n        for($i = 0; $i "},"string/valid-palindrome.html":{"url":"string/valid-palindrome.html","title":"验证回文串","keywords":"","body":"验证回文串\n思路\n双指针法，一个指针（i）从头，一个指针（j）从尾，进行遍历比较，当指针索引i大于指针索引j时，遍历结束。\n题目中提到仅判断字母和数字且字母忽略大小写，可以借助PHP的两个内置函数实现。\n\nctype_alnum 验证字符是否仅含字母和（或）数字 \nstrcasecmp 比较字符（忽略字母大小写）\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isPalindrome($s) {\n        $len = strlen($s);\n        for($i = 0, $j = $len - 1; $i "},"string/string-to-integer-atoi.html":{"url":"string/string-to-integer-atoi.html","title":"字符串转换整数 (atoi)","keywords":"","body":"字符串转换整数 (atoi)\n思路\n字符类型分为空格、符合、数字、字母四种情况。\n遍历时先区别前面「有数字或符号」和「无数字或符号」这两大类；\n然后再细分，分别处理四种情况。\n详细解答见代码\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(m)\n代码\nclass Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function myAtoi($s) {\n        // 数字栈\n        $stack = [];\n        // 符号位\n        $operator = '';\n        $num = 0;\n\n        // 1. 筛出有效数字入栈，暂存符号\n        for($i = 0; $i = 0; $i--){\n            $num += $stack[$i] * pow(10, $sLen - 1 - $i);\n        }\n\n        // 3. 确定符号\n        if($operator == '-') {\n            $num = -$num;\n        }\n\n        // 4. 是否越界\n        if($num > pow(2, 31) - 1){\n            return pow(2, 31) -1;\n        }\n\n        if($num \n"},"string/implement-strstr.html":{"url":"string/implement-strstr.html","title":"实现 strStr()","keywords":"","body":"实现 strStr()\n思路\n双指针法，利用两个指针分别遍历两个字符串进行比较。\n当值相等时，两指针分别递增；\n当值不相等时，haystack 的指针 i 需要回溯到 i - j + 1的位置，j 重置为0，再进行重新比较。\n注意处理两种特殊情况：\n\nneedle 为 '' 时，始终返回 0\nhaystack 长度小于 needle 时，一定搜索不到，直接返回 -1\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String $haystack\n     * @param String $needle\n     * @return Integer\n     */\n    function strStr($haystack, $needle) {\n\n        if($needle == '') return 0;\n        if(strlen($haystack) \n"},"string/count-and-say.html":{"url":"string/count-and-say.html","title":"外观数列","keywords":"","body":"外观数列\n思路\n递归法\n欲求 n = 4，需要先知道 n = 3 的结果，在对其结果进行“读”操作，然后返回，由此递归；\n递归的尽头是 n = 1，返回 1；n = 2，返回 11。\n如何进行“读”操作？\n遍历比较当前元素和前一个元素是否相等，若相等则计数+1；\n若不相等，则进行对前面的连续元素进行“读”，并将计数器重置为1。\n“读”操作并不复杂，但遍历时边界问题的比较处理起来比较难受。\n当 n = 2，返回时字符串长度为2。遍历时，从 i = 1 开始，可以解决当前元素i = 0和前一个元素比较产生的前边界问题。\n当 n 为最后一个元素时且不等于前一个元素时，需要对前面的连续元素进行“读”，然后结束循环，则无法将最后一个元素“读”出。对于这个问题，在不增加额外判断的情况下，可以在遍历前对字符串尾部增加一个哨兵（拼上一个当前字符串不可能出现的字符，例如：a），这样来解决后边界问题。\n复杂度\n时间复杂度：O(n^2)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $n\n     * @return String\n     */\n    function countAndSay($n) {\n        return $this->helper($n);\n    }\n\n    function helper($n){\n        if($n == 1) return '1';\n\n        if($n == 2) return '11';\n\n        $value = $this->helper($n-1);\n        $value .= 'a'; // 结尾加个哨兵\n\n        $sayValue = '';\n        $counter = 1;\n        for($i = 1; $i "},"string/longest-common-prefix.html":{"url":"string/longest-common-prefix.html","title":"最长公共前缀","keywords":"","body":"最长公共前缀\n方法一、横向比较\n思路\n最长公共前缀一定是数组元素都具有的，默认当前最长公共前缀为第一个元素值，进行遍历，拿第一个、第二个……分别与当前最长公共前缀比较，逐步最小最长公共前缀的范围，最终确定最长公共前缀。\n复杂度\n时间复杂度：O(nm)\nn 元素个数，m平均每个元素的字符长度。\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String[] $strs\n     * @return String\n     */\n    function longestCommonPrefix($strs) {\n        // 当前最大前缀\n        $prefix = '';\n        for($i = 0, $prefix = $strs[0] ? : ''; $i 方法二、纵向比较\n思路\n判断每个元素中的第一个字符是否相同，第二个字符是否相同……当有不相同或者有元素字符遍历完毕，则结束。\n复杂度\n时间复杂度：O(nm)\nn 元素个数，m平均每个元素的字符长度。\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param String[] $strs\n     * @return String\n     */\n    function longestCommonPrefix($strs) {\n\n        if(empty($strs)) return '';\n\n        // 元素的最小长度\n        $mixLen = PHP_INT_MAX;\n        for($i = 0; $i "},"linked-list/summary.html":{"url":"linked-list/summary.html","title":"链表","keywords":"","body":"链表\n"},"linked-list/delete-node-in-a-linked-list.html":{"url":"linked-list/delete-node-in-a-linked-list.html","title":"删除链表中的节点","keywords":"","body":"删除链表中的节点\n思路\n……\n复杂度\n时间复杂度：O(1)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val) { $this->val = $val; }\n * }\n */\n\nclass Solution {\n    /**\n     * @param ListNode $node\n     * @return \n     */\n    function deleteNode($node) {\n        $node->val = $node->next->val;\n        $node->next = $node->next->next;\n    }\n}\n"},"linked-list/remove-nth-node-from-end-of-list.html":{"url":"linked-list/remove-nth-node-from-end-of-list.html","title":"删除链表的倒数第N个节点","keywords":"","body":"删除链表的倒数第 N 个结点\n思路\n快慢指针法，利用指针p1、p2，让p1先走n步；然后p1、p2一起走，直到p1走到最后一个节点，p2这是恰巧走到倒数n+1个节点，然后进行删除操作。\n处理特殊情况：若p1走完n步，p1为空，则证明删除的是第一个节点。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @param Integer $n\n     * @return ListNode\n     */\n    function removeNthFromEnd($head, $n) {\n        $p1 = $head;\n        $p2 = $head;\n        // p1 先走n步\n        for($i = 0; $i next;\n        }\n\n        // p1 为空证明是删除的第一个是节点\n        if($p1 == null) return $head->next;\n\n        while($p1->next != NULL) {\n            $p1 = $p1->next;\n            $p2 = $p2->next;\n        }\n\n        $q = $p2->next;\n        $p2->next = $p2->next->next;\n        unset($q);\n\n        return $head;\n    }\n}\n"},"linked-list/reverse-linked-list.html":{"url":"linked-list/reverse-linked-list.html","title":"反转链表","keywords":"","body":"反转链表\n方法一、遍历法\n思路\n利用一个辅助指针 p 和一个临时指针 tmp 维护一个新链表。一边遍历，一边把指针指向掉头，指向新链表。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @return ListNode\n     */\n    function reverseList($head) {\n        $p = null;\n\n        while($head != null) {\n            $tmp = $head;\n            $head = $head->next;\n            $tmp->next = $p;\n            $p = $tmp;\n        }\n\n        return $p;\n    }\n}\n\n/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc reverseList(head *ListNode) *ListNode {\n    var pre *ListNode\n    for head != nil {\n        temp := head\n        head = head.Next\n        temp.Next = pre\n        pre = temp\n    }\n\n    return pre\n}\n\n方法二、递归法\n思路\n终止条件：节点为空或节点的指向为空\n“递”：指针后移一步\n“归”：局部反转指针\n关键是利用指针 p 和 head ，使指针 p 一直指向反转前的链表尾部，方便直接返回。\nhead 指向递归时的当前节点，利用 $head->next->next = $head 和 $head->next = null 进行局部节点指向掉头；\n每次都返回始终指向反转前的链表尾部（也即反转后链表的头）的指针p。\nPS： 指针 p 和 head 始终操作的是同一条链表。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n递归法会产生为 n 的调用栈。\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @return ListNode\n     */\n    function reverseList($head) {\n        return $this->helper($head);\n    }\n\n    function helper($head){\n        if($head == null || $head->next == null) return $head;\n\n        $p = $this->helper($head->next);\n        $head->next->next = $head;\n        $head->next = null;\n        return $p;\n    }\n}\n\n"},"linked-list/merge-two-sorted-lists.html":{"url":"linked-list/merge-two-sorted-lists.html","title":"合并两个有序链表","keywords":"","body":"合并两个有序链表\n思路\n三指针遍历，利用两个指针遍历分别遍历两个链表，并比较对应值的大小，新指针指向小的节点，小的一方的指针也要往后移。\n最后，要处理一下[一个长链，一个短链，长链还没走完]的情况。\n复杂度\n时间复杂度：O(m)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $l1\n     * @param ListNode $l2\n     * @return ListNode\n     */\n    function mergeTwoLists($l1, $l2) {\n        $list = new ListNode(-1);\n        $p = $list;\n        // 只有一个链遍历完，则退出\n        while($l1 != null && $l2 != null){\n\n            if($l1->val val){\n                $p->next = $l1;\n                $l1 = $l1->next;\n            } else {\n                $p->next = $l2;\n                $l2 = $l2->next;\n            }\n\n            $p = $p->next;\n        }\n\n        // 若一个长链，一个短链，长链还没走完\n        $p->next = $l1 === null ? $l2 : $l1;\n\n        // 去除头节点\n        return $list->next;\n    }\n}\n\n/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc mergeTwoLists(list1 *ListNode, list2 *ListNode) *ListNode {\n    list := &ListNode{\n        Val:  0,\n        Next: nil,\n    }\n    p := list\n\n    for list1 != nil && list2 != nil {\n        if list1.Val \n"},"linked-list/palindrome-linked-list.html":{"url":"linked-list/palindrome-linked-list.html","title":"回文链表","keywords":"","body":"回文链表\n思路\n\n获取链表长度\n将链表一分为二\n反转其中一个链表进行比较\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val) { $this->val = $val; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @return Boolean\n     */\n    function isPalindrome($head) {\n        $p = $head;\n\n        // 长度\n        $len = 0;\n        while($p != null) {\n            $len++;\n            $p = $p->next;\n        }\n\n        // 第二段链表的起始位置\n        $start = (int)(($len + 1)/2) + 1;\n\n        $p = $head;\n        $counter = 1;\n        while($counter next;\n                $p->next = null;\n                $p = $tmp;\n            } else {\n                $p = $p->next;\n            }\n        }\n\n        // 反转第二段链表\n        $p = $this->reverseList($p);\n        while($p->val !== null) {\n            if($p->val !== $head->val){\n                return false;\n            }\n            $head = $head->next;\n            $p = $p->next;\n        }\n\n        return true;\n    }\n\n    /**\n     * 反转链表\n     * @param ListNode $head\n     * @return ListNode\n     */\n    function reverseList($head) {\n        $p = null;\n\n        while($head != null) {\n            $tmp = $head;\n            $head = $head->next;\n            $tmp->next = $p;\n            $p = $tmp;\n        }\n\n        return $p;\n    }\n}\n\n"},"linked-list/linked-list-cycle.html":{"url":"linked-list/linked-list-cycle.html","title":"环形链表","keywords":"","body":"环形链表\n思路\n快慢指针法\n快指针在前，每次走2步\n慢指针在后，每次走1步\n判定有环：当快指针遇上慢指针则为有环\n为什么快指针每次走2步？\n原因：具体走几步可以自己设定，让快指针每次走2步，而慢指针每次走1步，这样的话，误差较小，快指针在一圈就有可能遇上（位置重合）慢指针。\n如果步长过大，可能要多圈才能完成两指针的遇上（位置重合）。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val) { $this->val = $val; }\n * }\n */\n\nclass Solution {\n    /**\n     * @param ListNode $head\n     * @return Boolean\n     */\n    function hasCycle($head) {\n        $p1 = $head;\n        $p2 = $head;\n\n        while($p1->next != null && $p2->next != null) {\n            $p1 = $p1->next;\n            $p2 = $p2->next->next;\n            if($p1 == $p2) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\n"},"tree/summary.html":{"url":"tree/summary.html","title":"树","keywords":"","body":"树\n"},"tree/maximum-depth-of-binary-tree.html":{"url":"tree/maximum-depth-of-binary-tree.html","title":"二叉树的最大深度","keywords":"","body":"二叉树的最大深度\n方法一、深度优先搜索\n思路\n深度优先搜索\n递归法\n\n左子树和右子树的最大深度 ll 和 rr，那么该二叉树的最大深度即为 max(l,r) + 1\n当前节点为 null 时， 深度为 0（递归的终止条件）\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(h)\n递归最大深度为h\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Integer\n     */\n    function maxDepth($root) {\n        if($root === null) return 0;\n\n        return max($this->maxDepth($root->left), $this->maxDepth($root->right)) + 1;\n    }\n}\n\n/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc maxDepth(root *TreeNode) int {\n    // 递归返回条件\n    if root == nil {\n        return 0\n    }\n\n    // 分治\n    left := maxDepth(root.Left)\n    right:= maxDepth(root.Right)\n\n    // 合并结果\n    if left > right {\n        return left + 1\n    }\n\n    return right + 1\n}\n\n方法二、广度优先搜索\n思路\n基于广度优先搜索（非递归法）的变形。\n广度优先搜索是每次从队列中取出一个节点进行消费，并把它的左右节点（若存在）放入队尾。\n变形后，让每次消费节点时，遍历（内层）取出队列中当前层全部的节点，并把它的左右节点（若存在）放入队尾，这样用计数器记录外层遍历的次数，即最大高度。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(m)\n队列大小m，最坏为n\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Integer\n     */\n    function maxDepth($root) {\n        if(!$root) return 0;\n        $list = [];\n        $list[] = $root;\n        $height  = 0;\n        while(count($list) > 0) {\n            $curlen = count($list);\n            // 每次取出当前层全部的节点\n            while( $curlen > 0 ) {\n                $top = array_shift($list);\n                if($top->left) $list[] = $top->left;\n                if($top->right) $list[] = $top->right;\n                $curlen--;\n            }\n            $height++;\n        }\n\n        return $height;\n    }\n}\n\n"},"tree/validate-binary-search-tree.html":{"url":"tree/validate-binary-search-tree.html","title":"验证二叉搜索树","keywords":"","body":"验证二叉搜索树\n方法一、递归法\n思路\n二叉搜索树特征\n1.节点的左子树只包含小于当前节点的数。\n2.节点的右子树只包含大于当前节点的数。\n3.所有左子树和右子树自身必须也是二叉搜索树。\n递归法\n判断当前节点是否符合二叉搜索树\n终止：当前为空；\n递：所有左子树和右子树自身必须“先是”二叉搜索树；\n归：判断节点值是否在 (min, max) 范围内。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Boolean\n     */\n    function isValidBST($root) {\n        return $this->helper($root, '-inf', '+inf');\n    }\n\n    /**\n     * 判断当前节点是否符合二叉搜索树\n     * @param min 表示当前节点的最小取值（开区间点），-inf 表示负无穷\n     * @param max 表示当前节点的最大取值（开区间点），+inf 表示正无穷\n     */\n    function helper($root, $min, $max)\n    {\n        if($root === null) return true;\n\n        // 所有左子树和右子树自身必须“先是”二叉搜索树。\n        if(!$this->helper($root->left, $min, $root->val)){\n            return false;\n        }\n\n        if(!$this->helper($root->right, $root->val, $max)){\n            return false;\n        }\n\n        // 判断节点值是否在 (min, max) 范围内\n        if( $min !== '-inf' && $root->val val >= $max )  {\n            return false;\n        }\n\n        return true;\n    }\n}\n\n/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc isValidBST(root *TreeNode) bool {\n    result := helper(root)\n\n    return result.IsValid\n}\n\n// 递归返回结果中需要返回的三个值\ntype ResType struct {\n    IsValid bool\n    MinNode *TreeNode // 当前节点和子孙节点最小值的节点\n    MaxNode *TreeNode // 大\n}\n\nfunc helper(node *TreeNode) ResType {\n    result := ResType{}\n    if node == nil {\n        result.IsValid = true\n        return result\n    }\n\n    left := helper(node.Left)\n    right := helper(node.Right)\n\n    // 左右子树无效，则当前树一定不是有效的\n    if !left.IsValid || !right.IsValid {\n        result.IsValid = false\n        return result\n    }\n\n    // 根节点要大于左路的最大值，小于右路的最小值\n    if left.MaxNode != nil && node.Val = right.MinNode.Val {\n        result.IsValid = false\n        return result\n    }\n\n    result.IsValid = true\n\n    // 重新判断当前树上谁是最大值点，最小值点\n    result.MinNode = left.MinNode\n    if left.MinNode == nil {\n        result.MinNode = node\n    }\n\n    result.MaxNode = right.MaxNode\n    if right.MaxNode == nil {\n        result.MaxNode = node\n    }\n\n    result.IsValid = true\n    return result\n}\n\n方法二、迭代法\n思路\n迭代法，递归法转迭代必然需要用到队列进行辅助。\n先把两个根节点放入队列；\n遍历弹出两个节点，进行比较：\n\n若两个节点（p、q）都是null，则局部是对称的，继续下一遍历；\n若有一个节点不为空，或者两个节点的值不相等，则不对称，直接返回false；\n将把节点p的左子节点和节点q的右子节点放入队列，将把节点p的右子节点和节点q的左子节点放入队列。\n进行下一循环。\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Boolean\n     */\n    function isSymmetric($root) {\n        $list = [];\n        $list[] = $root;\n        $list[] = $root;\n        while(count($list) > 0) {\n            $p = array_shift($list);\n            $q = array_shift($list);\n\n            if($p == null && $q == null) continue;\n\n            if(($p == null) || ($q == null) || ($p->val != $q->val)) return false;\n\n            $list[] = $p->left;\n            $list[] = $q->right;\n\n            $list[] = $p->right;\n            $list[] = $q->left;\n        }\n\n        return true;\n    }\n}\n\n"},"tree/symmetric-tree.html":{"url":"tree/symmetric-tree.html","title":"对称二叉树","keywords":"","body":"对称二叉树\n方法一、递归法\n思路\n左右子树是否对称？\n\n值是否相同；\n左子树的左子树和右子树的右子树是否对称；\n左子树的右子树和右子树的左子树是否对称\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val) { $this->val = $val; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Boolean\n     */\n    function isSymmetric($root) {\n        return $this->check($root, $root);\n    }\n\n    /**\n     * 判断左右子树是否对称\n     */\n    function check($p, $q)\n    {\n        if(!$p && !$q) return true;\n        if(!$p || !$q) return false;\n\n        // 左右子树是否对称？\n        // 1. 值是否相同；\n        // 2. 左子树的左子树和右子树的右子树是否对称；\n        // 3. 左子树的右子树和右子树的左子树是否对称\n        return ($p->val == $q->val) && $this->check($p->left, $q->right) && $this->check($p->right, $q->left);\n    }\n}\n\n方法二、非递归法\n思路\n递归改为非递归法，借助队列来实现。\n让左子树的左子树和右子树的右子树紧挨着入队，出队时进行比较；\n让左子树的右子树和右子树的左子树紧挨着入队，出队时进行比较。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Boolean\n     */\n    function isSymmetric($root) {\n        $list = [];\n        $list[] = $root;\n        $list[] = $root;\n        while(count($list) > 0) {\n            $p = array_shift($list);\n            $q = array_shift($list);\n\n            if($p == null && $q == null) continue;\n\n            if(($p == null) || ($q == null) || ($p->val != $q->val)) return false;\n\n            $list[] = $p->left;\n            $list[] = $q->right;\n\n            $list[] = $p->right;\n            $list[] = $q->left;\n        }\n\n        return true;\n    }\n}\n\n"},"tree/binary-tree-level-order-traversal.html":{"url":"tree/binary-tree-level-order-traversal.html","title":"二叉树的层序遍历","keywords":"","body":"二叉树的层序遍历\n方法一\n思路\n为了在输出中体现出“层”的概念，每次从队列中取出当前层的所有节点。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Integer[][]\n     */\n    function levelOrder($root) {\n\n        if($root == null) return [];\n\n        // 队列\n        $list = [];\n        $list[] = $root;\n\n        // 结果集\n        $output = [];\n        while(count($list) > 0) {\n            $curlen = count($list);\n            $temp = [];\n            // 取出当前层的所有节点\n            while($curlen > 0) {\n                $top = array_shift($list);\n                $temp[] = $top->val;\n                if($top->left) $list[] = $top->left;\n                if($top->right) $list[] = $top->right;\n                $curlen--;\n            }\n\n            $output[] = $temp;\n        }\n\n        return $output;\n    }\n}\n\n/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\nfunc levelOrder(root *TreeNode) [][]int {\n    result := make([][]int, 0)\n    if root == nil {\n        return result\n    }\n    queue := make([]*TreeNode, 0)\n    queue = append(queue, root)\n    for len(queue) > 0 {\n        resultItem := make([]int, 0)\n        l := len(queue)\n        for i := 0; i \n方法二\n思路\n由于输出时，需要体现“层”，队列的每个 item 需要保存节点和节点的层数。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(n)\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($value) { $this->val = $value; }\n * }\n */\nclass Solution {\n\n    /**\n     * @param TreeNode $root\n     * @return Integer[][]\n     */\n    function levelOrder($root) {\n        if($root === null) return [];\n\n        // 队列\n        $list = [\n            [$root, 1], // 根节点\n        ];\n        // 输出\n        $output = [[$root->val]];\n        while(count($list) > 0) {\n            list($node, $level) = array_shift($list);\n            if($node->left !== null) {\n                $output[$level][] = $node->left->val;\n                $list[] = [$node->left, $level + 1];\n            }\n            if($node->right !== null) {\n                $output[$level][] = $node->right->val;\n                $list[] = [$node->right, $level + 1];\n            }\n        }\n\n        return $output;\n    }\n}\n\n"},"tree/convert-sorted-array-to-binary-search-tree.html":{"url":"tree/convert-sorted-array-to-binary-search-tree.html","title":"将有序数组转换为二叉搜索树","keywords":"","body":"将有序数组转换为二叉搜索树\n思路\n二分法（递归）\n二叉搜索树是有序的，传入数组也是有序的，有序就要想到二分法。最简单保持树平衡的方式，就是使根节点左右子孙树节点相差不超过1个\n（总节点数为奇数时，左右子树节点数相同；为偶数时，左右子树节点数差一）。\n二叉搜索树中序遍历的结果，则是一个有序数组。但并不能确定根节点的位置，任何一个点都可能是根节点。当增加了高度平衡这个条件时，有序数组中间位置就可以确定是树的根节点了。以这个思路把有序数组重新构建回二叉搜索树。\n复杂度\n时间复杂度：O(nlogN)\nphp 内置函数 array_slice 为n，树构建为logN\n空间复杂度：O(n)\n递归栈为n\n代码\n/**\n * Definition for a binary tree node.\n * class TreeNode {\n *     public $val = null;\n *     public $left = null;\n *     public $right = null;\n *     function __construct($val = 0, $left = null, $right = null) {\n *         $this->val = $val;\n *         $this->left = $left;\n *         $this->right = $right;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return TreeNode\n     */\n    function sortedArrayToBST($nums) {\n        return $this->helper($nums, 0, count($nums) - 1);\n    }\n\n    function helper($nums, $low, $hight)\n    {\n        if($low > $hight) return null;\n\n        $mid = intval(($low + $hight) / 2);\n\n        $node = new TreeNode($nums[$mid]);\n        $node->left = $this->helper($nums, $low, $mid - 1);\n        $node->right = $this->helper($nums, $mid + 1, $hight);\n\n        return $node;\n    }\n}\n\n"},"sort-search/summary.html":{"url":"sort-search/summary.html","title":"排序和搜索","keywords":"","body":"排序和搜索\n"},"sort-search/merge-sorted-array.html":{"url":"sort-search/merge-sorted-array.html","title":"合并两个有序数组","keywords":"","body":"合并两个有序数组\n思路\n双指针法。\n利用双指针从尾部遍历，即 nums1 从 m - 1 处向前，nums2 从 n - 1 处向前。\n由于 nums1 已经开辟了足够的空间，遍历两个数组时比较谁大，谁插入 nums1 的尾部。\n可能会出现一种特殊情况，nums1 的 m 指针已经到 -1 了，但 nums2 的 n 指针还没遍历完，最后直接把他塞入 nums1 中即可。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums1\n     * @param Integer $m\n     * @param Integer[] $nums2\n     * @param Integer $n\n     * @return NULL\n     */\n    function merge(&$nums1, $m, $nums2, $n) {\n        $i = count($nums1) -1;\n\n        $m = $m - 1;\n        $n = $n - 1;\n        while($m >=0 && $n >= 0) {\n            if($nums1[$m] >= $nums2[$n]) {\n                $nums1[$i] = $nums1[$m];\n                $m--;\n            } else {\n                $nums1[$i] = $nums2[$n];\n                $n--;\n            }\n\n            $i--;\n        }\n\n        if($n >= 0) {\n            while($n >= 0) {\n                $nums1[$i] = $nums2[$n];\n                $n--;\n                $i--;\n            }\n        }\n\n        return $nums1;\n    }\n}\n\n"},"sort-search/first-bad-version.html":{"url":"sort-search/first-bad-version.html","title":"第一个错误的版本","keywords":"","body":"第一个错误的版本\n思路\n典型的二分查找\n复杂度\n时间复杂度：O(logn)\n空间复杂度：O(1)\n代码\n/* The isBadVersion API is defined in the parent class VersionControl.\n      public function isBadVersion($version){} */\n\n      class Solution extends VersionControl {\n        /**\n         * 二分法\n         * @param Integer $n\n         * @return Integer\n         */\n        function firstBadVersion($n) {\n            $low = 1;\n            $hight = $n;\n            while($low isBadVersion($mid)) {\n                    $hight = $mid;\n                } else {\n                    $low = $mid + 1;\n                }\n            }\n\n            return $low;\n        }\n    }\n\n"},"dynamic-programming/summary.html":{"url":"dynamic-programming/summary.html","title":"动态规划","keywords":"","body":"动态规划\n"},"dynamic-programming/climbing-stairs.html":{"url":"dynamic-programming/climbing-stairs.html","title":"爬楼梯","keywords":"","body":"爬楼梯\n思路\n动态规划\n第1级台阶：1种方法（爬1级）；\n第2级台阶：2种方法（爬2个1级或1个2级）；\n第N级台阶：从第n-1级台阶爬1级或从第n-2级台阶爬2级（由于限制只能爬1级或2级）；\n所以第N级台阶的爬楼方案等于n-1级方案和n-2级方案之和，即f(n) = f(n-1) + f(n-2)。\n推出动态方程公式后，很容易想到递归法，但是递归法，重复计算量大，运行时间超时。所以使用三个滑动块来做，方案更优。\n// 递归\nfunction helper($n){\n    if($n == 1) return 1;\n    if($n == 2) return 2;\n\n    // 这次多次重复递归计算\n    return $this->helper($n - 1) + $this->helper($n - 2);\n}\n这题也符合斐波那契数列。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function climbStairs($n) {\n        $p1 = 0;\n        $p2 = 0;\n        $p3 = 1; // 第一个点 i = 1 的值\n        for($i = 1; $i \n"},"dynamic-programming/best-time-to-buy-and-sell-stock.html":{"url":"dynamic-programming/best-time-to-buy-and-sell-stock.html","title":"买卖股票的最佳时机","keywords":"","body":"买卖股票的最佳时机\n思路\n最低价时买入，与最低价差价最大时卖出。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O()\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $prices\n     * @return Integer\n     */\n    function maxProfit($prices) {\n        $minPrice = PHP_INT_MAX;\n        $maxProfit = 0;\n        for($i = 0; $i  $maxProfit) { // 与最低价差价最大时，更新最大收益\n                $maxProfit = $prices[$i] - $minPrice;\n            }\n        }\n\n        return $maxProfit;\n    }\n}\n\n系列题目\n数组-买卖股票的最佳时机 II\n动态规划-买卖股票的最佳时机\n买卖股票的最佳时机 II 可以多次买入多次卖出，这样的话，实际上就是求前后两个上升数的和，无需确定买入点。\n买卖股票的最佳时机 只能买入一次，相当于全局控制最大收益，需要确定买入点。\n"},"dynamic-programming/maximum-subarray.html":{"url":"dynamic-programming/maximum-subarray.html","title":"最大子序和","keywords":"","body":"最大子序和\n方法一、贪心算法\n思路\n假设，从第一个元素开始向后遍历累加，得[当前连续子序列和] sum。\n当 sum 加上当前元素后，得到新 sum；\n若新 sum 大于[最大连续的子序列和] maxSum 时，则更新 maxSum，说明当前遍元素是正数，对 sum 是增益效果；\n若新 sum 没有大于 maxSum 时，此时按兵不动，说明当前元素是一个相反数小于 sum 的负数，这个负数对 sum 是减益效果，sum 加上当前元素后变小，但不影响大局；\n若新 sum 小于 0 时，说明当前元素是一个相反数大于 sum 的负数，sum 加上当前元素后，全盘皆输。sum 要放弃当前连续序列，从下一元素重新开始累加。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxSubArray($nums) {\n        // 最大连续的子序列和\n        $maxSum = PHP_INT_MIN;\n        // 当前连续子序列和\n        $sum = 0;\n\n        for($i = 0; $i  $maxSum) {\n                $maxSum = $sum;\n            }\n            // 当前连续和小于0，则需重置，重新连续计算\n            if($sum \n方法二、动态规划法\n思路\n题外话：@老虎 老哥在详细解读动态规划的实现, 易理解一文中提到，动态规划的核心是“以子序列的结束点为基准，向前递推子序列关系”这点，个人感觉对理解动态规划有很大的帮助。\n将求 [整个序列最大序列和] 拆分成求 [以a[i]为子序列末端的最大序子列连续和]，将 [以a[i]为子序列末端的最大序子列连续和]，记为 f(i)。\n若求 [整个序列最大序列和] 则是求 i 取 [0, len -1]时，f(i) 的最大值。\n如何求 f(i)？\nf(i) 与 f(i-1) 、a[i] 有关。[以a[i-1]为子序列末端的最大序子列连续和]，即 f(i-1) 加上当前元素 a[i] 后，\n若“和”增加，f(i-1) 对 a[i]是增益效果，则 f(i-1) + a[i] 作为 f(i) 的值；\n若“和”减少，f(i-1) 对 a[i]是减益效果，则抛弃 f(i-1)，直接取 a[i] 作为 f(i)。（取a[i]相当于重新开始去探索可能存在的新的连续序列最大值）\n所以可以得到动态转移方程：\nf(i) = max( f(i-1) + a[i], a[i] )\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function maxSubArray($nums) {\n        // 最大和 \n        $max = PHP_INT_MIN;\n        // 记录以a[i]为子序列末端的最大序子列连续和\n        $sum = 0;\n        for($i = 0; $i \n"},"dynamic-programming/house-robber.html":{"url":"dynamic-programming/house-robber.html","title":"打家劫舍","keywords":"","body":"打家劫舍\n思路\n动态规划\n将求整个打劫的最大金额拆分为求若干个遍历到i时的最大打劫金额，并记为f(i)。\n若求整个打劫的最大金额则变成了求 i 取 [0, len] 时，f(i) 的最大值。\n如何求 f(i) ?\n分析：遍历到 i 点的最大打劫金额 f(i) 取决于 f(i-1) 、f(i-2) 、nums[i]。\n一种情况是不打劫 nums[i] ，那么 f(i) 就等于 f(i-1)；\n另一种情况则是打劫 nums[i] ， 打劫了nums[i]，则必然不能打劫 nums[i-1]，那么 f(i) 就等于 f(i-2) + nums[i]。最终，取两种情况的最大值，作为 f(i)。\n由此可得动态转移方程：\nf(i) = max(f(i-2) + nums[i], f(i-1))\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function rob($nums) {\n        if(count($nums) == 1) return $nums[0];\n        if(count($nums) == 2) return max($nums[0], $nums[1]);\n\n        $hash = [\n            $nums[0],\n            max($nums[0], $nums[1])\n        ];\n        for($i = 2; $i \n上面这段代码利用了长度为 n 的空间复杂度来存储遍历到 i 时的最大打劫金额，实际上每次用到的，只是是 i - 1，i -2 的最大打劫金额，即 f(i-1)，f(i-2)。可以用利用三个滑动变量将其空间复杂度优化至O(1)。\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function rob($nums) {\n        // 全局最大打劫金额\n        $max = 0;\n\n        // 滑动块\n        $p1 = 0;\n        $p2 = 0;\n        $p3 = 0;\n\n        for($i = 0; $i \n"},"design-question/summary.html":{"url":"design-question/summary.html","title":"设计问题","keywords":"","body":"设计问题\n"},"design-question/shuffle-an-array.html":{"url":"design-question/shuffle-an-array.html","title":"打乱数组","keywords":"","body":"打乱数组\n思路\nFisher-Yates 洗牌算法\n遍历数组，把当前元素与随机位置的元素进行交换。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\n/**\n * Fisher-Yates 洗牌算法\n */\nclass Solution {\n    private $nums;\n\n    /**\n     * @param Integer[] $nums\n     */\n    function __construct($nums) {\n        $this->nums = $nums;\n    }\n\n    /**\n     * Resets the array to its original configuration and return it.\n     * @return Integer[]\n     */\n    function reset() {\n        return $this->nums;\n    }\n\n    /**\n     * Returns a random shuffling of the array.\n     * @return Integer[]\n     */\n    function shuffle() {\n        $nums = $this->nums;\n        $len = count($nums);\n        for($i = 0; $i reset();\n * $ret_2 = $obj->shuffle();\n */\n\n"},"design-question/min-stack.html":{"url":"design-question/min-stack.html","title":"最小栈","keywords":"","body":"最小栈\n思路\n利用一个数组模拟栈，一个数组存储当前栈的最小值。\n复杂度\n时间复杂度：O()\n空间复杂度：O()\n代码\nclass MinStack {\n\n    // 栈\n    private $stack = [];\n    // 最小值辅助栈\n    private $minStack = [];\n\n    /**\n     * initialize your data structure here.\n     */\n    function __construct() {\n\n    }\n\n    /**\n     * @param Integer $val\n     * @return NULL\n     */\n    function push($val) {\n        $this->stack[] = $val;\n        if(count($this->minStack) == 0) {\n            $this->minStack[] = $val;\n        } else {\n            $this->minStack[] = min($this->minStack[count($this->minStack) - 1], $val);\n        }\n    }\n\n    /**\n     * @return NULL\n     */\n    function pop() {\n        if(count($this->stack)) {\n            array_pop($this->stack);\n            array_pop($this->minStack);\n        }\n    }\n\n    /**\n     * @return Integer\n     */\n    function top() {\n        if(count($this->stack)) {\n            return $this->stack[count($this->stack) - 1];\n        }\n    }\n\n    /**\n     * @return Integer\n     */\n    function getMin() {\n        if(count($this->stack)) {\n            return $this->minStack[count($this->minStack) - 1];\n        }\n    }\n}\n\ntype MinStack struct {\n    min []int\n    stack []int\n}\n\n\nfunc Constructor() MinStack {\n    return MinStack{}\n}\n\n\nfunc (this *MinStack) Push(val int)  {\n    this.stack = append(this.stack, val)\n    if len(this.min) == 0 {\n        this.min = append(this.min, val)\n    } else {\n        if this.min[len(this.min)-1] > val {\n            this.min = append(this.min, val)\n        } else {\n            this.min = append(this.min, this.min[len(this.min)-1])\n        }\n    }\n}\n\n\nfunc (this *MinStack) Pop()  {\n    this.stack = this.stack[:len(this.stack)-1]\n    this.min = this.min[:len(this.min)-1]\n}\n\n\nfunc (this *MinStack) Top() int {\n    return this.stack[len(this.stack)-1]\n}\n\n\nfunc (this *MinStack) GetMin() int {\n    return this.min[len(this.min)-1]\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * obj := Constructor();\n * obj.Push(val);\n * obj.Pop();\n * param_3 := obj.Top();\n * param_4 := obj.GetMin();\n */\n\n"},"math/summary.html":{"url":"math/summary.html","title":"数学","keywords":"","body":"数学\n"},"math/fizz-buzz.html":{"url":"math/fizz-buzz.html","title":"Fizz Buzz","keywords":"","body":"Fizz Buzz\n思路\n没难度，直接按题意来。\n关于 FizzBuzz 问题还有一个不错的小文章我倒要看看一个FizzBuzz能讲多少道理\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $n\n     * @return String[]\n     */\n    function fizzBuzz($n) {\n        $output = [];\n        for($i = 1; $i \n"},"math/count-primes.html":{"url":"math/count-primes.html","title":"计数质数","keywords":"","body":"计数质数\n思路\n埃氏筛，某个数 i 的 j（j>1）倍一定是合数，标记出全部的合数，其余为质数。详细见代码。\n复杂度\n时间复杂度：O()\n空间复杂度：O()\n代码\nclass Solution {\n\n    /**\n     * 埃氏筛\n     * 某个数 i 的 j（j>1）倍一定是合数，标记出全部的合数，其余为质数\n     * @param Integer $n\n     * @return Integer\n     */\n    function countPrimes($n) {\n        if($n \n"},"math/power-of-three.html":{"url":"math/power-of-three.html","title":"3的幂","keywords":"","body":"3的幂\n方法一、常规循环\n思路\n常规循环法，遍历判断 3**i 是否等于 n，等于则证明 n 是 3 的幂次方。\n复杂度\n时间复杂度：O(logN)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function isPowerOfThree($n) {\n        if($n == 1) return true;\n\n        for($i = 1; 3 ** $i \n方法二、整数限制\n思路\n进阶法，不用循环递归，时间复杂度降低为 O(1)\n32 位机中整型占4个字长，最大值为 2147483647 （2^31 - 1）。\n3的幂次方的最大整数值为 1162261467。计算如下：\n\n若 n 为3的幂次方，则 1162261467 除以 n 一定没有余数，即 1162261467 取模 n 结果一定为 0。否则，n则不是3 的幂次方。\n复杂度\n时间复杂度：O(1)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function isPowerOfThree($n) {\n        return $n > 0 && 1162261467 % $n == 0;\n    }\n}\n\n"},"math/roman-to-integer.html":{"url":"math/roman-to-integer.html","title":"罗马数字转整数","keywords":"","body":"罗马数字转整数\n思路\n\n将所有表示情况列出来\n遍历相加，只有两种情况。1. 单个字符，2. 两个字符\n\n由于传入的测试用例都是合法的，所以不用判断跨位情况，难度大大降低。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * \n     * @param String $s\n     * @return Integer\n     */\n    function romanToInt($s) {\n        $hash = [\n            \"I\" => 1,\n            \"V\" => 5,\n            \"X\" => 10,\n            \"L\" => 50,\n            \"C\" => 100,\n            \"D\" => 500,\n            \"M\" => 1000,\n            \"IV\" => 4,\n            \"IX\" => 9,\n            \"XL\" => 40,\n            \"XC\" => 90,\n            \"CD\" => 400,\n            \"CM\" => 900\n        ];\n\n        $sum = 0;\n\n        for($i = 0; $i \n"},"other/summary.html":{"url":"other/summary.html","title":"其他","keywords":"","body":"其他\n"},"other/number-of-1-bits.html":{"url":"other/number-of-1-bits.html","title":"位1的个数","keywords":"","body":"位1的个数\n思路\n利用十进制 1 (0000……001) 和 n 与运算，根据结果判断最低位的值。\n若结果为 0 ，则最低位为 0；\n若结果为 1 ，则最低位为 1；\n将 n 右移后，继续与运算，然后判断。循环32次。\n复杂度\n时间复杂度：O(1)\n空间复杂度：O(1)\n代码\nclass Solution {\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function hammingWeight($n) {\n        $counter = 0;\n        $mask = 1;\n        for($i = 0; $i > 1;\n        }\n\n        return $counter;\n    }\n}\n\n"},"other/hamming-distance.html":{"url":"other/hamming-distance.html","title":"汉明距离","keywords":"","body":"汉明距离\n思路\n让 x，y 两数进行异或（同为0，异为1）运算，结果值二进制中 1 的个数，就代表两数字对应二进制位不同的位置的个数。\n在利用 题：位1的个数 来计算二进制数中 1 的个数。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $x\n     * @param Integer $y\n     * @return Integer\n     */\n    function hammingDistance($x, $y) {\n        $z = $x ^ $y; // 异或\n\n        return $this->hammingWeight($z);\n    }\n\n    /**\n     * 题：位1的个数\n     */\n    function hammingWeight($num) {\n        $counter = 0;\n        $mask = 1;\n        while($num > 0) {\n            if($num & $mask == 1) {\n                $counter++;\n            }\n            $num = $num >> 1;\n        }\n\n        return $counter;\n    }\n}\n\n"},"other/reverse-bits.html":{"url":"other/reverse-bits.html","title":"颠倒二进制位","keywords":"","body":"颠倒二进制位\n思路\n逐位颠倒，用1与传入值进行与运算，可计算出最低位的值。\n每次遍历时，\n\n传入值与 1 进行与运算，得出最低位的值；\n结果值 ans进行左移一位，然后加入最低位；\n传入值进行右移一位。\n\n复杂度\n时间复杂度：O(1)\n空间复杂度：O(1)\n代码\nclass Solution {\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function reverseBits($n) {\n        $ans = 0;\n        for($i = 0; $i > 1;\n        }\n\n        return $ans;\n    }\n}\n\n"},"other/pascals-triangle.html":{"url":"other/pascals-triangle.html","title":"杨辉三角","keywords":"","body":"杨辉三角\n思路\n把杨辉三角看成一个二维数组，找规律可发现。\n\n每行两边的值都是 1；\n每行内部的值是上一行对应位置元素和它前一个的元素的和。\n\n复杂度\n时间复杂度：O(n^2)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer $numRows\n     * @return Integer[][]\n     */\n    function generate($numRows) {\n        $output = [];\n        for($i = 1; $i \n"},"other/valid-parentheses.html":{"url":"other/valid-parentheses.html","title":"有效的括号","keywords":"","body":"有效的括号\n思路\n利用栈来做。\n\n当字符为 '(', '{', '['时入栈；\n当字符为 ')', '}', ']'时，栈不为空，出栈并判断栈顶元素是否与当前符合对应；\n遍历结束后，栈要为空，才证明字符串中括号正确。\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(m)\n代码\nclass Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isValid($s) {\n        $stack = [];\n\n        for($i = 0; $i \n"},"other/missing-number.html":{"url":"other/missing-number.html","title":"缺失数字","keywords":"","body":"缺失数字\n方法一、键值交换\n思路\n这个题很容易想到借助一个单独的hash表来做，但时并不能满足进阶要求中的空间复杂度要为O(1)。所以不能借助新的辅助数组。\n键值交换\n\n数组 key ，value 交换位置；\n遍历交换后的数组，判断哪个key没有，即为缺失的值。\n\nPS：此法用下列代码维持O(1)的空间复杂度，有些取巧的嫌疑。操作整型数组变成关联数组，这在PHP可以说得通。对于强类型语言来说，就很难实现了，并不能保证O(1)的空间复杂度。\n$nums['L'.$nums[$i]] = $i;\nunset($nums[$i]);\n\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function missingNumber($nums) {\n        // 键值交换\n        for($i = 0; $i \n方法二、数学法\n思路\n利用高斯求和公式。\nnums 是包含 [0, n] 的 n 个元素的数组，有一个 [0, n] 范围数没出现在这个数组中。\n计算 0,1,2,3……n-1,n 数列的和，然后减去 nums 数组整数和，则得到缺失数字的值。\n复杂度\n时间复杂度：O(n)\n空间复杂度：O(1)\n代码\nclass Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function missingNumber($nums) {\n        $n = count($nums);\n        $sum = (1 + $n) * $n / 2;\n\n        return $sum - array_sum($nums);\n    }\n}\n\n"}}}